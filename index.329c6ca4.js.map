{"mappings":"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BAAE;wBAAG;wBAAE;wBAAE;wBAAE;wBAAE;wBAAE;wBAAE;wBAAE;wBAAE;wBAAG;wBAAE;wBAAG;wBAAE;wBAAI;wBAAG;wBAAG;wBAAE;wBAAG;wBAAE;wBAAG;wBAAG;wBAAG;wBAAE;wBAAE;wBAAE;wBAAI;wBAAG;wBAAG;wBAAE;wBAAG;wBAAG;wBAAG;wBAAE;wBAAG;wBAAG;wBAAG;wBAAE;wBAAG;wBAAG;wBAAI;wBAAG;wBAAI;wBAAG;wBAAG;wBAAE;wBAAI;wBAAE;wBAAE;wBAAG;wBAAG;wBAAE;wBAAE;wBAAE;wBAAG;wBAAE;wBAAG;wBAAG;wBAAE;wBAAE;wBAAG;wBAAE;wBAAG;wBAAG;wBAAG;wBAAE;wBAAG;wBAAG;wBAAI;wBAAE;wBAAE;wBAAG;wBAAG;wBAAE;wBAAG;wBAAG;wBAAI;wBAAE;wBAAE;wBAAE;wBAAE;wBAAG;wBAAG;wBAAE;wBAAG;wBAAE;wBAAE;wBAAE;wBAAE;wBAAG;wBAAG;wBAAE;wBAAI;wBAAG;wBAAI;wBAAI;wBAAI;wBAAI;wBAAG;wBAAI;wBAAK;wBAAK;wBAAK;wBAAI;wBAAK;wBAAI;wBAAE;wBAAG;wBAAI;wBAAG;wBAAG;wBAAG;wBAAG;wBAAE;wBAAG;wBAAG;wBAAE;wBAAG;wBAAI;wBAAG;wBAAI;wBAAG;wBAAE;wBAAE;wBAAG;wBAAG;wBAAG;wBAAE;wBAAE;wBAAE;wBAAG;wBAAK;wBAAE;wBAAI;wBAAK;wBAAI;wBAAG;wBAAE;wBAAG;wBAAE;wBAAE;wBAAI;wBAAK;wBAAI;wBAAE;wBAAG;wBAAE;wBAAE;wBAAE;wBAAE;wBAAK;wBAAG;wBAAE;wBAAG;wBAAE;wBAAE;wBAAE;wBAAE;wBAAE;wBAAE;wBAAE;wBAAE;wBAAE;wBAAG;wBAAE;wBAAE;wBAAE;wBAAE;wBAAE;wBAAG;wBAAE;wBAAE;wBAAE;wBAAE;wBAAE;wBAAE;wBAAE;wBAAG;wBAAE;wBAAE;wBAAE;wBAAE;wBAAE;wBAAE;wBAAE;wBAAE;wBAAE;wBAAI;wBAAE;wBAAG;wBAAE;wBAAG;wBAAE;wBAAG;wBAAE;wBAAG;wBAAE;wBAAG;wBAAE;wBAAG;w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","sources":["src/main.js","node_modules/gpu.js/dist/gpu-browser.js"],"sourcesContent":["\"use strict\";\n\nimport {GPU} from 'gpu.js';\nconst gpu = new GPU();\n\n//set canvas width and height to document\n\nconst canvas = document.getElementById('canvas');\n\nconst ctx = canvas.getContext('2d');\n\ncanvas.width = document.body.clientWidth;\ncanvas.height = document.body.clientHeight;\n\nvar width = canvas.width;\nvar height = canvas.height;\n\nconst initial = gpu.createKernel(\n    function() {\n      var redval = Math.trunc(Math.random()*2)\n      var blueval = Math.trunc(Math.random()*2)\n      var greenval = Math.trunc(Math.random()*2)\n      this.color(redval,greenval,blueval);\n    },\n    {useLegacyEncoder:true,output:[width, height],graphical:true});\n\n\nfunction rule(redstatus, bluestatus, greenstatus, redsum, greensum, bluesum){\n    const RANGE = 3;\n    var redavg=redsum/((2*RANGE+1)**2);\n    var blueavg=bluesum/((2*RANGE+1)**2);\n    var greenavg=greensum/((2*RANGE+1)**2);\n    var redval = 0;\n    var blueval = 0;\n    var greenval = 0;\n    if (redavg > 0.42857141799999 && blueavg < 0.5){\n        redval=1;\n    }\n    else{\n        redval=0;\n    }\n    if (blueavg > 0.42857141799999 && greenavg < 0.5){\n        blueval=1;\n    }\n    else{\n        blueval=0;\n    }\n    if (greenavg > 0.42857141799999 && redavg < 0.5){\n        greenval=1;\n    }\n    else{\n        greenval=0;\n    }\n    return [redval,greenval, blueval];\n}\n\ngpu.addFunction(rule,{ argumentTypes: { redstatus: 'Number', bluestatus: 'Number', greenstatus: 'Number', redsum: 'Number', greensum: 'Number', bluesum: 'Number'}, returnType: 'Array(3)' });\n\nconst render = gpu.createKernel(\n    function(pixels, width, height) {\n        const RANGE = 3;\n        let x = this.thread.x;\n        let y = height - 1 - this.thread.y;\n        let index = (x + y * width) * 4;\n        //count live neighbors\n        let redsum = 0;\n        let bluesum = 0;\n        let greensum = 0;\n        for(var j=-RANGE;j<=RANGE;j++){\n            for(var i=-RANGE;i<=RANGE;i++){\n                var h = (x+i+width) % width;\n                var k = (y+j+height) % height;\n                redsum+=pixels[h*4+k*4*width]/255;\n                bluesum+=pixels[h*4+k*4*width+2]/255;\n                greensum+=pixels[h*4+k*4*width+1]/255;\n          }\n        }\n        var redstatus=pixels[index]/255;\n        var bluestatus=pixels[index+2]/255;\n        var greenstatus=pixels[index+1]/255;\n        var [redval, greenval, blueval] = rule(redstatus, bluestatus, greenstatus, redsum, greensum, bluesum);\n        this.color(redval,greenval,blueval);\n    },\n{useLegacyEncoder:true,output:[width, height],graphical:true});\n\ninitial();\n\nvar initPixels = initial.getPixels();\nrender(initPixels,width,height)\nctx.drawImage(render.canvas,0,0);\n\n\nfunction animate(){\n    render(render.getPixels(),width, height)\n    ctx.drawImage(render.canvas,0,0);\n    requestAnimationFrame(animate);\n}\n\nanimate()\n","/**\n * gpu.js\n * http://gpu.rocks/\n *\n * GPU Accelerated JavaScript\n *\n * @version 2.16.0\n * @date Wed Nov 16 2022 15:48:37 GMT-0500 (Eastern Standard Time)\n *\n * @license MIT\n * The MIT License\n *\n * Copyright (c) 2022 gpu.js Team\n */(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.GPU = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.acorn = {}));\n}(this, function (exports) { 'use strict';\n\n\n  var reservedWords = {\n    3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n    5: \"class enum extends super const export import\",\n    6: \"enum\",\n    strict: \"implements interface let package private protected public static yield\",\n    strictBind: \"eval arguments\"\n  };\n\n\n  var ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n\n  var keywords = {\n    5: ecma5AndLessKeywords,\n    \"5module\": ecma5AndLessKeywords + \" export import\",\n    6: ecma5AndLessKeywords + \" const class extends export import super\"\n  };\n\n  var keywordRelationalOperator = /^in(stanceof)?$/;\n\n\n  var nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7c6\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab67\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n  var nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\n  var nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\n  var nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\n  nonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n\n  var astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,477,28,11,0,9,21,155,22,13,52,76,44,33,24,27,35,30,0,12,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,0,33,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,230,43,117,63,32,0,161,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,270,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,754,9486,286,50,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,2357,44,11,6,17,0,370,43,1301,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42710,42,4148,12,221,3,5761,15,7472,3104,541];\n\n  var astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,525,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,4,9,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,232,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1014,0,2,54,8,3,19723,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,419,13,1495,6,110,6,6,9,792487,239];\n\n  function isInAstralSet(code, set) {\n    var pos = 0x10000;\n    for (var i = 0; i < set.length; i += 2) {\n      pos += set[i];\n      if (pos > code) { return false }\n      pos += set[i + 1];\n      if (pos >= code) { return true }\n    }\n  }\n\n\n  function isIdentifierStart(code, astral) {\n    if (code < 65) { return code === 36 }\n    if (code < 91) { return true }\n    if (code < 97) { return code === 95 }\n    if (code < 123) { return true }\n    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }\n    if (astral === false) { return false }\n    return isInAstralSet(code, astralIdentifierStartCodes)\n  }\n\n\n  function isIdentifierChar(code, astral) {\n    if (code < 48) { return code === 36 }\n    if (code < 58) { return true }\n    if (code < 65) { return false }\n    if (code < 91) { return true }\n    if (code < 97) { return code === 95 }\n    if (code < 123) { return true }\n    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }\n    if (astral === false) { return false }\n    return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n  }\n\n\n\n\n\n  var TokenType = function TokenType(label, conf) {\n    if ( conf === void 0 ) conf = {};\n\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop || null;\n    this.updateContext = null;\n  };\n\n  function binop(name, prec) {\n    return new TokenType(name, {beforeExpr: true, binop: prec})\n  }\n  var beforeExpr = {beforeExpr: true}, startsExpr = {startsExpr: true};\n\n\n  var keywords$1 = {};\n\n  function kw(name, options) {\n    if ( options === void 0 ) options = {};\n\n    options.keyword = name;\n    return keywords$1[name] = new TokenType(name, options)\n  }\n\n  var types = {\n    num: new TokenType(\"num\", startsExpr),\n    regexp: new TokenType(\"regexp\", startsExpr),\n    string: new TokenType(\"string\", startsExpr),\n    name: new TokenType(\"name\", startsExpr),\n    eof: new TokenType(\"eof\"),\n\n    bracketL: new TokenType(\"[\", {beforeExpr: true, startsExpr: true}),\n    bracketR: new TokenType(\"]\"),\n    braceL: new TokenType(\"{\", {beforeExpr: true, startsExpr: true}),\n    braceR: new TokenType(\"}\"),\n    parenL: new TokenType(\"(\", {beforeExpr: true, startsExpr: true}),\n    parenR: new TokenType(\")\"),\n    comma: new TokenType(\",\", beforeExpr),\n    semi: new TokenType(\";\", beforeExpr),\n    colon: new TokenType(\":\", beforeExpr),\n    dot: new TokenType(\".\"),\n    question: new TokenType(\"?\", beforeExpr),\n    arrow: new TokenType(\"=>\", beforeExpr),\n    template: new TokenType(\"template\"),\n    invalidTemplate: new TokenType(\"invalidTemplate\"),\n    ellipsis: new TokenType(\"...\", beforeExpr),\n    backQuote: new TokenType(\"`\", startsExpr),\n    dollarBraceL: new TokenType(\"${\", {beforeExpr: true, startsExpr: true}),\n\n\n    eq: new TokenType(\"=\", {beforeExpr: true, isAssign: true}),\n    assign: new TokenType(\"_=\", {beforeExpr: true, isAssign: true}),\n    incDec: new TokenType(\"++/--\", {prefix: true, postfix: true, startsExpr: true}),\n    prefix: new TokenType(\"!/~\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    logicalOR: binop(\"||\", 1),\n    logicalAND: binop(\"&&\", 2),\n    bitwiseOR: binop(\"|\", 3),\n    bitwiseXOR: binop(\"^\", 4),\n    bitwiseAND: binop(\"&\", 5),\n    equality: binop(\"==/!=/===/!==\", 6),\n    relational: binop(\"</>/<=/>=\", 7),\n    bitShift: binop(\"<</>>/>>>\", 8),\n    plusMin: new TokenType(\"+/-\", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),\n    modulo: binop(\"%\", 10),\n    star: binop(\"*\", 10),\n    slash: binop(\"/\", 10),\n    starstar: new TokenType(\"**\", {beforeExpr: true}),\n\n    _break: kw(\"break\"),\n    _case: kw(\"case\", beforeExpr),\n    _catch: kw(\"catch\"),\n    _continue: kw(\"continue\"),\n    _debugger: kw(\"debugger\"),\n    _default: kw(\"default\", beforeExpr),\n    _do: kw(\"do\", {isLoop: true, beforeExpr: true}),\n    _else: kw(\"else\", beforeExpr),\n    _finally: kw(\"finally\"),\n    _for: kw(\"for\", {isLoop: true}),\n    _function: kw(\"function\", startsExpr),\n    _if: kw(\"if\"),\n    _return: kw(\"return\", beforeExpr),\n    _switch: kw(\"switch\"),\n    _throw: kw(\"throw\", beforeExpr),\n    _try: kw(\"try\"),\n    _var: kw(\"var\"),\n    _const: kw(\"const\"),\n    _while: kw(\"while\", {isLoop: true}),\n    _with: kw(\"with\"),\n    _new: kw(\"new\", {beforeExpr: true, startsExpr: true}),\n    _this: kw(\"this\", startsExpr),\n    _super: kw(\"super\", startsExpr),\n    _class: kw(\"class\", startsExpr),\n    _extends: kw(\"extends\", beforeExpr),\n    _export: kw(\"export\"),\n    _import: kw(\"import\", startsExpr),\n    _null: kw(\"null\", startsExpr),\n    _true: kw(\"true\", startsExpr),\n    _false: kw(\"false\", startsExpr),\n    _in: kw(\"in\", {beforeExpr: true, binop: 7}),\n    _instanceof: kw(\"instanceof\", {beforeExpr: true, binop: 7}),\n    _typeof: kw(\"typeof\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    _void: kw(\"void\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    _delete: kw(\"delete\", {beforeExpr: true, prefix: true, startsExpr: true})\n  };\n\n\n  var lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\n  var lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n  function isNewLine(code, ecma2019String) {\n    return code === 10 || code === 13 || (!ecma2019String && (code === 0x2028 || code === 0x2029))\n  }\n\n  var nonASCIIwhitespace = /[\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\n  var skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\n  var ref = Object.prototype;\n  var hasOwnProperty = ref.hasOwnProperty;\n  var toString = ref.toString;\n\n\n  function has(obj, propName) {\n    return hasOwnProperty.call(obj, propName)\n  }\n\n  var isArray = Array.isArray || (function (obj) { return (\n    toString.call(obj) === \"[object Array]\"\n  ); });\n\n  function wordsRegexp(words) {\n    return new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\")\n  }\n\n\n  var Position = function Position(line, col) {\n    this.line = line;\n    this.column = col;\n  };\n\n  Position.prototype.offset = function offset (n) {\n    return new Position(this.line, this.column + n)\n  };\n\n  var SourceLocation = function SourceLocation(p, start, end) {\n    this.start = start;\n    this.end = end;\n    if (p.sourceFile !== null) { this.source = p.sourceFile; }\n  };\n\n\n  function getLineInfo(input, offset) {\n    for (var line = 1, cur = 0;;) {\n      lineBreakG.lastIndex = cur;\n      var match = lineBreakG.exec(input);\n      if (match && match.index < offset) {\n        ++line;\n        cur = match.index + match[0].length;\n      } else {\n        return new Position(line, offset - cur)\n      }\n    }\n  }\n\n\n  var defaultOptions = {\n    ecmaVersion: 10,\n    sourceType: \"script\",\n    onInsertedSemicolon: null,\n    onTrailingComma: null,\n    allowReserved: null,\n    allowReturnOutsideFunction: false,\n    allowImportExportEverywhere: false,\n    allowAwaitOutsideFunction: false,\n    allowHashBang: false,\n    locations: false,\n    onToken: null,\n    onComment: null,\n    ranges: false,\n    program: null,\n    sourceFile: null,\n    directSourceFile: null,\n    preserveParens: false\n  };\n\n\n  function getOptions(opts) {\n    var options = {};\n\n    for (var opt in defaultOptions)\n      { options[opt] = opts && has(opts, opt) ? opts[opt] : defaultOptions[opt]; }\n\n    if (options.ecmaVersion >= 2015)\n      { options.ecmaVersion -= 2009; }\n\n    if (options.allowReserved == null)\n      { options.allowReserved = options.ecmaVersion < 5; }\n\n    if (isArray(options.onToken)) {\n      var tokens = options.onToken;\n      options.onToken = function (token) { return tokens.push(token); };\n    }\n    if (isArray(options.onComment))\n      { options.onComment = pushComment(options, options.onComment); }\n\n    return options\n  }\n\n  function pushComment(options, array) {\n    return function(block, text, start, end, startLoc, endLoc) {\n      var comment = {\n        type: block ? \"Block\" : \"Line\",\n        value: text,\n        start: start,\n        end: end\n      };\n      if (options.locations)\n        { comment.loc = new SourceLocation(this, startLoc, endLoc); }\n      if (options.ranges)\n        { comment.range = [start, end]; }\n      array.push(comment);\n    }\n  }\n\n  var\n      SCOPE_TOP = 1,\n      SCOPE_FUNCTION = 2,\n      SCOPE_VAR = SCOPE_TOP | SCOPE_FUNCTION,\n      SCOPE_ASYNC = 4,\n      SCOPE_GENERATOR = 8,\n      SCOPE_ARROW = 16,\n      SCOPE_SIMPLE_CATCH = 32,\n      SCOPE_SUPER = 64,\n      SCOPE_DIRECT_SUPER = 128;\n\n  function functionFlags(async, generator) {\n    return SCOPE_FUNCTION | (async ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0)\n  }\n\n  var\n      BIND_NONE = 0, \n      BIND_VAR = 1, \n      BIND_LEXICAL = 2, \n      BIND_FUNCTION = 3, \n      BIND_SIMPLE_CATCH = 4, \n      BIND_OUTSIDE = 5; \n\n  var Parser = function Parser(options, input, startPos) {\n    this.options = options = getOptions(options);\n    this.sourceFile = options.sourceFile;\n    this.keywords = wordsRegexp(keywords[options.ecmaVersion >= 6 ? 6 : options.sourceType === \"module\" ? \"5module\" : 5]);\n    var reserved = \"\";\n    if (options.allowReserved !== true) {\n      for (var v = options.ecmaVersion;; v--)\n        { if (reserved = reservedWords[v]) { break } }\n      if (options.sourceType === \"module\") { reserved += \" await\"; }\n    }\n    this.reservedWords = wordsRegexp(reserved);\n    var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n    this.reservedWordsStrict = wordsRegexp(reservedStrict);\n    this.reservedWordsStrictBind = wordsRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n    this.input = String(input);\n\n    this.containsEsc = false;\n\n\n    if (startPos) {\n      this.pos = startPos;\n      this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n      this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n    } else {\n      this.pos = this.lineStart = 0;\n      this.curLine = 1;\n    }\n\n    this.type = types.eof;\n    this.value = null;\n    this.start = this.end = this.pos;\n    this.startLoc = this.endLoc = this.curPosition();\n\n    this.lastTokEndLoc = this.lastTokStartLoc = null;\n    this.lastTokStart = this.lastTokEnd = this.pos;\n\n    this.context = this.initialContext();\n    this.exprAllowed = true;\n\n    this.inModule = options.sourceType === \"module\";\n    this.strict = this.inModule || this.strictDirective(this.pos);\n\n    this.potentialArrowAt = -1;\n\n    this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;\n    this.labels = [];\n    this.undefinedExports = {};\n\n    if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\")\n      { this.skipLineComment(2); }\n\n    this.scopeStack = [];\n    this.enterScope(SCOPE_TOP);\n\n    this.regexpState = null;\n  };\n\n  var prototypeAccessors = { inFunction: { configurable: true },inGenerator: { configurable: true },inAsync: { configurable: true },allowSuper: { configurable: true },allowDirectSuper: { configurable: true },treatFunctionsAsVar: { configurable: true } };\n\n  Parser.prototype.parse = function parse () {\n    var node = this.options.program || this.startNode();\n    this.nextToken();\n    return this.parseTopLevel(node)\n  };\n\n  prototypeAccessors.inFunction.get = function () { return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0 };\n  prototypeAccessors.inGenerator.get = function () { return (this.currentVarScope().flags & SCOPE_GENERATOR) > 0 };\n  prototypeAccessors.inAsync.get = function () { return (this.currentVarScope().flags & SCOPE_ASYNC) > 0 };\n  prototypeAccessors.allowSuper.get = function () { return (this.currentThisScope().flags & SCOPE_SUPER) > 0 };\n  prototypeAccessors.allowDirectSuper.get = function () { return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0 };\n  prototypeAccessors.treatFunctionsAsVar.get = function () { return this.treatFunctionsAsVarInScope(this.currentScope()) };\n\n  Parser.prototype.inNonArrowFunction = function inNonArrowFunction () { return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0 };\n\n  Parser.extend = function extend () {\n      var plugins = [], len = arguments.length;\n      while ( len-- ) plugins[ len ] = arguments[ len ];\n\n    var cls = this;\n    for (var i = 0; i < plugins.length; i++) { cls = plugins[i](cls); }\n    return cls\n  };\n\n  Parser.parse = function parse (input, options) {\n    return new this(options, input).parse()\n  };\n\n  Parser.parseExpressionAt = function parseExpressionAt (input, pos, options) {\n    var parser = new this(options, input, pos);\n    parser.nextToken();\n    return parser.parseExpression()\n  };\n\n  Parser.tokenizer = function tokenizer (input, options) {\n    return new this(options, input)\n  };\n\n  Object.defineProperties( Parser.prototype, prototypeAccessors );\n\n  var pp = Parser.prototype;\n\n\n  var literal = /^(?:'((?:\\\\.|[^'])*?)'|\"((?:\\\\.|[^\"])*?)\")/;\n  pp.strictDirective = function(start) {\n    for (;;) {\n      skipWhiteSpace.lastIndex = start;\n      start += skipWhiteSpace.exec(this.input)[0].length;\n      var match = literal.exec(this.input.slice(start));\n      if (!match) { return false }\n      if ((match[1] || match[2]) === \"use strict\") { return true }\n      start += match[0].length;\n\n      skipWhiteSpace.lastIndex = start;\n      start += skipWhiteSpace.exec(this.input)[0].length;\n      if (this.input[start] === \";\")\n        { start++; }\n    }\n  };\n\n\n  pp.eat = function(type) {\n    if (this.type === type) {\n      this.next();\n      return true\n    } else {\n      return false\n    }\n  };\n\n\n  pp.isContextual = function(name) {\n    return this.type === types.name && this.value === name && !this.containsEsc\n  };\n\n\n  pp.eatContextual = function(name) {\n    if (!this.isContextual(name)) { return false }\n    this.next();\n    return true\n  };\n\n\n  pp.expectContextual = function(name) {\n    if (!this.eatContextual(name)) { this.unexpected(); }\n  };\n\n\n  pp.canInsertSemicolon = function() {\n    return this.type === types.eof ||\n      this.type === types.braceR ||\n      lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n  };\n\n  pp.insertSemicolon = function() {\n    if (this.canInsertSemicolon()) {\n      if (this.options.onInsertedSemicolon)\n        { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }\n      return true\n    }\n  };\n\n\n  pp.semicolon = function() {\n    if (!this.eat(types.semi) && !this.insertSemicolon()) { this.unexpected(); }\n  };\n\n  pp.afterTrailingComma = function(tokType, notNext) {\n    if (this.type === tokType) {\n      if (this.options.onTrailingComma)\n        { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }\n      if (!notNext)\n        { this.next(); }\n      return true\n    }\n  };\n\n\n  pp.expect = function(type) {\n    this.eat(type) || this.unexpected();\n  };\n\n\n  pp.unexpected = function(pos) {\n    this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n  };\n\n  function DestructuringErrors() {\n    this.shorthandAssign =\n    this.trailingComma =\n    this.parenthesizedAssign =\n    this.parenthesizedBind =\n    this.doubleProto =\n      -1;\n  }\n\n  pp.checkPatternErrors = function(refDestructuringErrors, isAssign) {\n    if (!refDestructuringErrors) { return }\n    if (refDestructuringErrors.trailingComma > -1)\n      { this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\"); }\n    var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n    if (parens > -1) { this.raiseRecoverable(parens, \"Parenthesized pattern\"); }\n  };\n\n  pp.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n    if (!refDestructuringErrors) { return false }\n    var shorthandAssign = refDestructuringErrors.shorthandAssign;\n    var doubleProto = refDestructuringErrors.doubleProto;\n    if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }\n    if (shorthandAssign >= 0)\n      { this.raise(shorthandAssign, \"Shorthand property assignments are valid only in destructuring patterns\"); }\n    if (doubleProto >= 0)\n      { this.raiseRecoverable(doubleProto, \"Redefinition of __proto__ property\"); }\n  };\n\n  pp.checkYieldAwaitInDefaultParams = function() {\n    if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))\n      { this.raise(this.yieldPos, \"Yield expression cannot be a default value\"); }\n    if (this.awaitPos)\n      { this.raise(this.awaitPos, \"Await expression cannot be a default value\"); }\n  };\n\n  pp.isSimpleAssignTarget = function(expr) {\n    if (expr.type === \"ParenthesizedExpression\")\n      { return this.isSimpleAssignTarget(expr.expression) }\n    return expr.type === \"Identifier\" || expr.type === \"MemberExpression\"\n  };\n\n  var pp$1 = Parser.prototype;\n\n\n\n  pp$1.parseTopLevel = function(node) {\n    var exports = {};\n    if (!node.body) { node.body = []; }\n    while (this.type !== types.eof) {\n      var stmt = this.parseStatement(null, true, exports);\n      node.body.push(stmt);\n    }\n    if (this.inModule)\n      { for (var i = 0, list = Object.keys(this.undefinedExports); i < list.length; i += 1)\n        {\n          var name = list[i];\n\n          this.raiseRecoverable(this.undefinedExports[name].start, (\"Export '\" + name + \"' is not defined\"));\n        } }\n    this.adaptDirectivePrologue(node.body);\n    this.next();\n    node.sourceType = this.options.sourceType;\n    return this.finishNode(node, \"Program\")\n  };\n\n  var loopLabel = {kind: \"loop\"}, switchLabel = {kind: \"switch\"};\n\n  pp$1.isLet = function(context) {\n    if (this.options.ecmaVersion < 6 || !this.isContextual(\"let\")) { return false }\n    skipWhiteSpace.lastIndex = this.pos;\n    var skip = skipWhiteSpace.exec(this.input);\n    var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n    if (nextCh === 91) { return true } \n    if (context) { return false }\n\n    if (nextCh === 123) { return true } \n    if (isIdentifierStart(nextCh, true)) {\n      var pos = next + 1;\n      while (isIdentifierChar(this.input.charCodeAt(pos), true)) { ++pos; }\n      var ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) { return true }\n    }\n    return false\n  };\n\n  pp$1.isAsyncFunction = function() {\n    if (this.options.ecmaVersion < 8 || !this.isContextual(\"async\"))\n      { return false }\n\n    skipWhiteSpace.lastIndex = this.pos;\n    var skip = skipWhiteSpace.exec(this.input);\n    var next = this.pos + skip[0].length;\n    return !lineBreak.test(this.input.slice(this.pos, next)) &&\n      this.input.slice(next, next + 8) === \"function\" &&\n      (next + 8 === this.input.length || !isIdentifierChar(this.input.charAt(next + 8)))\n  };\n\n\n  pp$1.parseStatement = function(context, topLevel, exports) {\n    var starttype = this.type, node = this.startNode(), kind;\n\n    if (this.isLet(context)) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n\n    switch (starttype) {\n    case types._break: case types._continue: return this.parseBreakContinueStatement(node, starttype.keyword)\n    case types._debugger: return this.parseDebuggerStatement(node)\n    case types._do: return this.parseDoStatement(node)\n    case types._for: return this.parseForStatement(node)\n    case types._function:\n      if ((context && (this.strict || context !== \"if\" && context !== \"label\")) && this.options.ecmaVersion >= 6) { this.unexpected(); }\n      return this.parseFunctionStatement(node, false, !context)\n    case types._class:\n      if (context) { this.unexpected(); }\n      return this.parseClass(node, true)\n    case types._if: return this.parseIfStatement(node)\n    case types._return: return this.parseReturnStatement(node)\n    case types._switch: return this.parseSwitchStatement(node)\n    case types._throw: return this.parseThrowStatement(node)\n    case types._try: return this.parseTryStatement(node)\n    case types._const: case types._var:\n      kind = kind || this.value;\n      if (context && kind !== \"var\") { this.unexpected(); }\n      return this.parseVarStatement(node, kind)\n    case types._while: return this.parseWhileStatement(node)\n    case types._with: return this.parseWithStatement(node)\n    case types.braceL: return this.parseBlock(true, node)\n    case types.semi: return this.parseEmptyStatement(node)\n    case types._export:\n    case types._import:\n      if (this.options.ecmaVersion > 10 && starttype === types._import) {\n        skipWhiteSpace.lastIndex = this.pos;\n        var skip = skipWhiteSpace.exec(this.input);\n        var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n        if (nextCh === 40) \n          { return this.parseExpressionStatement(node, this.parseExpression()) }\n      }\n\n      if (!this.options.allowImportExportEverywhere) {\n        if (!topLevel)\n          { this.raise(this.start, \"'import' and 'export' may only appear at the top level\"); }\n        if (!this.inModule)\n          { this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\"); }\n      }\n      return starttype === types._import ? this.parseImport(node) : this.parseExport(node, exports)\n\n    default:\n      if (this.isAsyncFunction()) {\n        if (context) { this.unexpected(); }\n        this.next();\n        return this.parseFunctionStatement(node, true, !context)\n      }\n\n      var maybeName = this.value, expr = this.parseExpression();\n      if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon))\n        { return this.parseLabeledStatement(node, maybeName, expr, context) }\n      else { return this.parseExpressionStatement(node, expr) }\n    }\n  };\n\n  pp$1.parseBreakContinueStatement = function(node, keyword) {\n    var isBreak = keyword === \"break\";\n    this.next();\n    if (this.eat(types.semi) || this.insertSemicolon()) { node.label = null; }\n    else if (this.type !== types.name) { this.unexpected(); }\n    else {\n      node.label = this.parseIdent();\n      this.semicolon();\n    }\n\n    var i = 0;\n    for (; i < this.labels.length; ++i) {\n      var lab = this.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) { break }\n        if (node.label && isBreak) { break }\n      }\n    }\n    if (i === this.labels.length) { this.raise(node.start, \"Unsyntactic \" + keyword); }\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n  };\n\n  pp$1.parseDebuggerStatement = function(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\")\n  };\n\n  pp$1.parseDoStatement = function(node) {\n    this.next();\n    this.labels.push(loopLabel);\n    node.body = this.parseStatement(\"do\");\n    this.labels.pop();\n    this.expect(types._while);\n    node.test = this.parseParenExpression();\n    if (this.options.ecmaVersion >= 6)\n      { this.eat(types.semi); }\n    else\n      { this.semicolon(); }\n    return this.finishNode(node, \"DoWhileStatement\")\n  };\n\n\n  pp$1.parseForStatement = function(node) {\n    this.next();\n    var awaitAt = (this.options.ecmaVersion >= 9 && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction)) && this.eatContextual(\"await\")) ? this.lastTokStart : -1;\n    this.labels.push(loopLabel);\n    this.enterScope(0);\n    this.expect(types.parenL);\n    if (this.type === types.semi) {\n      if (awaitAt > -1) { this.unexpected(awaitAt); }\n      return this.parseFor(node, null)\n    }\n    var isLet = this.isLet();\n    if (this.type === types._var || this.type === types._const || isLet) {\n      var init$1 = this.startNode(), kind = isLet ? \"let\" : this.value;\n      this.next();\n      this.parseVar(init$1, true, kind);\n      this.finishNode(init$1, \"VariableDeclaration\");\n      if ((this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) && init$1.declarations.length === 1) {\n        if (this.options.ecmaVersion >= 9) {\n          if (this.type === types._in) {\n            if (awaitAt > -1) { this.unexpected(awaitAt); }\n          } else { node.await = awaitAt > -1; }\n        }\n        return this.parseForIn(node, init$1)\n      }\n      if (awaitAt > -1) { this.unexpected(awaitAt); }\n      return this.parseFor(node, init$1)\n    }\n    var refDestructuringErrors = new DestructuringErrors;\n    var init = this.parseExpression(true, refDestructuringErrors);\n    if (this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n      if (this.options.ecmaVersion >= 9) {\n        if (this.type === types._in) {\n          if (awaitAt > -1) { this.unexpected(awaitAt); }\n        } else { node.await = awaitAt > -1; }\n      }\n      this.toAssignable(init, false, refDestructuringErrors);\n      this.checkLVal(init);\n      return this.parseForIn(node, init)\n    } else {\n      this.checkExpressionErrors(refDestructuringErrors, true);\n    }\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, init)\n  };\n\n  pp$1.parseFunctionStatement = function(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), false, isAsync)\n  };\n\n  pp$1.parseIfStatement = function(node) {\n    this.next();\n    node.test = this.parseParenExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\")\n  };\n\n  pp$1.parseReturnStatement = function(node) {\n    if (!this.inFunction && !this.options.allowReturnOutsideFunction)\n      { this.raise(this.start, \"'return' outside of function\"); }\n    this.next();\n\n\n    if (this.eat(types.semi) || this.insertSemicolon()) { node.argument = null; }\n    else { node.argument = this.parseExpression(); this.semicolon(); }\n    return this.finishNode(node, \"ReturnStatement\")\n  };\n\n  pp$1.parseSwitchStatement = function(node) {\n    this.next();\n    node.discriminant = this.parseParenExpression();\n    node.cases = [];\n    this.expect(types.braceL);\n    this.labels.push(switchLabel);\n    this.enterScope(0);\n\n\n    var cur;\n    for (var sawDefault = false; this.type !== types.braceR;) {\n      if (this.type === types._case || this.type === types._default) {\n        var isCase = this.type === types._case;\n        if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n        node.cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) { this.raiseRecoverable(this.lastTokStart, \"Multiple default clauses\"); }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(types.colon);\n      } else {\n        if (!cur) { this.unexpected(); }\n        cur.consequent.push(this.parseStatement(null));\n      }\n    }\n    this.exitScope();\n    if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n    this.next(); \n    this.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\")\n  };\n\n  pp$1.parseThrowStatement = function(node) {\n    this.next();\n    if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))\n      { this.raise(this.lastTokEnd, \"Illegal newline after throw\"); }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\")\n  };\n\n\n  var empty = [];\n\n  pp$1.parseTryStatement = function(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n    if (this.type === types._catch) {\n      var clause = this.startNode();\n      this.next();\n      if (this.eat(types.parenL)) {\n        clause.param = this.parseBindingAtom();\n        var simple = clause.param.type === \"Identifier\";\n        this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);\n        this.checkLVal(clause.param, simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);\n        this.expect(types.parenR);\n      } else {\n        if (this.options.ecmaVersion < 10) { this.unexpected(); }\n        clause.param = null;\n        this.enterScope(0);\n      }\n      clause.body = this.parseBlock(false);\n      this.exitScope();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n    node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n    if (!node.handler && !node.finalizer)\n      { this.raise(node.start, \"Missing catch or finally clause\"); }\n    return this.finishNode(node, \"TryStatement\")\n  };\n\n  pp$1.parseVarStatement = function(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\")\n  };\n\n  pp$1.parseWhileStatement = function(node) {\n    this.next();\n    node.test = this.parseParenExpression();\n    this.labels.push(loopLabel);\n    node.body = this.parseStatement(\"while\");\n    this.labels.pop();\n    return this.finishNode(node, \"WhileStatement\")\n  };\n\n  pp$1.parseWithStatement = function(node) {\n    if (this.strict) { this.raise(this.start, \"'with' in strict mode\"); }\n    this.next();\n    node.object = this.parseParenExpression();\n    node.body = this.parseStatement(\"with\");\n    return this.finishNode(node, \"WithStatement\")\n  };\n\n  pp$1.parseEmptyStatement = function(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\")\n  };\n\n  pp$1.parseLabeledStatement = function(node, maybeName, expr, context) {\n    for (var i$1 = 0, list = this.labels; i$1 < list.length; i$1 += 1)\n      {\n      var label = list[i$1];\n\n      if (label.name === maybeName)\n        { this.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n    } }\n    var kind = this.type.isLoop ? \"loop\" : this.type === types._switch ? \"switch\" : null;\n    for (var i = this.labels.length - 1; i >= 0; i--) {\n      var label$1 = this.labels[i];\n      if (label$1.statementStart === node.start) {\n        label$1.statementStart = this.start;\n        label$1.kind = kind;\n      } else { break }\n    }\n    this.labels.push({name: maybeName, kind: kind, statementStart: this.start});\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\")\n  };\n\n  pp$1.parseExpressionStatement = function(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\")\n  };\n\n\n  pp$1.parseBlock = function(createNewLexicalScope, node) {\n    if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;\n    if ( node === void 0 ) node = this.startNode();\n\n    node.body = [];\n    this.expect(types.braceL);\n    if (createNewLexicalScope) { this.enterScope(0); }\n    while (!this.eat(types.braceR)) {\n      var stmt = this.parseStatement(null);\n      node.body.push(stmt);\n    }\n    if (createNewLexicalScope) { this.exitScope(); }\n    return this.finishNode(node, \"BlockStatement\")\n  };\n\n\n  pp$1.parseFor = function(node, init) {\n    node.init = init;\n    this.expect(types.semi);\n    node.test = this.type === types.semi ? null : this.parseExpression();\n    this.expect(types.semi);\n    node.update = this.type === types.parenR ? null : this.parseExpression();\n    this.expect(types.parenR);\n    node.body = this.parseStatement(\"for\");\n    this.exitScope();\n    this.labels.pop();\n    return this.finishNode(node, \"ForStatement\")\n  };\n\n\n  pp$1.parseForIn = function(node, init) {\n    var isForIn = this.type === types._in;\n    this.next();\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (\n        !isForIn ||\n        this.options.ecmaVersion < 8 ||\n        this.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\"\n      )\n    ) {\n      this.raise(\n        init.start,\n        ((isForIn ? \"for-in\" : \"for-of\") + \" loop variable declaration may not have an initializer\")\n      );\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, \"Invalid left-hand side in for-loop\");\n    }\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();\n    this.expect(types.parenR);\n    node.body = this.parseStatement(\"for\");\n    this.exitScope();\n    this.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\")\n  };\n\n\n  pp$1.parseVar = function(node, isFor, kind) {\n    node.declarations = [];\n    node.kind = kind;\n    for (;;) {\n      var decl = this.startNode();\n      this.parseVarId(decl, kind);\n      if (this.eat(types.eq)) {\n        decl.init = this.parseMaybeAssign(isFor);\n      } else if (kind === \"const\" && !(this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\")))) {\n        this.unexpected();\n      } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.type === types._in || this.isContextual(\"of\")))) {\n        this.raise(this.lastTokEnd, \"Complex binding patterns require an initialization value\");\n      } else {\n        decl.init = null;\n      }\n      node.declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types.comma)) { break }\n    }\n    return node\n  };\n\n  pp$1.parseVarId = function(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, kind === \"var\" ? BIND_VAR : BIND_LEXICAL, false);\n  };\n\n  var FUNC_STATEMENT = 1, FUNC_HANGING_STATEMENT = 2, FUNC_NULLABLE_ID = 4;\n\n\n  pp$1.parseFunction = function(node, statement, allowExpressionBody, isAsync) {\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {\n      if (this.type === types.star && (statement & FUNC_HANGING_STATEMENT))\n        { this.unexpected(); }\n      node.generator = this.eat(types.star);\n    }\n    if (this.options.ecmaVersion >= 8)\n      { node.async = !!isAsync; }\n\n    if (statement & FUNC_STATEMENT) {\n      node.id = (statement & FUNC_NULLABLE_ID) && this.type !== types.name ? null : this.parseIdent();\n      if (node.id && !(statement & FUNC_HANGING_STATEMENT))\n        { this.checkLVal(node.id, (this.strict || node.generator || node.async) ? this.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION); }\n    }\n\n    var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    this.enterScope(functionFlags(node.async, node.generator));\n\n    if (!(statement & FUNC_STATEMENT))\n      { node.id = this.type === types.name ? this.parseIdent() : null; }\n\n    this.parseFunctionParams(node);\n    this.parseFunctionBody(node, allowExpressionBody, false);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, (statement & FUNC_STATEMENT) ? \"FunctionDeclaration\" : \"FunctionExpression\")\n  };\n\n  pp$1.parseFunctionParams = function(node) {\n    this.expect(types.parenL);\n    node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n    this.checkYieldAwaitInDefaultParams();\n  };\n\n\n  pp$1.parseClass = function(node, isStatement) {\n    this.next();\n\n    var oldStrict = this.strict;\n    this.strict = true;\n\n    this.parseClassId(node, isStatement);\n    this.parseClassSuper(node);\n    var classBody = this.startNode();\n    var hadConstructor = false;\n    classBody.body = [];\n    this.expect(types.braceL);\n    while (!this.eat(types.braceR)) {\n      var element = this.parseClassElement(node.superClass !== null);\n      if (element) {\n        classBody.body.push(element);\n        if (element.type === \"MethodDefinition\" && element.kind === \"constructor\") {\n          if (hadConstructor) { this.raise(element.start, \"Duplicate constructor in the same class\"); }\n          hadConstructor = true;\n        }\n      }\n    }\n    node.body = this.finishNode(classBody, \"ClassBody\");\n    this.strict = oldStrict;\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n  };\n\n  pp$1.parseClassElement = function(constructorAllowsSuper) {\n    var this$1 = this;\n\n    if (this.eat(types.semi)) { return null }\n\n    var method = this.startNode();\n    var tryContextual = function (k, noLineBreak) {\n      if ( noLineBreak === void 0 ) noLineBreak = false;\n\n      var start = this$1.start, startLoc = this$1.startLoc;\n      if (!this$1.eatContextual(k)) { return false }\n      if (this$1.type !== types.parenL && (!noLineBreak || !this$1.canInsertSemicolon())) { return true }\n      if (method.key) { this$1.unexpected(); }\n      method.computed = false;\n      method.key = this$1.startNodeAt(start, startLoc);\n      method.key.name = k;\n      this$1.finishNode(method.key, \"Identifier\");\n      return false\n    };\n\n    method.kind = \"method\";\n    method.static = tryContextual(\"static\");\n    var isGenerator = this.eat(types.star);\n    var isAsync = false;\n    if (!isGenerator) {\n      if (this.options.ecmaVersion >= 8 && tryContextual(\"async\", true)) {\n        isAsync = true;\n        isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n      } else if (tryContextual(\"get\")) {\n        method.kind = \"get\";\n      } else if (tryContextual(\"set\")) {\n        method.kind = \"set\";\n      }\n    }\n    if (!method.key) { this.parsePropertyName(method); }\n    var key = method.key;\n    var allowsDirectSuper = false;\n    if (!method.computed && !method.static && (key.type === \"Identifier\" && key.name === \"constructor\" ||\n        key.type === \"Literal\" && key.value === \"constructor\")) {\n      if (method.kind !== \"method\") { this.raise(key.start, \"Constructor can't have get/set modifier\"); }\n      if (isGenerator) { this.raise(key.start, \"Constructor can't be a generator\"); }\n      if (isAsync) { this.raise(key.start, \"Constructor can't be an async method\"); }\n      method.kind = \"constructor\";\n      allowsDirectSuper = constructorAllowsSuper;\n    } else if (method.static && key.type === \"Identifier\" && key.name === \"prototype\") {\n      this.raise(key.start, \"Classes may not have a static property named prototype\");\n    }\n    this.parseClassMethod(method, isGenerator, isAsync, allowsDirectSuper);\n    if (method.kind === \"get\" && method.value.params.length !== 0)\n      { this.raiseRecoverable(method.value.start, \"getter should have no params\"); }\n    if (method.kind === \"set\" && method.value.params.length !== 1)\n      { this.raiseRecoverable(method.value.start, \"setter should have exactly one param\"); }\n    if (method.kind === \"set\" && method.value.params[0].type === \"RestElement\")\n      { this.raiseRecoverable(method.value.params[0].start, \"Setter cannot use rest params\"); }\n    return method\n  };\n\n  pp$1.parseClassMethod = function(method, isGenerator, isAsync, allowsDirectSuper) {\n    method.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);\n    return this.finishNode(method, \"MethodDefinition\")\n  };\n\n  pp$1.parseClassId = function(node, isStatement) {\n    if (this.type === types.name) {\n      node.id = this.parseIdent();\n      if (isStatement)\n        { this.checkLVal(node.id, BIND_LEXICAL, false); }\n    } else {\n      if (isStatement === true)\n        { this.unexpected(); }\n      node.id = null;\n    }\n  };\n\n  pp$1.parseClassSuper = function(node) {\n    node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n  };\n\n\n  pp$1.parseExport = function(node, exports) {\n    this.next();\n    if (this.eat(types.star)) {\n      this.expectContextual(\"from\");\n      if (this.type !== types.string) { this.unexpected(); }\n      node.source = this.parseExprAtom();\n      this.semicolon();\n      return this.finishNode(node, \"ExportAllDeclaration\")\n    }\n    if (this.eat(types._default)) { \n      this.checkExport(exports, \"default\", this.lastTokStart);\n      var isAsync;\n      if (this.type === types._function || (isAsync = this.isAsyncFunction())) {\n        var fNode = this.startNode();\n        this.next();\n        if (isAsync) { this.next(); }\n        node.declaration = this.parseFunction(fNode, FUNC_STATEMENT | FUNC_NULLABLE_ID, false, isAsync);\n      } else if (this.type === types._class) {\n        var cNode = this.startNode();\n        node.declaration = this.parseClass(cNode, \"nullableID\");\n      } else {\n        node.declaration = this.parseMaybeAssign();\n        this.semicolon();\n      }\n      return this.finishNode(node, \"ExportDefaultDeclaration\")\n    }\n    if (this.shouldParseExportStatement()) {\n      node.declaration = this.parseStatement(null);\n      if (node.declaration.type === \"VariableDeclaration\")\n        { this.checkVariableExport(exports, node.declaration.declarations); }\n      else\n        { this.checkExport(exports, node.declaration.id.name, node.declaration.id.start); }\n      node.specifiers = [];\n      node.source = null;\n    } else { \n      node.declaration = null;\n      node.specifiers = this.parseExportSpecifiers(exports);\n      if (this.eatContextual(\"from\")) {\n        if (this.type !== types.string) { this.unexpected(); }\n        node.source = this.parseExprAtom();\n      } else {\n        for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n          var spec = list[i];\n\n          this.checkUnreserved(spec.local);\n          this.checkLocalExport(spec.local);\n        }\n\n        node.source = null;\n      }\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ExportNamedDeclaration\")\n  };\n\n  pp$1.checkExport = function(exports, name, pos) {\n    if (!exports) { return }\n    if (has(exports, name))\n      { this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\"); }\n    exports[name] = true;\n  };\n\n  pp$1.checkPatternExport = function(exports, pat) {\n    var type = pat.type;\n    if (type === \"Identifier\")\n      { this.checkExport(exports, pat.name, pat.start); }\n    else if (type === \"ObjectPattern\")\n      { for (var i = 0, list = pat.properties; i < list.length; i += 1)\n        {\n          var prop = list[i];\n\n          this.checkPatternExport(exports, prop);\n        } }\n    else if (type === \"ArrayPattern\")\n      { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n        var elt = list$1[i$1];\n\n          if (elt) { this.checkPatternExport(exports, elt); }\n      } }\n    else if (type === \"Property\")\n      { this.checkPatternExport(exports, pat.value); }\n    else if (type === \"AssignmentPattern\")\n      { this.checkPatternExport(exports, pat.left); }\n    else if (type === \"RestElement\")\n      { this.checkPatternExport(exports, pat.argument); }\n    else if (type === \"ParenthesizedExpression\")\n      { this.checkPatternExport(exports, pat.expression); }\n  };\n\n  pp$1.checkVariableExport = function(exports, decls) {\n    if (!exports) { return }\n    for (var i = 0, list = decls; i < list.length; i += 1)\n      {\n      var decl = list[i];\n\n      this.checkPatternExport(exports, decl.id);\n    }\n  };\n\n  pp$1.shouldParseExportStatement = function() {\n    return this.type.keyword === \"var\" ||\n      this.type.keyword === \"const\" ||\n      this.type.keyword === \"class\" ||\n      this.type.keyword === \"function\" ||\n      this.isLet() ||\n      this.isAsyncFunction()\n  };\n\n\n  pp$1.parseExportSpecifiers = function(exports) {\n    var nodes = [], first = true;\n    this.expect(types.braceL);\n    while (!this.eat(types.braceR)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (this.afterTrailingComma(types.braceR)) { break }\n      } else { first = false; }\n\n      var node = this.startNode();\n      node.local = this.parseIdent(true);\n      node.exported = this.eatContextual(\"as\") ? this.parseIdent(true) : node.local;\n      this.checkExport(exports, node.exported.name, node.exported.start);\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n    return nodes\n  };\n\n\n  pp$1.parseImport = function(node) {\n    this.next();\n    if (this.type === types.string) {\n      node.specifiers = empty;\n      node.source = this.parseExprAtom();\n    } else {\n      node.specifiers = this.parseImportSpecifiers();\n      this.expectContextual(\"from\");\n      node.source = this.type === types.string ? this.parseExprAtom() : this.unexpected();\n    }\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\")\n  };\n\n\n  pp$1.parseImportSpecifiers = function() {\n    var nodes = [], first = true;\n    if (this.type === types.name) {\n      var node = this.startNode();\n      node.local = this.parseIdent();\n      this.checkLVal(node.local, BIND_LEXICAL);\n      nodes.push(this.finishNode(node, \"ImportDefaultSpecifier\"));\n      if (!this.eat(types.comma)) { return nodes }\n    }\n    if (this.type === types.star) {\n      var node$1 = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      node$1.local = this.parseIdent();\n      this.checkLVal(node$1.local, BIND_LEXICAL);\n      nodes.push(this.finishNode(node$1, \"ImportNamespaceSpecifier\"));\n      return nodes\n    }\n    this.expect(types.braceL);\n    while (!this.eat(types.braceR)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (this.afterTrailingComma(types.braceR)) { break }\n      } else { first = false; }\n\n      var node$2 = this.startNode();\n      node$2.imported = this.parseIdent(true);\n      if (this.eatContextual(\"as\")) {\n        node$2.local = this.parseIdent();\n      } else {\n        this.checkUnreserved(node$2.imported);\n        node$2.local = node$2.imported;\n      }\n      this.checkLVal(node$2.local, BIND_LEXICAL);\n      nodes.push(this.finishNode(node$2, \"ImportSpecifier\"));\n    }\n    return nodes\n  };\n\n  pp$1.adaptDirectivePrologue = function(statements) {\n    for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n      statements[i].directive = statements[i].expression.raw.slice(1, -1);\n    }\n  };\n  pp$1.isDirectiveCandidate = function(statement) {\n    return (\n      statement.type === \"ExpressionStatement\" &&\n      statement.expression.type === \"Literal\" &&\n      typeof statement.expression.value === \"string\" &&\n      (this.input[statement.start] === \"\\\"\" || this.input[statement.start] === \"'\")\n    )\n  };\n\n  var pp$2 = Parser.prototype;\n\n\n  pp$2.toAssignable = function(node, isBinding, refDestructuringErrors) {\n    if (this.options.ecmaVersion >= 6 && node) {\n      switch (node.type) {\n      case \"Identifier\":\n        if (this.inAsync && node.name === \"await\")\n          { this.raise(node.start, \"Cannot use 'await' as identifier inside an async function\"); }\n        break\n\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"RestElement\":\n        break\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n        for (var i = 0, list = node.properties; i < list.length; i += 1) {\n          var prop = list[i];\n\n        this.toAssignable(prop, isBinding);\n          if (\n            prop.type === \"RestElement\" &&\n            (prop.argument.type === \"ArrayPattern\" || prop.argument.type === \"ObjectPattern\")\n          ) {\n            this.raise(prop.argument.start, \"Unexpected token\");\n          }\n        }\n        break\n\n      case \"Property\":\n        if (node.kind !== \"init\") { this.raise(node.key.start, \"Object pattern can't contain getter or setter\"); }\n        this.toAssignable(node.value, isBinding);\n        break\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n        this.toAssignableList(node.elements, isBinding);\n        break\n\n      case \"SpreadElement\":\n        node.type = \"RestElement\";\n        this.toAssignable(node.argument, isBinding);\n        if (node.argument.type === \"AssignmentPattern\")\n          { this.raise(node.argument.start, \"Rest elements cannot have a default value\"); }\n        break\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") { this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\"); }\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isBinding);\n\n      case \"AssignmentPattern\":\n        break\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(node.expression, isBinding, refDestructuringErrors);\n        break\n\n      case \"MemberExpression\":\n        if (!isBinding) { break }\n\n      default:\n        this.raise(node.start, \"Assigning to rvalue\");\n      }\n    } else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n    return node\n  };\n\n\n  pp$2.toAssignableList = function(exprList, isBinding) {\n    var end = exprList.length;\n    for (var i = 0; i < end; i++) {\n      var elt = exprList[i];\n      if (elt) { this.toAssignable(elt, isBinding); }\n    }\n    if (end) {\n      var last = exprList[end - 1];\n      if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\")\n        { this.unexpected(last.argument.start); }\n    }\n    return exprList\n  };\n\n\n  pp$2.parseSpread = function(refDestructuringErrors) {\n    var node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n    return this.finishNode(node, \"SpreadElement\")\n  };\n\n  pp$2.parseRestBinding = function() {\n    var node = this.startNode();\n    this.next();\n\n    if (this.options.ecmaVersion === 6 && this.type !== types.name)\n      { this.unexpected(); }\n\n    node.argument = this.parseBindingAtom();\n\n    return this.finishNode(node, \"RestElement\")\n  };\n\n\n  pp$2.parseBindingAtom = function() {\n    if (this.options.ecmaVersion >= 6) {\n      switch (this.type) {\n      case types.bracketL:\n        var node = this.startNode();\n        this.next();\n        node.elements = this.parseBindingList(types.bracketR, true, true);\n        return this.finishNode(node, \"ArrayPattern\")\n\n      case types.braceL:\n        return this.parseObj(true)\n      }\n    }\n    return this.parseIdent()\n  };\n\n  pp$2.parseBindingList = function(close, allowEmpty, allowTrailingComma) {\n    var elts = [], first = true;\n    while (!this.eat(close)) {\n      if (first) { first = false; }\n      else { this.expect(types.comma); }\n      if (allowEmpty && this.type === types.comma) {\n        elts.push(null);\n      } else if (allowTrailingComma && this.afterTrailingComma(close)) {\n        break\n      } else if (this.type === types.ellipsis) {\n        var rest = this.parseRestBinding();\n        this.parseBindingListItem(rest);\n        elts.push(rest);\n        if (this.type === types.comma) { this.raise(this.start, \"Comma is not permitted after the rest element\"); }\n        this.expect(close);\n        break\n      } else {\n        var elem = this.parseMaybeDefault(this.start, this.startLoc);\n        this.parseBindingListItem(elem);\n        elts.push(elem);\n      }\n    }\n    return elts\n  };\n\n  pp$2.parseBindingListItem = function(param) {\n    return param\n  };\n\n\n  pp$2.parseMaybeDefault = function(startPos, startLoc, left) {\n    left = left || this.parseBindingAtom();\n    if (this.options.ecmaVersion < 6 || !this.eat(types.eq)) { return left }\n    var node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssign();\n    return this.finishNode(node, \"AssignmentPattern\")\n  };\n\n\n  pp$2.checkLVal = function(expr, bindingType, checkClashes) {\n    if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n    switch (expr.type) {\n    case \"Identifier\":\n      if (bindingType === BIND_LEXICAL && expr.name === \"let\")\n        { this.raiseRecoverable(expr.start, \"let is disallowed as a lexically bound name\"); }\n      if (this.strict && this.reservedWordsStrictBind.test(expr.name))\n        { this.raiseRecoverable(expr.start, (bindingType ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\"); }\n      if (checkClashes) {\n        if (has(checkClashes, expr.name))\n          { this.raiseRecoverable(expr.start, \"Argument name clash\"); }\n        checkClashes[expr.name] = true;\n      }\n      if (bindingType !== BIND_NONE && bindingType !== BIND_OUTSIDE) { this.declareName(expr.name, bindingType, expr.start); }\n      break\n\n    case \"MemberExpression\":\n      if (bindingType) { this.raiseRecoverable(expr.start, \"Binding member expression\"); }\n      break\n\n    case \"ObjectPattern\":\n      for (var i = 0, list = expr.properties; i < list.length; i += 1)\n        {\n      var prop = list[i];\n\n      this.checkLVal(prop, bindingType, checkClashes);\n    }\n      break\n\n    case \"Property\":\n      this.checkLVal(expr.value, bindingType, checkClashes);\n      break\n\n    case \"ArrayPattern\":\n      for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n        var elem = list$1[i$1];\n\n      if (elem) { this.checkLVal(elem, bindingType, checkClashes); }\n      }\n      break\n\n    case \"AssignmentPattern\":\n      this.checkLVal(expr.left, bindingType, checkClashes);\n      break\n\n    case \"RestElement\":\n      this.checkLVal(expr.argument, bindingType, checkClashes);\n      break\n\n    case \"ParenthesizedExpression\":\n      this.checkLVal(expr.expression, bindingType, checkClashes);\n      break\n\n    default:\n      this.raise(expr.start, (bindingType ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n    }\n  };\n\n\n  var pp$3 = Parser.prototype;\n\n\n  pp$3.checkPropClash = function(prop, propHash, refDestructuringErrors) {\n    if (this.options.ecmaVersion >= 9 && prop.type === \"SpreadElement\")\n      { return }\n    if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\n      { return }\n    var key = prop.key;\n    var name;\n    switch (key.type) {\n    case \"Identifier\": name = key.name; break\n    case \"Literal\": name = String(key.value); break\n    default: return\n    }\n    var kind = prop.kind;\n    if (this.options.ecmaVersion >= 6) {\n      if (name === \"__proto__\" && kind === \"init\") {\n        if (propHash.proto) {\n          if (refDestructuringErrors) {\n            if (refDestructuringErrors.doubleProto < 0)\n              { refDestructuringErrors.doubleProto = key.start; }\n          } else { this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\"); }\n        }\n        propHash.proto = true;\n      }\n      return\n    }\n    name = \"$\" + name;\n    var other = propHash[name];\n    if (other) {\n      var redefinition;\n      if (kind === \"init\") {\n        redefinition = this.strict && other.init || other.get || other.set;\n      } else {\n        redefinition = other.init || other[kind];\n      }\n      if (redefinition)\n        { this.raiseRecoverable(key.start, \"Redefinition of property\"); }\n    } else {\n      other = propHash[name] = {\n        init: false,\n        get: false,\n        set: false\n      };\n    }\n    other[kind] = true;\n  };\n\n\n\n\n  pp$3.parseExpression = function(noIn, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseMaybeAssign(noIn, refDestructuringErrors);\n    if (this.type === types.comma) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n      while (this.eat(types.comma)) { node.expressions.push(this.parseMaybeAssign(noIn, refDestructuringErrors)); }\n      return this.finishNode(node, \"SequenceExpression\")\n    }\n    return expr\n  };\n\n\n  pp$3.parseMaybeAssign = function(noIn, refDestructuringErrors, afterLeftParse) {\n    if (this.isContextual(\"yield\")) {\n      if (this.inGenerator) { return this.parseYield(noIn) }\n      else { this.exprAllowed = false; }\n    }\n\n    var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1;\n    if (refDestructuringErrors) {\n      oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n      oldTrailingComma = refDestructuringErrors.trailingComma;\n      refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;\n    } else {\n      refDestructuringErrors = new DestructuringErrors;\n      ownDestructuringErrors = true;\n    }\n\n    var startPos = this.start, startLoc = this.startLoc;\n    if (this.type === types.parenL || this.type === types.name)\n      { this.potentialArrowAt = this.start; }\n    var left = this.parseMaybeConditional(noIn, refDestructuringErrors);\n    if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }\n    if (this.type.isAssign) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.value;\n      node.left = this.type === types.eq ? this.toAssignable(left, false, refDestructuringErrors) : left;\n      if (!ownDestructuringErrors) {\n        refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.doubleProto = -1;\n      }\n      if (refDestructuringErrors.shorthandAssign >= node.left.start)\n        { refDestructuringErrors.shorthandAssign = -1; } \n      this.checkLVal(left);\n      this.next();\n      node.right = this.parseMaybeAssign(noIn);\n      return this.finishNode(node, \"AssignmentExpression\")\n    } else {\n      if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }\n    }\n    if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }\n    if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }\n    return left\n  };\n\n\n  pp$3.parseMaybeConditional = function(noIn, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseExprOps(noIn, refDestructuringErrors);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    if (this.eat(types.question)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssign();\n      this.expect(types.colon);\n      node.alternate = this.parseMaybeAssign(noIn);\n      return this.finishNode(node, \"ConditionalExpression\")\n    }\n    return expr\n  };\n\n\n  pp$3.parseExprOps = function(noIn, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseMaybeUnary(refDestructuringErrors, false);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    return expr.start === startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, noIn)\n  };\n\n\n  pp$3.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, noIn) {\n    var prec = this.type.binop;\n    if (prec != null && (!noIn || this.type !== types._in)) {\n      if (prec > minPrec) {\n        var logical = this.type === types.logicalOR || this.type === types.logicalAND;\n        var op = this.value;\n        this.next();\n        var startPos = this.start, startLoc = this.startLoc;\n        var right = this.parseExprOp(this.parseMaybeUnary(null, false), startPos, startLoc, prec, noIn);\n        var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical);\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn)\n      }\n    }\n    return left\n  };\n\n  pp$3.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.operator = op;\n    node.right = right;\n    return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\")\n  };\n\n\n  pp$3.parseMaybeUnary = function(refDestructuringErrors, sawUnary) {\n    var startPos = this.start, startLoc = this.startLoc, expr;\n    if (this.isContextual(\"await\") && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction))) {\n      expr = this.parseAwait();\n      sawUnary = true;\n    } else if (this.type.prefix) {\n      var node = this.startNode(), update = this.type === types.incDec;\n      node.operator = this.value;\n      node.prefix = true;\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      if (update) { this.checkLVal(node.argument); }\n      else if (this.strict && node.operator === \"delete\" &&\n               node.argument.type === \"Identifier\")\n        { this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\"); }\n      else { sawUnary = true; }\n      expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n    } else {\n      expr = this.parseExprSubscripts(refDestructuringErrors);\n      if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n      while (this.type.postfix && !this.canInsertSemicolon()) {\n        var node$1 = this.startNodeAt(startPos, startLoc);\n        node$1.operator = this.value;\n        node$1.prefix = false;\n        node$1.argument = expr;\n        this.checkLVal(expr);\n        this.next();\n        expr = this.finishNode(node$1, \"UpdateExpression\");\n      }\n    }\n\n    if (!sawUnary && this.eat(types.starstar))\n      { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false), \"**\", false) }\n    else\n      { return expr }\n  };\n\n\n  pp$3.parseExprSubscripts = function(refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseExprAtom(refDestructuringErrors);\n    if (expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\")\n      { return expr }\n    var result = this.parseSubscripts(expr, startPos, startLoc);\n    if (refDestructuringErrors && result.type === \"MemberExpression\") {\n      if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }\n      if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }\n    }\n    return result\n  };\n\n  pp$3.parseSubscripts = function(base, startPos, startLoc, noCalls) {\n    var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" &&\n        this.lastTokEnd === base.end && !this.canInsertSemicolon() && this.input.slice(base.start, base.end) === \"async\";\n    while (true) {\n      var element = this.parseSubscript(base, startPos, startLoc, noCalls, maybeAsyncArrow);\n      if (element === base || element.type === \"ArrowFunctionExpression\") { return element }\n      base = element;\n    }\n  };\n\n  pp$3.parseSubscript = function(base, startPos, startLoc, noCalls, maybeAsyncArrow) {\n    var computed = this.eat(types.bracketL);\n    if (computed || this.eat(types.dot)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.object = base;\n      node.property = computed ? this.parseExpression() : this.parseIdent(this.options.allowReserved !== \"never\");\n      node.computed = !!computed;\n      if (computed) { this.expect(types.bracketR); }\n      base = this.finishNode(node, \"MemberExpression\");\n    } else if (!noCalls && this.eat(types.parenL)) {\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n      this.yieldPos = 0;\n      this.awaitPos = 0;\n      this.awaitIdentPos = 0;\n      var exprList = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false, refDestructuringErrors);\n      if (maybeAsyncArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n        this.checkPatternErrors(refDestructuringErrors, false);\n        this.checkYieldAwaitInDefaultParams();\n        if (this.awaitIdentPos > 0)\n          { this.raise(this.awaitIdentPos, \"Cannot use 'await' as identifier inside an async function\"); }\n        this.yieldPos = oldYieldPos;\n        this.awaitPos = oldAwaitPos;\n        this.awaitIdentPos = oldAwaitIdentPos;\n        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, true)\n      }\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      this.yieldPos = oldYieldPos || this.yieldPos;\n      this.awaitPos = oldAwaitPos || this.awaitPos;\n      this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;\n      var node$1 = this.startNodeAt(startPos, startLoc);\n      node$1.callee = base;\n      node$1.arguments = exprList;\n      base = this.finishNode(node$1, \"CallExpression\");\n    } else if (this.type === types.backQuote) {\n      var node$2 = this.startNodeAt(startPos, startLoc);\n      node$2.tag = base;\n      node$2.quasi = this.parseTemplate({isTagged: true});\n      base = this.finishNode(node$2, \"TaggedTemplateExpression\");\n    }\n    return base\n  };\n\n\n  pp$3.parseExprAtom = function(refDestructuringErrors) {\n    if (this.type === types.slash) { this.readRegexp(); }\n\n    var node, canBeArrow = this.potentialArrowAt === this.start;\n    switch (this.type) {\n    case types._super:\n      if (!this.allowSuper)\n        { this.raise(this.start, \"'super' keyword outside a method\"); }\n      node = this.startNode();\n      this.next();\n      if (this.type === types.parenL && !this.allowDirectSuper)\n        { this.raise(node.start, \"super() call outside constructor of a subclass\"); }\n      if (this.type !== types.dot && this.type !== types.bracketL && this.type !== types.parenL)\n        { this.unexpected(); }\n      return this.finishNode(node, \"Super\")\n\n    case types._this:\n      node = this.startNode();\n      this.next();\n      return this.finishNode(node, \"ThisExpression\")\n\n    case types.name:\n      var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;\n      var id = this.parseIdent(false);\n      if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types._function))\n        { return this.parseFunction(this.startNodeAt(startPos, startLoc), 0, false, true) }\n      if (canBeArrow && !this.canInsertSemicolon()) {\n        if (this.eat(types.arrow))\n          { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false) }\n        if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types.name && !containsEsc) {\n          id = this.parseIdent(false);\n          if (this.canInsertSemicolon() || !this.eat(types.arrow))\n            { this.unexpected(); }\n          return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true)\n        }\n      }\n      return id\n\n    case types.regexp:\n      var value = this.value;\n      node = this.parseLiteral(value.value);\n      node.regex = {pattern: value.pattern, flags: value.flags};\n      return node\n\n    case types.num: case types.string:\n      return this.parseLiteral(this.value)\n\n    case types._null: case types._true: case types._false:\n      node = this.startNode();\n      node.value = this.type === types._null ? null : this.type === types._true;\n      node.raw = this.type.keyword;\n      this.next();\n      return this.finishNode(node, \"Literal\")\n\n    case types.parenL:\n      var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow);\n      if (refDestructuringErrors) {\n        if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))\n          { refDestructuringErrors.parenthesizedAssign = start; }\n        if (refDestructuringErrors.parenthesizedBind < 0)\n          { refDestructuringErrors.parenthesizedBind = start; }\n      }\n      return expr\n\n    case types.bracketL:\n      node = this.startNode();\n      this.next();\n      node.elements = this.parseExprList(types.bracketR, true, true, refDestructuringErrors);\n      return this.finishNode(node, \"ArrayExpression\")\n\n    case types.braceL:\n      return this.parseObj(false, refDestructuringErrors)\n\n    case types._function:\n      node = this.startNode();\n      this.next();\n      return this.parseFunction(node, 0)\n\n    case types._class:\n      return this.parseClass(this.startNode(), false)\n\n    case types._new:\n      return this.parseNew()\n\n    case types.backQuote:\n      return this.parseTemplate()\n\n    case types._import:\n      if (this.options.ecmaVersion >= 11) {\n        return this.parseExprImport()\n      } else {\n        return this.unexpected()\n      }\n\n    default:\n      this.unexpected();\n    }\n  };\n\n  pp$3.parseExprImport = function() {\n    var node = this.startNode();\n    this.next(); \n    switch (this.type) {\n    case types.parenL:\n      return this.parseDynamicImport(node)\n    default:\n      this.unexpected();\n    }\n  };\n\n  pp$3.parseDynamicImport = function(node) {\n    this.next(); \n\n    node.source = this.parseMaybeAssign();\n\n    if (!this.eat(types.parenR)) {\n      var errorPos = this.start;\n      if (this.eat(types.comma) && this.eat(types.parenR)) {\n        this.raiseRecoverable(errorPos, \"Trailing comma is not allowed in import()\");\n      } else {\n        this.unexpected(errorPos);\n      }\n    }\n\n    return this.finishNode(node, \"ImportExpression\")\n  };\n\n  pp$3.parseLiteral = function(value) {\n    var node = this.startNode();\n    node.value = value;\n    node.raw = this.input.slice(this.start, this.end);\n    if (node.raw.charCodeAt(node.raw.length - 1) === 110) { node.bigint = node.raw.slice(0, -1); }\n    this.next();\n    return this.finishNode(node, \"Literal\")\n  };\n\n  pp$3.parseParenExpression = function() {\n    this.expect(types.parenL);\n    var val = this.parseExpression();\n    this.expect(types.parenR);\n    return val\n  };\n\n  pp$3.parseParenAndDistinguishExpression = function(canBeArrow) {\n    var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;\n    if (this.options.ecmaVersion >= 6) {\n      this.next();\n\n      var innerStartPos = this.start, innerStartLoc = this.startLoc;\n      var exprList = [], first = true, lastIsComma = false;\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;\n      this.yieldPos = 0;\n      this.awaitPos = 0;\n      while (this.type !== types.parenR) {\n        first ? first = false : this.expect(types.comma);\n        if (allowTrailingComma && this.afterTrailingComma(types.parenR, true)) {\n          lastIsComma = true;\n          break\n        } else if (this.type === types.ellipsis) {\n          spreadStart = this.start;\n          exprList.push(this.parseParenItem(this.parseRestBinding()));\n          if (this.type === types.comma) { this.raise(this.start, \"Comma is not permitted after the rest element\"); }\n          break\n        } else {\n          exprList.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parseParenItem));\n        }\n      }\n      var innerEndPos = this.start, innerEndLoc = this.startLoc;\n      this.expect(types.parenR);\n\n      if (canBeArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n        this.checkPatternErrors(refDestructuringErrors, false);\n        this.checkYieldAwaitInDefaultParams();\n        this.yieldPos = oldYieldPos;\n        this.awaitPos = oldAwaitPos;\n        return this.parseParenArrowList(startPos, startLoc, exprList)\n      }\n\n      if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }\n      if (spreadStart) { this.unexpected(spreadStart); }\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      this.yieldPos = oldYieldPos || this.yieldPos;\n      this.awaitPos = oldAwaitPos || this.awaitPos;\n\n      if (exprList.length > 1) {\n        val = this.startNodeAt(innerStartPos, innerStartLoc);\n        val.expressions = exprList;\n        this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n      } else {\n        val = exprList[0];\n      }\n    } else {\n      val = this.parseParenExpression();\n    }\n\n    if (this.options.preserveParens) {\n      var par = this.startNodeAt(startPos, startLoc);\n      par.expression = val;\n      return this.finishNode(par, \"ParenthesizedExpression\")\n    } else {\n      return val\n    }\n  };\n\n  pp$3.parseParenItem = function(item) {\n    return item\n  };\n\n  pp$3.parseParenArrowList = function(startPos, startLoc, exprList) {\n    return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList)\n  };\n\n\n  var empty$1 = [];\n\n  pp$3.parseNew = function() {\n    if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword new\"); }\n    var node = this.startNode();\n    var meta = this.parseIdent(true);\n    if (this.options.ecmaVersion >= 6 && this.eat(types.dot)) {\n      node.meta = meta;\n      var containsEsc = this.containsEsc;\n      node.property = this.parseIdent(true);\n      if (node.property.name !== \"target\" || containsEsc)\n        { this.raiseRecoverable(node.property.start, \"The only valid meta property for new is new.target\"); }\n      if (!this.inNonArrowFunction())\n        { this.raiseRecoverable(node.start, \"new.target can only be used in functions\"); }\n      return this.finishNode(node, \"MetaProperty\")\n    }\n    var startPos = this.start, startLoc = this.startLoc, isImport = this.type === types._import;\n    node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n    if (isImport && node.callee.type === \"ImportExpression\") {\n      this.raise(startPos, \"Cannot use new with import()\");\n    }\n    if (this.eat(types.parenL)) { node.arguments = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false); }\n    else { node.arguments = empty$1; }\n    return this.finishNode(node, \"NewExpression\")\n  };\n\n\n  pp$3.parseTemplateElement = function(ref) {\n    var isTagged = ref.isTagged;\n\n    var elem = this.startNode();\n    if (this.type === types.invalidTemplate) {\n      if (!isTagged) {\n        this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n      }\n      elem.value = {\n        raw: this.value,\n        cooked: null\n      };\n    } else {\n      elem.value = {\n        raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n        cooked: this.value\n      };\n    }\n    this.next();\n    elem.tail = this.type === types.backQuote;\n    return this.finishNode(elem, \"TemplateElement\")\n  };\n\n  pp$3.parseTemplate = function(ref) {\n    if ( ref === void 0 ) ref = {};\n    var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;\n\n    var node = this.startNode();\n    this.next();\n    node.expressions = [];\n    var curElt = this.parseTemplateElement({isTagged: isTagged});\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      if (this.type === types.eof) { this.raise(this.pos, \"Unterminated template literal\"); }\n      this.expect(types.dollarBraceL);\n      node.expressions.push(this.parseExpression());\n      this.expect(types.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement({isTagged: isTagged}));\n    }\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\")\n  };\n\n  pp$3.isAsyncProp = function(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" &&\n      (this.type === types.name || this.type === types.num || this.type === types.string || this.type === types.bracketL || this.type.keyword || (this.options.ecmaVersion >= 9 && this.type === types.star)) &&\n      !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n  };\n\n\n  pp$3.parseObj = function(isPattern, refDestructuringErrors) {\n    var node = this.startNode(), first = true, propHash = {};\n    node.properties = [];\n    this.next();\n    while (!this.eat(types.braceR)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (this.options.ecmaVersion >= 5 && this.afterTrailingComma(types.braceR)) { break }\n      } else { first = false; }\n\n      var prop = this.parseProperty(isPattern, refDestructuringErrors);\n      if (!isPattern) { this.checkPropClash(prop, propHash, refDestructuringErrors); }\n      node.properties.push(prop);\n    }\n    return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n  };\n\n  pp$3.parseProperty = function(isPattern, refDestructuringErrors) {\n    var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;\n    if (this.options.ecmaVersion >= 9 && this.eat(types.ellipsis)) {\n      if (isPattern) {\n        prop.argument = this.parseIdent(false);\n        if (this.type === types.comma) {\n          this.raise(this.start, \"Comma is not permitted after the rest element\");\n        }\n        return this.finishNode(prop, \"RestElement\")\n      }\n      if (this.type === types.parenL && refDestructuringErrors) {\n        if (refDestructuringErrors.parenthesizedAssign < 0) {\n          refDestructuringErrors.parenthesizedAssign = this.start;\n        }\n        if (refDestructuringErrors.parenthesizedBind < 0) {\n          refDestructuringErrors.parenthesizedBind = this.start;\n        }\n      }\n      prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n      if (this.type === types.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\n        refDestructuringErrors.trailingComma = this.start;\n      }\n      return this.finishNode(prop, \"SpreadElement\")\n    }\n    if (this.options.ecmaVersion >= 6) {\n      prop.method = false;\n      prop.shorthand = false;\n      if (isPattern || refDestructuringErrors) {\n        startPos = this.start;\n        startLoc = this.startLoc;\n      }\n      if (!isPattern)\n        { isGenerator = this.eat(types.star); }\n    }\n    var containsEsc = this.containsEsc;\n    this.parsePropertyName(prop);\n    if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n      isAsync = true;\n      isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n      this.parsePropertyName(prop, refDestructuringErrors);\n    } else {\n      isAsync = false;\n    }\n    this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);\n    return this.finishNode(prop, \"Property\")\n  };\n\n  pp$3.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {\n    if ((isGenerator || isAsync) && this.type === types.colon)\n      { this.unexpected(); }\n\n    if (this.eat(types.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n      prop.kind = \"init\";\n    } else if (this.options.ecmaVersion >= 6 && this.type === types.parenL) {\n      if (isPattern) { this.unexpected(); }\n      prop.kind = \"init\";\n      prop.method = true;\n      prop.value = this.parseMethod(isGenerator, isAsync);\n    } else if (!isPattern && !containsEsc &&\n               this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n               (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n               (this.type !== types.comma && this.type !== types.braceR)) {\n      if (isGenerator || isAsync) { this.unexpected(); }\n      prop.kind = prop.key.name;\n      this.parsePropertyName(prop);\n      prop.value = this.parseMethod(false);\n      var paramCount = prop.kind === \"get\" ? 0 : 1;\n      if (prop.value.params.length !== paramCount) {\n        var start = prop.value.start;\n        if (prop.kind === \"get\")\n          { this.raiseRecoverable(start, \"getter should have no params\"); }\n        else\n          { this.raiseRecoverable(start, \"setter should have exactly one param\"); }\n      } else {\n        if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\")\n          { this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\"); }\n      }\n    } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n      if (isGenerator || isAsync) { this.unexpected(); }\n      this.checkUnreserved(prop.key);\n      if (prop.key.name === \"await\" && !this.awaitIdentPos)\n        { this.awaitIdentPos = startPos; }\n      prop.kind = \"init\";\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n      } else if (this.type === types.eq && refDestructuringErrors) {\n        if (refDestructuringErrors.shorthandAssign < 0)\n          { refDestructuringErrors.shorthandAssign = this.start; }\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n      } else {\n        prop.value = prop.key;\n      }\n      prop.shorthand = true;\n    } else { this.unexpected(); }\n  };\n\n  pp$3.parsePropertyName = function(prop) {\n    if (this.options.ecmaVersion >= 6) {\n      if (this.eat(types.bracketL)) {\n        prop.computed = true;\n        prop.key = this.parseMaybeAssign();\n        this.expect(types.bracketR);\n        return prop.key\n      } else {\n        prop.computed = false;\n      }\n    }\n    return prop.key = this.type === types.num || this.type === types.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== \"never\")\n  };\n\n\n  pp$3.initFunction = function(node) {\n    node.id = null;\n    if (this.options.ecmaVersion >= 6) { node.generator = node.expression = false; }\n    if (this.options.ecmaVersion >= 8) { node.async = false; }\n  };\n\n\n  pp$3.parseMethod = function(isGenerator, isAsync, allowDirectSuper) {\n    var node = this.startNode(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 6)\n      { node.generator = isGenerator; }\n    if (this.options.ecmaVersion >= 8)\n      { node.async = !!isAsync; }\n\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    this.enterScope(functionFlags(isAsync, node.generator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n\n    this.expect(types.parenL);\n    node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n    this.checkYieldAwaitInDefaultParams();\n    this.parseFunctionBody(node, false, true);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, \"FunctionExpression\")\n  };\n\n\n  pp$3.parseArrowExpression = function(node, params, isAsync) {\n    var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n    this.enterScope(functionFlags(isAsync, false) | SCOPE_ARROW);\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 8) { node.async = !!isAsync; }\n\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n\n    node.params = this.toAssignableList(params, true);\n    this.parseFunctionBody(node, true, false);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, \"ArrowFunctionExpression\")\n  };\n\n\n  pp$3.parseFunctionBody = function(node, isArrowFunction, isMethod) {\n    var isExpression = isArrowFunction && this.type !== types.braceL;\n    var oldStrict = this.strict, useStrict = false;\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      node.expression = true;\n      this.checkParams(node, false);\n    } else {\n      var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n      if (!oldStrict || nonSimple) {\n        useStrict = this.strictDirective(this.end);\n        if (useStrict && nonSimple)\n          { this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\"); }\n      }\n      var oldLabels = this.labels;\n      this.labels = [];\n      if (useStrict) { this.strict = true; }\n\n      this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));\n      node.body = this.parseBlock(false);\n      node.expression = false;\n      this.adaptDirectivePrologue(node.body.body);\n      this.labels = oldLabels;\n    }\n    this.exitScope();\n\n    if (this.strict && node.id) { this.checkLVal(node.id, BIND_OUTSIDE); }\n    this.strict = oldStrict;\n  };\n\n  pp$3.isSimpleParamList = function(params) {\n    for (var i = 0, list = params; i < list.length; i += 1)\n      {\n      var param = list[i];\n\n      if (param.type !== \"Identifier\") { return false\n    } }\n    return true\n  };\n\n\n  pp$3.checkParams = function(node, allowDuplicates) {\n    var nameHash = {};\n    for (var i = 0, list = node.params; i < list.length; i += 1)\n      {\n      var param = list[i];\n\n      this.checkLVal(param, BIND_VAR, allowDuplicates ? null : nameHash);\n    }\n  };\n\n\n  pp$3.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n    var elts = [], first = true;\n    while (!this.eat(close)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (allowTrailingComma && this.afterTrailingComma(close)) { break }\n      } else { first = false; }\n\n      var elt = (void 0);\n      if (allowEmpty && this.type === types.comma)\n        { elt = null; }\n      else if (this.type === types.ellipsis) {\n        elt = this.parseSpread(refDestructuringErrors);\n        if (refDestructuringErrors && this.type === types.comma && refDestructuringErrors.trailingComma < 0)\n          { refDestructuringErrors.trailingComma = this.start; }\n      } else {\n        elt = this.parseMaybeAssign(false, refDestructuringErrors);\n      }\n      elts.push(elt);\n    }\n    return elts\n  };\n\n  pp$3.checkUnreserved = function(ref) {\n    var start = ref.start;\n    var end = ref.end;\n    var name = ref.name;\n\n    if (this.inGenerator && name === \"yield\")\n      { this.raiseRecoverable(start, \"Cannot use 'yield' as identifier inside a generator\"); }\n    if (this.inAsync && name === \"await\")\n      { this.raiseRecoverable(start, \"Cannot use 'await' as identifier inside an async function\"); }\n    if (this.keywords.test(name))\n      { this.raise(start, (\"Unexpected keyword '\" + name + \"'\")); }\n    if (this.options.ecmaVersion < 6 &&\n      this.input.slice(start, end).indexOf(\"\\\\\") !== -1) { return }\n    var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n    if (re.test(name)) {\n      if (!this.inAsync && name === \"await\")\n        { this.raiseRecoverable(start, \"Cannot use keyword 'await' outside an async function\"); }\n      this.raiseRecoverable(start, (\"The keyword '\" + name + \"' is reserved\"));\n    }\n  };\n\n\n  pp$3.parseIdent = function(liberal, isBinding) {\n    var node = this.startNode();\n    if (this.type === types.name) {\n      node.name = this.value;\n    } else if (this.type.keyword) {\n      node.name = this.type.keyword;\n\n      if ((node.name === \"class\" || node.name === \"function\") &&\n          (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n        this.context.pop();\n      }\n    } else {\n      this.unexpected();\n    }\n    this.next(!!liberal);\n    this.finishNode(node, \"Identifier\");\n    if (!liberal) {\n      this.checkUnreserved(node);\n      if (node.name === \"await\" && !this.awaitIdentPos)\n        { this.awaitIdentPos = node.start; }\n    }\n    return node\n  };\n\n\n  pp$3.parseYield = function(noIn) {\n    if (!this.yieldPos) { this.yieldPos = this.start; }\n\n    var node = this.startNode();\n    this.next();\n    if (this.type === types.semi || this.canInsertSemicolon() || (this.type !== types.star && !this.type.startsExpr)) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(types.star);\n      node.argument = this.parseMaybeAssign(noIn);\n    }\n    return this.finishNode(node, \"YieldExpression\")\n  };\n\n  pp$3.parseAwait = function() {\n    if (!this.awaitPos) { this.awaitPos = this.start; }\n\n    var node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeUnary(null, false);\n    return this.finishNode(node, \"AwaitExpression\")\n  };\n\n  var pp$4 = Parser.prototype;\n\n\n  pp$4.raise = function(pos, message) {\n    var loc = getLineInfo(this.input, pos);\n    message += \" (\" + loc.line + \":\" + loc.column + \")\";\n    var err = new SyntaxError(message);\n    err.pos = pos; err.loc = loc; err.raisedAt = this.pos;\n    throw err\n  };\n\n  pp$4.raiseRecoverable = pp$4.raise;\n\n  pp$4.curPosition = function() {\n    if (this.options.locations) {\n      return new Position(this.curLine, this.pos - this.lineStart)\n    }\n  };\n\n  var pp$5 = Parser.prototype;\n\n  var Scope = function Scope(flags) {\n    this.flags = flags;\n    this.var = [];\n    this.lexical = [];\n    this.functions = [];\n  };\n\n\n  pp$5.enterScope = function(flags) {\n    this.scopeStack.push(new Scope(flags));\n  };\n\n  pp$5.exitScope = function() {\n    this.scopeStack.pop();\n  };\n\n  pp$5.treatFunctionsAsVarInScope = function(scope) {\n    return (scope.flags & SCOPE_FUNCTION) || !this.inModule && (scope.flags & SCOPE_TOP)\n  };\n\n  pp$5.declareName = function(name, bindingType, pos) {\n    var redeclared = false;\n    if (bindingType === BIND_LEXICAL) {\n      var scope = this.currentScope();\n      redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n      scope.lexical.push(name);\n      if (this.inModule && (scope.flags & SCOPE_TOP))\n        { delete this.undefinedExports[name]; }\n    } else if (bindingType === BIND_SIMPLE_CATCH) {\n      var scope$1 = this.currentScope();\n      scope$1.lexical.push(name);\n    } else if (bindingType === BIND_FUNCTION) {\n      var scope$2 = this.currentScope();\n      if (this.treatFunctionsAsVar)\n        { redeclared = scope$2.lexical.indexOf(name) > -1; }\n      else\n        { redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1; }\n      scope$2.functions.push(name);\n    } else {\n      for (var i = this.scopeStack.length - 1; i >= 0; --i) {\n        var scope$3 = this.scopeStack[i];\n        if (scope$3.lexical.indexOf(name) > -1 && !((scope$3.flags & SCOPE_SIMPLE_CATCH) && scope$3.lexical[0] === name) ||\n            !this.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {\n          redeclared = true;\n          break\n        }\n        scope$3.var.push(name);\n        if (this.inModule && (scope$3.flags & SCOPE_TOP))\n          { delete this.undefinedExports[name]; }\n        if (scope$3.flags & SCOPE_VAR) { break }\n      }\n    }\n    if (redeclared) { this.raiseRecoverable(pos, (\"Identifier '\" + name + \"' has already been declared\")); }\n  };\n\n  pp$5.checkLocalExport = function(id) {\n    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 &&\n        this.scopeStack[0].var.indexOf(id.name) === -1) {\n      this.undefinedExports[id.name] = id;\n    }\n  };\n\n  pp$5.currentScope = function() {\n    return this.scopeStack[this.scopeStack.length - 1]\n  };\n\n  pp$5.currentVarScope = function() {\n    for (var i = this.scopeStack.length - 1;; i--) {\n      var scope = this.scopeStack[i];\n      if (scope.flags & SCOPE_VAR) { return scope }\n    }\n  };\n\n  pp$5.currentThisScope = function() {\n    for (var i = this.scopeStack.length - 1;; i--) {\n      var scope = this.scopeStack[i];\n      if (scope.flags & SCOPE_VAR && !(scope.flags & SCOPE_ARROW)) { return scope }\n    }\n  };\n\n  var Node = function Node(parser, pos, loc) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    if (parser.options.locations)\n      { this.loc = new SourceLocation(parser, loc); }\n    if (parser.options.directSourceFile)\n      { this.sourceFile = parser.options.directSourceFile; }\n    if (parser.options.ranges)\n      { this.range = [pos, 0]; }\n  };\n\n\n  var pp$6 = Parser.prototype;\n\n  pp$6.startNode = function() {\n    return new Node(this, this.start, this.startLoc)\n  };\n\n  pp$6.startNodeAt = function(pos, loc) {\n    return new Node(this, pos, loc)\n  };\n\n\n  function finishNodeAt(node, type, pos, loc) {\n    node.type = type;\n    node.end = pos;\n    if (this.options.locations)\n      { node.loc.end = loc; }\n    if (this.options.ranges)\n      { node.range[1] = pos; }\n    return node\n  }\n\n  pp$6.finishNode = function(node, type) {\n    return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n  };\n\n\n  pp$6.finishNodeAt = function(node, type, pos, loc) {\n    return finishNodeAt.call(this, node, type, pos, loc)\n  };\n\n\n  var TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n    this.generator = !!generator;\n  };\n\n  var types$1 = {\n    b_stat: new TokContext(\"{\", false),\n    b_expr: new TokContext(\"{\", true),\n    b_tmpl: new TokContext(\"${\", false),\n    p_stat: new TokContext(\"(\", false),\n    p_expr: new TokContext(\"(\", true),\n    q_tmpl: new TokContext(\"`\", true, true, function (p) { return p.tryReadTemplateToken(); }),\n    f_stat: new TokContext(\"function\", false),\n    f_expr: new TokContext(\"function\", true),\n    f_expr_gen: new TokContext(\"function\", true, false, null, true),\n    f_gen: new TokContext(\"function\", false, false, null, true)\n  };\n\n  var pp$7 = Parser.prototype;\n\n  pp$7.initialContext = function() {\n    return [types$1.b_stat]\n  };\n\n  pp$7.braceIsBlock = function(prevType) {\n    var parent = this.curContext();\n    if (parent === types$1.f_expr || parent === types$1.f_stat)\n      { return true }\n    if (prevType === types.colon && (parent === types$1.b_stat || parent === types$1.b_expr))\n      { return !parent.isExpr }\n\n    if (prevType === types._return || prevType === types.name && this.exprAllowed)\n      { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }\n    if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow)\n      { return true }\n    if (prevType === types.braceL)\n      { return parent === types$1.b_stat }\n    if (prevType === types._var || prevType === types._const || prevType === types.name)\n      { return false }\n    return !this.exprAllowed\n  };\n\n  pp$7.inGeneratorContext = function() {\n    for (var i = this.context.length - 1; i >= 1; i--) {\n      var context = this.context[i];\n      if (context.token === \"function\")\n        { return context.generator }\n    }\n    return false\n  };\n\n  pp$7.updateContext = function(prevType) {\n    var update, type = this.type;\n    if (type.keyword && prevType === types.dot)\n      { this.exprAllowed = false; }\n    else if (update = type.updateContext)\n      { update.call(this, prevType); }\n    else\n      { this.exprAllowed = type.beforeExpr; }\n  };\n\n\n  types.parenR.updateContext = types.braceR.updateContext = function() {\n    if (this.context.length === 1) {\n      this.exprAllowed = true;\n      return\n    }\n    var out = this.context.pop();\n    if (out === types$1.b_stat && this.curContext().token === \"function\") {\n      out = this.context.pop();\n    }\n    this.exprAllowed = !out.isExpr;\n  };\n\n  types.braceL.updateContext = function(prevType) {\n    this.context.push(this.braceIsBlock(prevType) ? types$1.b_stat : types$1.b_expr);\n    this.exprAllowed = true;\n  };\n\n  types.dollarBraceL.updateContext = function() {\n    this.context.push(types$1.b_tmpl);\n    this.exprAllowed = true;\n  };\n\n  types.parenL.updateContext = function(prevType) {\n    var statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n    this.context.push(statementParens ? types$1.p_stat : types$1.p_expr);\n    this.exprAllowed = true;\n  };\n\n  types.incDec.updateContext = function() {\n  };\n\n  types._function.updateContext = types._class.updateContext = function(prevType) {\n    if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else &&\n        !(prevType === types._return && lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) &&\n        !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat))\n      { this.context.push(types$1.f_expr); }\n    else\n      { this.context.push(types$1.f_stat); }\n    this.exprAllowed = false;\n  };\n\n  types.backQuote.updateContext = function() {\n    if (this.curContext() === types$1.q_tmpl)\n      { this.context.pop(); }\n    else\n      { this.context.push(types$1.q_tmpl); }\n    this.exprAllowed = false;\n  };\n\n  types.star.updateContext = function(prevType) {\n    if (prevType === types._function) {\n      var index = this.context.length - 1;\n      if (this.context[index] === types$1.f_expr)\n        { this.context[index] = types$1.f_expr_gen; }\n      else\n        { this.context[index] = types$1.f_gen; }\n    }\n    this.exprAllowed = true;\n  };\n\n  types.name.updateContext = function(prevType) {\n    var allowed = false;\n    if (this.options.ecmaVersion >= 6 && prevType !== types.dot) {\n      if (this.value === \"of\" && !this.exprAllowed ||\n          this.value === \"yield\" && this.inGeneratorContext())\n        { allowed = true; }\n    }\n    this.exprAllowed = allowed;\n  };\n\n\n  var ecma9BinaryProperties = \"ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS\";\n  var ecma10BinaryProperties = ecma9BinaryProperties + \" Extended_Pictographic\";\n  var ecma11BinaryProperties = ecma10BinaryProperties;\n  var unicodeBinaryProperties = {\n    9: ecma9BinaryProperties,\n    10: ecma10BinaryProperties,\n    11: ecma11BinaryProperties\n  };\n\n  var unicodeGeneralCategoryValues = \"Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu\";\n\n  var ecma9ScriptValues = \"Adlam Adlm Ahom Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb\";\n  var ecma10ScriptValues = ecma9ScriptValues + \" Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd\";\n  var ecma11ScriptValues = ecma10ScriptValues + \" Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho\";\n  var unicodeScriptValues = {\n    9: ecma9ScriptValues,\n    10: ecma10ScriptValues,\n    11: ecma11ScriptValues\n  };\n\n  var data = {};\n  function buildUnicodeData(ecmaVersion) {\n    var d = data[ecmaVersion] = {\n      binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + \" \" + unicodeGeneralCategoryValues),\n      nonBinary: {\n        General_Category: wordsRegexp(unicodeGeneralCategoryValues),\n        Script: wordsRegexp(unicodeScriptValues[ecmaVersion])\n      }\n    };\n    d.nonBinary.Script_Extensions = d.nonBinary.Script;\n\n    d.nonBinary.gc = d.nonBinary.General_Category;\n    d.nonBinary.sc = d.nonBinary.Script;\n    d.nonBinary.scx = d.nonBinary.Script_Extensions;\n  }\n  buildUnicodeData(9);\n  buildUnicodeData(10);\n  buildUnicodeData(11);\n\n  var pp$8 = Parser.prototype;\n\n  var RegExpValidationState = function RegExpValidationState(parser) {\n    this.parser = parser;\n    this.validFlags = \"gim\" + (parser.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (parser.options.ecmaVersion >= 9 ? \"s\" : \"\");\n    this.unicodeProperties = data[parser.options.ecmaVersion >= 11 ? 11 : parser.options.ecmaVersion];\n    this.source = \"\";\n    this.flags = \"\";\n    this.start = 0;\n    this.switchU = false;\n    this.switchN = false;\n    this.pos = 0;\n    this.lastIntValue = 0;\n    this.lastStringValue = \"\";\n    this.lastAssertionIsQuantifiable = false;\n    this.numCapturingParens = 0;\n    this.maxBackReference = 0;\n    this.groupNames = [];\n    this.backReferenceNames = [];\n  };\n\n  RegExpValidationState.prototype.reset = function reset (start, pattern, flags) {\n    var unicode = flags.indexOf(\"u\") !== -1;\n    this.start = start | 0;\n    this.source = pattern + \"\";\n    this.flags = flags;\n    this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\n    this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\n  };\n\n  RegExpValidationState.prototype.raise = function raise (message) {\n    this.parser.raiseRecoverable(this.start, (\"Invalid regular expression: /\" + (this.source) + \"/: \" + message));\n  };\n\n  RegExpValidationState.prototype.at = function at (i) {\n    var s = this.source;\n    var l = s.length;\n    if (i >= l) {\n      return -1\n    }\n    var c = s.charCodeAt(i);\n    if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n      return c\n    }\n    var next = s.charCodeAt(i + 1);\n    return next >= 0xDC00 && next <= 0xDFFF ? (c << 10) + next - 0x35FDC00 : c\n  };\n\n  RegExpValidationState.prototype.nextIndex = function nextIndex (i) {\n    var s = this.source;\n    var l = s.length;\n    if (i >= l) {\n      return l\n    }\n    var c = s.charCodeAt(i), next;\n    if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l ||\n        (next = s.charCodeAt(i + 1)) < 0xDC00 || next > 0xDFFF) {\n      return i + 1\n    }\n    return i + 2\n  };\n\n  RegExpValidationState.prototype.current = function current () {\n    return this.at(this.pos)\n  };\n\n  RegExpValidationState.prototype.lookahead = function lookahead () {\n    return this.at(this.nextIndex(this.pos))\n  };\n\n  RegExpValidationState.prototype.advance = function advance () {\n    this.pos = this.nextIndex(this.pos);\n  };\n\n  RegExpValidationState.prototype.eat = function eat (ch) {\n    if (this.current() === ch) {\n      this.advance();\n      return true\n    }\n    return false\n  };\n\n  function codePointToString(ch) {\n    if (ch <= 0xFFFF) { return String.fromCharCode(ch) }\n    ch -= 0x10000;\n    return String.fromCharCode((ch >> 10) + 0xD800, (ch & 0x03FF) + 0xDC00)\n  }\n\n  pp$8.validateRegExpFlags = function(state) {\n    var validFlags = state.validFlags;\n    var flags = state.flags;\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags.charAt(i);\n      if (validFlags.indexOf(flag) === -1) {\n        this.raise(state.start, \"Invalid regular expression flag\");\n      }\n      if (flags.indexOf(flag, i + 1) > -1) {\n        this.raise(state.start, \"Duplicate regular expression flag\");\n      }\n    }\n  };\n\n  pp$8.validateRegExpPattern = function(state) {\n    this.regexp_pattern(state);\n\n    if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {\n      state.switchN = true;\n      this.regexp_pattern(state);\n    }\n  };\n\n  pp$8.regexp_pattern = function(state) {\n    state.pos = 0;\n    state.lastIntValue = 0;\n    state.lastStringValue = \"\";\n    state.lastAssertionIsQuantifiable = false;\n    state.numCapturingParens = 0;\n    state.maxBackReference = 0;\n    state.groupNames.length = 0;\n    state.backReferenceNames.length = 0;\n\n    this.regexp_disjunction(state);\n\n    if (state.pos !== state.source.length) {\n      if (state.eat(0x29 )) {\n        state.raise(\"Unmatched ')'\");\n      }\n      if (state.eat(0x5D ) || state.eat(0x7D )) {\n        state.raise(\"Lone quantifier brackets\");\n      }\n    }\n    if (state.maxBackReference > state.numCapturingParens) {\n      state.raise(\"Invalid escape\");\n    }\n    for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {\n      var name = list[i];\n\n      if (state.groupNames.indexOf(name) === -1) {\n        state.raise(\"Invalid named capture referenced\");\n      }\n    }\n  };\n\n  pp$8.regexp_disjunction = function(state) {\n    this.regexp_alternative(state);\n    while (state.eat(0x7C )) {\n      this.regexp_alternative(state);\n    }\n\n    if (this.regexp_eatQuantifier(state, true)) {\n      state.raise(\"Nothing to repeat\");\n    }\n    if (state.eat(0x7B )) {\n      state.raise(\"Lone quantifier brackets\");\n    }\n  };\n\n  pp$8.regexp_alternative = function(state) {\n    while (state.pos < state.source.length && this.regexp_eatTerm(state))\n      { }\n  };\n\n  pp$8.regexp_eatTerm = function(state) {\n    if (this.regexp_eatAssertion(state)) {\n      if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\n        if (state.switchU) {\n          state.raise(\"Invalid quantifier\");\n        }\n      }\n      return true\n    }\n\n    if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\n      this.regexp_eatQuantifier(state);\n      return true\n    }\n\n    return false\n  };\n\n  pp$8.regexp_eatAssertion = function(state) {\n    var start = state.pos;\n    state.lastAssertionIsQuantifiable = false;\n\n    if (state.eat(0x5E ) || state.eat(0x24 )) {\n      return true\n    }\n\n    if (state.eat(0x5C )) {\n      if (state.eat(0x42 ) || state.eat(0x62 )) {\n        return true\n      }\n      state.pos = start;\n    }\n\n    if (state.eat(0x28 ) && state.eat(0x3F )) {\n      var lookbehind = false;\n      if (this.options.ecmaVersion >= 9) {\n        lookbehind = state.eat(0x3C );\n      }\n      if (state.eat(0x3D ) || state.eat(0x21 )) {\n        this.regexp_disjunction(state);\n        if (!state.eat(0x29 )) {\n          state.raise(\"Unterminated group\");\n        }\n        state.lastAssertionIsQuantifiable = !lookbehind;\n        return true\n      }\n    }\n\n    state.pos = start;\n    return false\n  };\n\n  pp$8.regexp_eatQuantifier = function(state, noError) {\n    if ( noError === void 0 ) noError = false;\n\n    if (this.regexp_eatQuantifierPrefix(state, noError)) {\n      state.eat(0x3F );\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatQuantifierPrefix = function(state, noError) {\n    return (\n      state.eat(0x2A ) ||\n      state.eat(0x2B ) ||\n      state.eat(0x3F ) ||\n      this.regexp_eatBracedQuantifier(state, noError)\n    )\n  };\n  pp$8.regexp_eatBracedQuantifier = function(state, noError) {\n    var start = state.pos;\n    if (state.eat(0x7B )) {\n      var min = 0, max = -1;\n      if (this.regexp_eatDecimalDigits(state)) {\n        min = state.lastIntValue;\n        if (state.eat(0x2C ) && this.regexp_eatDecimalDigits(state)) {\n          max = state.lastIntValue;\n        }\n        if (state.eat(0x7D )) {\n          if (max !== -1 && max < min && !noError) {\n            state.raise(\"numbers out of order in {} quantifier\");\n          }\n          return true\n        }\n      }\n      if (state.switchU && !noError) {\n        state.raise(\"Incomplete quantifier\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n\n  pp$8.regexp_eatAtom = function(state) {\n    return (\n      this.regexp_eatPatternCharacters(state) ||\n      state.eat(0x2E ) ||\n      this.regexp_eatReverseSolidusAtomEscape(state) ||\n      this.regexp_eatCharacterClass(state) ||\n      this.regexp_eatUncapturingGroup(state) ||\n      this.regexp_eatCapturingGroup(state)\n    )\n  };\n  pp$8.regexp_eatReverseSolidusAtomEscape = function(state) {\n    var start = state.pos;\n    if (state.eat(0x5C )) {\n      if (this.regexp_eatAtomEscape(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatUncapturingGroup = function(state) {\n    var start = state.pos;\n    if (state.eat(0x28 )) {\n      if (state.eat(0x3F ) && state.eat(0x3A )) {\n        this.regexp_disjunction(state);\n        if (state.eat(0x29 )) {\n          return true\n        }\n        state.raise(\"Unterminated group\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatCapturingGroup = function(state) {\n    if (state.eat(0x28 )) {\n      if (this.options.ecmaVersion >= 9) {\n        this.regexp_groupSpecifier(state);\n      } else if (state.current() === 0x3F ) {\n        state.raise(\"Invalid group\");\n      }\n      this.regexp_disjunction(state);\n      if (state.eat(0x29 )) {\n        state.numCapturingParens += 1;\n        return true\n      }\n      state.raise(\"Unterminated group\");\n    }\n    return false\n  };\n\n  pp$8.regexp_eatExtendedAtom = function(state) {\n    return (\n      state.eat(0x2E ) ||\n      this.regexp_eatReverseSolidusAtomEscape(state) ||\n      this.regexp_eatCharacterClass(state) ||\n      this.regexp_eatUncapturingGroup(state) ||\n      this.regexp_eatCapturingGroup(state) ||\n      this.regexp_eatInvalidBracedQuantifier(state) ||\n      this.regexp_eatExtendedPatternCharacter(state)\n    )\n  };\n\n  pp$8.regexp_eatInvalidBracedQuantifier = function(state) {\n    if (this.regexp_eatBracedQuantifier(state, true)) {\n      state.raise(\"Nothing to repeat\");\n    }\n    return false\n  };\n\n  pp$8.regexp_eatSyntaxCharacter = function(state) {\n    var ch = state.current();\n    if (isSyntaxCharacter(ch)) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n    return false\n  };\n  function isSyntaxCharacter(ch) {\n    return (\n      ch === 0x24  ||\n      ch >= 0x28  && ch <= 0x2B  ||\n      ch === 0x2E  ||\n      ch === 0x3F  ||\n      ch >= 0x5B  && ch <= 0x5E  ||\n      ch >= 0x7B  && ch <= 0x7D \n    )\n  }\n\n  pp$8.regexp_eatPatternCharacters = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\n      state.advance();\n    }\n    return state.pos !== start\n  };\n\n  pp$8.regexp_eatExtendedPatternCharacter = function(state) {\n    var ch = state.current();\n    if (\n      ch !== -1 &&\n      ch !== 0x24  &&\n      !(ch >= 0x28  && ch <= 0x2B ) &&\n      ch !== 0x2E  &&\n      ch !== 0x3F  &&\n      ch !== 0x5B  &&\n      ch !== 0x5E  &&\n      ch !== 0x7C \n    ) {\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_groupSpecifier = function(state) {\n    if (state.eat(0x3F )) {\n      if (this.regexp_eatGroupName(state)) {\n        if (state.groupNames.indexOf(state.lastStringValue) !== -1) {\n          state.raise(\"Duplicate capture group name\");\n        }\n        state.groupNames.push(state.lastStringValue);\n        return\n      }\n      state.raise(\"Invalid group\");\n    }\n  };\n\n  pp$8.regexp_eatGroupName = function(state) {\n    state.lastStringValue = \"\";\n    if (state.eat(0x3C )) {\n      if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E )) {\n        return true\n      }\n      state.raise(\"Invalid capture group name\");\n    }\n    return false\n  };\n\n  pp$8.regexp_eatRegExpIdentifierName = function(state) {\n    state.lastStringValue = \"\";\n    if (this.regexp_eatRegExpIdentifierStart(state)) {\n      state.lastStringValue += codePointToString(state.lastIntValue);\n      while (this.regexp_eatRegExpIdentifierPart(state)) {\n        state.lastStringValue += codePointToString(state.lastIntValue);\n      }\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatRegExpIdentifierStart = function(state) {\n    var start = state.pos;\n    var ch = state.current();\n    state.advance();\n\n    if (ch === 0x5C  && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {\n      ch = state.lastIntValue;\n    }\n    if (isRegExpIdentifierStart(ch)) {\n      state.lastIntValue = ch;\n      return true\n    }\n\n    state.pos = start;\n    return false\n  };\n  function isRegExpIdentifierStart(ch) {\n    return isIdentifierStart(ch, true) || ch === 0x24  || ch === 0x5F \n  }\n\n  pp$8.regexp_eatRegExpIdentifierPart = function(state) {\n    var start = state.pos;\n    var ch = state.current();\n    state.advance();\n\n    if (ch === 0x5C  && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {\n      ch = state.lastIntValue;\n    }\n    if (isRegExpIdentifierPart(ch)) {\n      state.lastIntValue = ch;\n      return true\n    }\n\n    state.pos = start;\n    return false\n  };\n  function isRegExpIdentifierPart(ch) {\n    return isIdentifierChar(ch, true) || ch === 0x24  || ch === 0x5F  || ch === 0x200C  || ch === 0x200D \n  }\n\n  pp$8.regexp_eatAtomEscape = function(state) {\n    if (\n      this.regexp_eatBackReference(state) ||\n      this.regexp_eatCharacterClassEscape(state) ||\n      this.regexp_eatCharacterEscape(state) ||\n      (state.switchN && this.regexp_eatKGroupName(state))\n    ) {\n      return true\n    }\n    if (state.switchU) {\n      if (state.current() === 0x63 ) {\n        state.raise(\"Invalid unicode escape\");\n      }\n      state.raise(\"Invalid escape\");\n    }\n    return false\n  };\n  pp$8.regexp_eatBackReference = function(state) {\n    var start = state.pos;\n    if (this.regexp_eatDecimalEscape(state)) {\n      var n = state.lastIntValue;\n      if (state.switchU) {\n        if (n > state.maxBackReference) {\n          state.maxBackReference = n;\n        }\n        return true\n      }\n      if (n <= state.numCapturingParens) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatKGroupName = function(state) {\n    if (state.eat(0x6B )) {\n      if (this.regexp_eatGroupName(state)) {\n        state.backReferenceNames.push(state.lastStringValue);\n        return true\n      }\n      state.raise(\"Invalid named reference\");\n    }\n    return false\n  };\n\n  pp$8.regexp_eatCharacterEscape = function(state) {\n    return (\n      this.regexp_eatControlEscape(state) ||\n      this.regexp_eatCControlLetter(state) ||\n      this.regexp_eatZero(state) ||\n      this.regexp_eatHexEscapeSequence(state) ||\n      this.regexp_eatRegExpUnicodeEscapeSequence(state) ||\n      (!state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state)) ||\n      this.regexp_eatIdentityEscape(state)\n    )\n  };\n  pp$8.regexp_eatCControlLetter = function(state) {\n    var start = state.pos;\n    if (state.eat(0x63 )) {\n      if (this.regexp_eatControlLetter(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatZero = function(state) {\n    if (state.current() === 0x30  && !isDecimalDigit(state.lookahead())) {\n      state.lastIntValue = 0;\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatControlEscape = function(state) {\n    var ch = state.current();\n    if (ch === 0x74 ) {\n      state.lastIntValue = 0x09; \n      state.advance();\n      return true\n    }\n    if (ch === 0x6E ) {\n      state.lastIntValue = 0x0A; \n      state.advance();\n      return true\n    }\n    if (ch === 0x76 ) {\n      state.lastIntValue = 0x0B; \n      state.advance();\n      return true\n    }\n    if (ch === 0x66 ) {\n      state.lastIntValue = 0x0C; \n      state.advance();\n      return true\n    }\n    if (ch === 0x72 ) {\n      state.lastIntValue = 0x0D; \n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatControlLetter = function(state) {\n    var ch = state.current();\n    if (isControlLetter(ch)) {\n      state.lastIntValue = ch % 0x20;\n      state.advance();\n      return true\n    }\n    return false\n  };\n  function isControlLetter(ch) {\n    return (\n      (ch >= 0x41  && ch <= 0x5A ) ||\n      (ch >= 0x61  && ch <= 0x7A )\n    )\n  }\n\n  pp$8.regexp_eatRegExpUnicodeEscapeSequence = function(state) {\n    var start = state.pos;\n\n    if (state.eat(0x75 )) {\n      if (this.regexp_eatFixedHexDigits(state, 4)) {\n        var lead = state.lastIntValue;\n        if (state.switchU && lead >= 0xD800 && lead <= 0xDBFF) {\n          var leadSurrogateEnd = state.pos;\n          if (state.eat(0x5C ) && state.eat(0x75 ) && this.regexp_eatFixedHexDigits(state, 4)) {\n            var trail = state.lastIntValue;\n            if (trail >= 0xDC00 && trail <= 0xDFFF) {\n              state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n              return true\n            }\n          }\n          state.pos = leadSurrogateEnd;\n          state.lastIntValue = lead;\n        }\n        return true\n      }\n      if (\n        state.switchU &&\n        state.eat(0x7B ) &&\n        this.regexp_eatHexDigits(state) &&\n        state.eat(0x7D ) &&\n        isValidUnicode(state.lastIntValue)\n      ) {\n        return true\n      }\n      if (state.switchU) {\n        state.raise(\"Invalid unicode escape\");\n      }\n      state.pos = start;\n    }\n\n    return false\n  };\n  function isValidUnicode(ch) {\n    return ch >= 0 && ch <= 0x10FFFF\n  }\n\n  pp$8.regexp_eatIdentityEscape = function(state) {\n    if (state.switchU) {\n      if (this.regexp_eatSyntaxCharacter(state)) {\n        return true\n      }\n      if (state.eat(0x2F )) {\n        state.lastIntValue = 0x2F; \n        return true\n      }\n      return false\n    }\n\n    var ch = state.current();\n    if (ch !== 0x63  && (!state.switchN || ch !== 0x6B )) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n\n    return false\n  };\n\n  pp$8.regexp_eatDecimalEscape = function(state) {\n    state.lastIntValue = 0;\n    var ch = state.current();\n    if (ch >= 0x31  && ch <= 0x39 ) {\n      do {\n        state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 );\n        state.advance();\n      } while ((ch = state.current()) >= 0x30  && ch <= 0x39 )\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatCharacterClassEscape = function(state) {\n    var ch = state.current();\n\n    if (isCharacterClassEscape(ch)) {\n      state.lastIntValue = -1;\n      state.advance();\n      return true\n    }\n\n    if (\n      state.switchU &&\n      this.options.ecmaVersion >= 9 &&\n      (ch === 0x50  || ch === 0x70 )\n    ) {\n      state.lastIntValue = -1;\n      state.advance();\n      if (\n        state.eat(0x7B ) &&\n        this.regexp_eatUnicodePropertyValueExpression(state) &&\n        state.eat(0x7D )\n      ) {\n        return true\n      }\n      state.raise(\"Invalid property name\");\n    }\n\n    return false\n  };\n  function isCharacterClassEscape(ch) {\n    return (\n      ch === 0x64  ||\n      ch === 0x44  ||\n      ch === 0x73  ||\n      ch === 0x53  ||\n      ch === 0x77  ||\n      ch === 0x57 \n    )\n  }\n\n  pp$8.regexp_eatUnicodePropertyValueExpression = function(state) {\n    var start = state.pos;\n\n    if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D )) {\n      var name = state.lastStringValue;\n      if (this.regexp_eatUnicodePropertyValue(state)) {\n        var value = state.lastStringValue;\n        this.regexp_validateUnicodePropertyNameAndValue(state, name, value);\n        return true\n      }\n    }\n    state.pos = start;\n\n    if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\n      var nameOrValue = state.lastStringValue;\n      this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue);\n      return true\n    }\n    return false\n  };\n  pp$8.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {\n    if (!has(state.unicodeProperties.nonBinary, name))\n      { state.raise(\"Invalid property name\"); }\n    if (!state.unicodeProperties.nonBinary[name].test(value))\n      { state.raise(\"Invalid property value\"); }\n  };\n  pp$8.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {\n    if (!state.unicodeProperties.binary.test(nameOrValue))\n      { state.raise(\"Invalid property name\"); }\n  };\n\n  pp$8.regexp_eatUnicodePropertyName = function(state) {\n    var ch = 0;\n    state.lastStringValue = \"\";\n    while (isUnicodePropertyNameCharacter(ch = state.current())) {\n      state.lastStringValue += codePointToString(ch);\n      state.advance();\n    }\n    return state.lastStringValue !== \"\"\n  };\n  function isUnicodePropertyNameCharacter(ch) {\n    return isControlLetter(ch) || ch === 0x5F \n  }\n\n  pp$8.regexp_eatUnicodePropertyValue = function(state) {\n    var ch = 0;\n    state.lastStringValue = \"\";\n    while (isUnicodePropertyValueCharacter(ch = state.current())) {\n      state.lastStringValue += codePointToString(ch);\n      state.advance();\n    }\n    return state.lastStringValue !== \"\"\n  };\n  function isUnicodePropertyValueCharacter(ch) {\n    return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch)\n  }\n\n  pp$8.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {\n    return this.regexp_eatUnicodePropertyValue(state)\n  };\n\n  pp$8.regexp_eatCharacterClass = function(state) {\n    if (state.eat(0x5B )) {\n      state.eat(0x5E );\n      this.regexp_classRanges(state);\n      if (state.eat(0x5D )) {\n        return true\n      }\n      state.raise(\"Unterminated character class\");\n    }\n    return false\n  };\n\n  pp$8.regexp_classRanges = function(state) {\n    while (this.regexp_eatClassAtom(state)) {\n      var left = state.lastIntValue;\n      if (state.eat(0x2D ) && this.regexp_eatClassAtom(state)) {\n        var right = state.lastIntValue;\n        if (state.switchU && (left === -1 || right === -1)) {\n          state.raise(\"Invalid character class\");\n        }\n        if (left !== -1 && right !== -1 && left > right) {\n          state.raise(\"Range out of order in character class\");\n        }\n      }\n    }\n  };\n\n  pp$8.regexp_eatClassAtom = function(state) {\n    var start = state.pos;\n\n    if (state.eat(0x5C )) {\n      if (this.regexp_eatClassEscape(state)) {\n        return true\n      }\n      if (state.switchU) {\n        var ch$1 = state.current();\n        if (ch$1 === 0x63  || isOctalDigit(ch$1)) {\n          state.raise(\"Invalid class escape\");\n        }\n        state.raise(\"Invalid escape\");\n      }\n      state.pos = start;\n    }\n\n    var ch = state.current();\n    if (ch !== 0x5D ) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n\n    return false\n  };\n\n  pp$8.regexp_eatClassEscape = function(state) {\n    var start = state.pos;\n\n    if (state.eat(0x62 )) {\n      state.lastIntValue = 0x08; \n      return true\n    }\n\n    if (state.switchU && state.eat(0x2D )) {\n      state.lastIntValue = 0x2D; \n      return true\n    }\n\n    if (!state.switchU && state.eat(0x63 )) {\n      if (this.regexp_eatClassControlLetter(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n\n    return (\n      this.regexp_eatCharacterClassEscape(state) ||\n      this.regexp_eatCharacterEscape(state)\n    )\n  };\n\n  pp$8.regexp_eatClassControlLetter = function(state) {\n    var ch = state.current();\n    if (isDecimalDigit(ch) || ch === 0x5F ) {\n      state.lastIntValue = ch % 0x20;\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatHexEscapeSequence = function(state) {\n    var start = state.pos;\n    if (state.eat(0x78 )) {\n      if (this.regexp_eatFixedHexDigits(state, 2)) {\n        return true\n      }\n      if (state.switchU) {\n        state.raise(\"Invalid escape\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n\n  pp$8.regexp_eatDecimalDigits = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    state.lastIntValue = 0;\n    while (isDecimalDigit(ch = state.current())) {\n      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 );\n      state.advance();\n    }\n    return state.pos !== start\n  };\n  function isDecimalDigit(ch) {\n    return ch >= 0x30  && ch <= 0x39 \n  }\n\n  pp$8.regexp_eatHexDigits = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    state.lastIntValue = 0;\n    while (isHexDigit(ch = state.current())) {\n      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n      state.advance();\n    }\n    return state.pos !== start\n  };\n  function isHexDigit(ch) {\n    return (\n      (ch >= 0x30  && ch <= 0x39 ) ||\n      (ch >= 0x41  && ch <= 0x46 ) ||\n      (ch >= 0x61  && ch <= 0x66 )\n    )\n  }\n  function hexToInt(ch) {\n    if (ch >= 0x41  && ch <= 0x46 ) {\n      return 10 + (ch - 0x41 )\n    }\n    if (ch >= 0x61  && ch <= 0x66 ) {\n      return 10 + (ch - 0x61 )\n    }\n    return ch - 0x30 \n  }\n\n  pp$8.regexp_eatLegacyOctalEscapeSequence = function(state) {\n    if (this.regexp_eatOctalDigit(state)) {\n      var n1 = state.lastIntValue;\n      if (this.regexp_eatOctalDigit(state)) {\n        var n2 = state.lastIntValue;\n        if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\n          state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\n        } else {\n          state.lastIntValue = n1 * 8 + n2;\n        }\n      } else {\n        state.lastIntValue = n1;\n      }\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatOctalDigit = function(state) {\n    var ch = state.current();\n    if (isOctalDigit(ch)) {\n      state.lastIntValue = ch - 0x30; \n      state.advance();\n      return true\n    }\n    state.lastIntValue = 0;\n    return false\n  };\n  function isOctalDigit(ch) {\n    return ch >= 0x30  && ch <= 0x37 \n  }\n\n  pp$8.regexp_eatFixedHexDigits = function(state, length) {\n    var start = state.pos;\n    state.lastIntValue = 0;\n    for (var i = 0; i < length; ++i) {\n      var ch = state.current();\n      if (!isHexDigit(ch)) {\n        state.pos = start;\n        return false\n      }\n      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n      state.advance();\n    }\n    return true\n  };\n\n\n  var Token = function Token(p) {\n    this.type = p.type;\n    this.value = p.value;\n    this.start = p.start;\n    this.end = p.end;\n    if (p.options.locations)\n      { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }\n    if (p.options.ranges)\n      { this.range = [p.start, p.end]; }\n  };\n\n\n  var pp$9 = Parser.prototype;\n\n\n  pp$9.next = function(ignoreEscapeSequenceInKeyword) {\n    if (!ignoreEscapeSequenceInKeyword && this.type.keyword && this.containsEsc)\n      { this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + this.type.keyword); }\n    if (this.options.onToken)\n      { this.options.onToken(new Token(this)); }\n\n    this.lastTokEnd = this.end;\n    this.lastTokStart = this.start;\n    this.lastTokEndLoc = this.endLoc;\n    this.lastTokStartLoc = this.startLoc;\n    this.nextToken();\n  };\n\n  pp$9.getToken = function() {\n    this.next();\n    return new Token(this)\n  };\n\n  if (typeof Symbol !== \"undefined\")\n    { pp$9[Symbol.iterator] = function() {\n      var this$1 = this;\n\n      return {\n        next: function () {\n          var token = this$1.getToken();\n          return {\n            done: token.type === types.eof,\n            value: token\n          }\n        }\n      }\n    }; }\n\n\n  pp$9.curContext = function() {\n    return this.context[this.context.length - 1]\n  };\n\n\n  pp$9.nextToken = function() {\n    var curContext = this.curContext();\n    if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }\n\n    this.start = this.pos;\n    if (this.options.locations) { this.startLoc = this.curPosition(); }\n    if (this.pos >= this.input.length) { return this.finishToken(types.eof) }\n\n    if (curContext.override) { return curContext.override(this) }\n    else { this.readToken(this.fullCharCodeAtPos()); }\n  };\n\n  pp$9.readToken = function(code) {\n    if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 )\n      { return this.readWord() }\n\n    return this.getTokenFromCode(code)\n  };\n\n  pp$9.fullCharCodeAtPos = function() {\n    var code = this.input.charCodeAt(this.pos);\n    if (code <= 0xd7ff || code >= 0xe000) { return code }\n    var next = this.input.charCodeAt(this.pos + 1);\n    return (code << 10) + next - 0x35fdc00\n  };\n\n  pp$9.skipBlockComment = function() {\n    var startLoc = this.options.onComment && this.curPosition();\n    var start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2);\n    if (end === -1) { this.raise(this.pos - 2, \"Unterminated comment\"); }\n    this.pos = end + 2;\n    if (this.options.locations) {\n      lineBreakG.lastIndex = start;\n      var match;\n      while ((match = lineBreakG.exec(this.input)) && match.index < this.pos) {\n        ++this.curLine;\n        this.lineStart = match.index + match[0].length;\n      }\n    }\n    if (this.options.onComment)\n      { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                             startLoc, this.curPosition()); }\n  };\n\n  pp$9.skipLineComment = function(startSkip) {\n    var start = this.pos;\n    var startLoc = this.options.onComment && this.curPosition();\n    var ch = this.input.charCodeAt(this.pos += startSkip);\n    while (this.pos < this.input.length && !isNewLine(ch)) {\n      ch = this.input.charCodeAt(++this.pos);\n    }\n    if (this.options.onComment)\n      { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                             startLoc, this.curPosition()); }\n  };\n\n\n  pp$9.skipSpace = function() {\n    loop: while (this.pos < this.input.length) {\n      var ch = this.input.charCodeAt(this.pos);\n      switch (ch) {\n      case 32: case 160: \n        ++this.pos;\n        break\n      case 13:\n        if (this.input.charCodeAt(this.pos + 1) === 10) {\n          ++this.pos;\n        }\n      case 10: case 8232: case 8233:\n        ++this.pos;\n        if (this.options.locations) {\n          ++this.curLine;\n          this.lineStart = this.pos;\n        }\n        break\n      case 47: \n        switch (this.input.charCodeAt(this.pos + 1)) {\n        case 42: \n          this.skipBlockComment();\n          break\n        case 47:\n          this.skipLineComment(2);\n          break\n        default:\n          break loop\n        }\n        break\n      default:\n        if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n          ++this.pos;\n        } else {\n          break loop\n        }\n      }\n    }\n  };\n\n\n  pp$9.finishToken = function(type, val) {\n    this.end = this.pos;\n    if (this.options.locations) { this.endLoc = this.curPosition(); }\n    var prevType = this.type;\n    this.type = type;\n    this.value = val;\n\n    this.updateContext(prevType);\n  };\n\n\n  pp$9.readToken_dot = function() {\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next >= 48 && next <= 57) { return this.readNumber(true) }\n    var next2 = this.input.charCodeAt(this.pos + 2);\n    if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { \n      this.pos += 3;\n      return this.finishToken(types.ellipsis)\n    } else {\n      ++this.pos;\n      return this.finishToken(types.dot)\n    }\n  };\n\n  pp$9.readToken_slash = function() { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (this.exprAllowed) { ++this.pos; return this.readRegexp() }\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(types.slash, 1)\n  };\n\n  pp$9.readToken_mult_modulo_exp = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    var size = 1;\n    var tokentype = code === 42 ? types.star : types.modulo;\n\n    if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\n      ++size;\n      tokentype = types.starstar;\n      next = this.input.charCodeAt(this.pos + 2);\n    }\n\n    if (next === 61) { return this.finishOp(types.assign, size + 1) }\n    return this.finishOp(tokentype, size)\n  };\n\n  pp$9.readToken_pipe_amp = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === code) { return this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2) }\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1)\n  };\n\n  pp$9.readToken_caret = function() { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(types.bitwiseXOR, 1)\n  };\n\n  pp$9.readToken_plus_min = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === code) {\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 &&\n          (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n        this.skipLineComment(3);\n        this.skipSpace();\n        return this.nextToken()\n      }\n      return this.finishOp(types.incDec, 2)\n    }\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(types.plusMin, 1)\n  };\n\n  pp$9.readToken_lt_gt = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    var size = 1;\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n      if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types.assign, size + 1) }\n      return this.finishOp(types.bitShift, size)\n    }\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 &&\n        this.input.charCodeAt(this.pos + 3) === 45) {\n      this.skipLineComment(4);\n      this.skipSpace();\n      return this.nextToken()\n    }\n    if (next === 61) { size = 2; }\n    return this.finishOp(types.relational, size)\n  };\n\n  pp$9.readToken_eq_excl = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 61) { return this.finishOp(types.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }\n    if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { \n      this.pos += 2;\n      return this.finishToken(types.arrow)\n    }\n    return this.finishOp(code === 61 ? types.eq : types.prefix, 1)\n  };\n\n  pp$9.getTokenFromCode = function(code) {\n    switch (code) {\n    case 46: \n      return this.readToken_dot()\n\n    case 40: ++this.pos; return this.finishToken(types.parenL)\n    case 41: ++this.pos; return this.finishToken(types.parenR)\n    case 59: ++this.pos; return this.finishToken(types.semi)\n    case 44: ++this.pos; return this.finishToken(types.comma)\n    case 91: ++this.pos; return this.finishToken(types.bracketL)\n    case 93: ++this.pos; return this.finishToken(types.bracketR)\n    case 123: ++this.pos; return this.finishToken(types.braceL)\n    case 125: ++this.pos; return this.finishToken(types.braceR)\n    case 58: ++this.pos; return this.finishToken(types.colon)\n    case 63: ++this.pos; return this.finishToken(types.question)\n\n    case 96: \n      if (this.options.ecmaVersion < 6) { break }\n      ++this.pos;\n      return this.finishToken(types.backQuote)\n\n    case 48: \n      var next = this.input.charCodeAt(this.pos + 1);\n      if (next === 120 || next === 88) { return this.readRadixNumber(16) } \n      if (this.options.ecmaVersion >= 6) {\n        if (next === 111 || next === 79) { return this.readRadixNumber(8) } \n        if (next === 98 || next === 66) { return this.readRadixNumber(2) } \n      }\n\n    case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: \n      return this.readNumber(false)\n\n    case 34: case 39: \n      return this.readString(code)\n\n\n    case 47: \n      return this.readToken_slash()\n\n    case 37: case 42: \n      return this.readToken_mult_modulo_exp(code)\n\n    case 124: case 38: \n      return this.readToken_pipe_amp(code)\n\n    case 94: \n      return this.readToken_caret()\n\n    case 43: case 45: \n      return this.readToken_plus_min(code)\n\n    case 60: case 62: \n      return this.readToken_lt_gt(code)\n\n    case 61: case 33: \n      return this.readToken_eq_excl(code)\n\n    case 126: \n      return this.finishOp(types.prefix, 1)\n    }\n\n    this.raise(this.pos, \"Unexpected character '\" + codePointToString$1(code) + \"'\");\n  };\n\n  pp$9.finishOp = function(type, size) {\n    var str = this.input.slice(this.pos, this.pos + size);\n    this.pos += size;\n    return this.finishToken(type, str)\n  };\n\n  pp$9.readRegexp = function() {\n    var escaped, inClass, start = this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(start, \"Unterminated regular expression\"); }\n      var ch = this.input.charAt(this.pos);\n      if (lineBreak.test(ch)) { this.raise(start, \"Unterminated regular expression\"); }\n      if (!escaped) {\n        if (ch === \"[\") { inClass = true; }\n        else if (ch === \"]\" && inClass) { inClass = false; }\n        else if (ch === \"/\" && !inClass) { break }\n        escaped = ch === \"\\\\\";\n      } else { escaped = false; }\n      ++this.pos;\n    }\n    var pattern = this.input.slice(start, this.pos);\n    ++this.pos;\n    var flagsStart = this.pos;\n    var flags = this.readWord1();\n    if (this.containsEsc) { this.unexpected(flagsStart); }\n\n    var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\n    state.reset(start, pattern, flags);\n    this.validateRegExpFlags(state);\n    this.validateRegExpPattern(state);\n\n    var value = null;\n    try {\n      value = new RegExp(pattern, flags);\n    } catch (e) {\n    }\n\n    return this.finishToken(types.regexp, {pattern: pattern, flags: flags, value: value})\n  };\n\n\n  pp$9.readInt = function(radix, len) {\n    var start = this.pos, total = 0;\n    for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      var code = this.input.charCodeAt(this.pos), val = (void 0);\n      if (code >= 97) { val = code - 97 + 10; } \n      else if (code >= 65) { val = code - 65 + 10; } \n      else if (code >= 48 && code <= 57) { val = code - 48; } \n      else { val = Infinity; }\n      if (val >= radix) { break }\n      ++this.pos;\n      total = total * radix + val;\n    }\n    if (this.pos === start || len != null && this.pos - start !== len) { return null }\n\n    return total\n  };\n\n  pp$9.readRadixNumber = function(radix) {\n    var start = this.pos;\n    this.pos += 2; \n    var val = this.readInt(radix);\n    if (val == null) { this.raise(this.start + 2, \"Expected number in radix \" + radix); }\n    if (this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110) {\n      val = typeof BigInt !== \"undefined\" ? BigInt(this.input.slice(start, this.pos)) : null;\n      ++this.pos;\n    } else if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n    return this.finishToken(types.num, val)\n  };\n\n\n  pp$9.readNumber = function(startsWithDot) {\n    var start = this.pos;\n    if (!startsWithDot && this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n    var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n    if (octal && this.strict) { this.raise(start, \"Invalid number\"); }\n    var next = this.input.charCodeAt(this.pos);\n    if (!octal && !startsWithDot && this.options.ecmaVersion >= 11 && next === 110) {\n      var str$1 = this.input.slice(start, this.pos);\n      var val$1 = typeof BigInt !== \"undefined\" ? BigInt(str$1) : null;\n      ++this.pos;\n      if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n      return this.finishToken(types.num, val$1)\n    }\n    if (octal && /[89]/.test(this.input.slice(start, this.pos))) { octal = false; }\n    if (next === 46 && !octal) { \n      ++this.pos;\n      this.readInt(10);\n      next = this.input.charCodeAt(this.pos);\n    }\n    if ((next === 69 || next === 101) && !octal) { \n      next = this.input.charCodeAt(++this.pos);\n      if (next === 43 || next === 45) { ++this.pos; } \n      if (this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n    }\n    if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n\n    var str = this.input.slice(start, this.pos);\n    var val = octal ? parseInt(str, 8) : parseFloat(str);\n    return this.finishToken(types.num, val)\n  };\n\n\n  pp$9.readCodePoint = function() {\n    var ch = this.input.charCodeAt(this.pos), code;\n\n    if (ch === 123) { \n      if (this.options.ecmaVersion < 6) { this.unexpected(); }\n      var codePos = ++this.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n      ++this.pos;\n      if (code > 0x10FFFF) { this.invalidStringToken(codePos, \"Code point out of bounds\"); }\n    } else {\n      code = this.readHexChar(4);\n    }\n    return code\n  };\n\n  function codePointToString$1(code) {\n    if (code <= 0xFFFF) { return String.fromCharCode(code) }\n    code -= 0x10000;\n    return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n  }\n\n  pp$9.readString = function(quote) {\n    var out = \"\", chunkStart = ++this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated string constant\"); }\n      var ch = this.input.charCodeAt(this.pos);\n      if (ch === quote) { break }\n      if (ch === 92) { \n        out += this.input.slice(chunkStart, this.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.pos;\n      } else {\n        if (isNewLine(ch, this.options.ecmaVersion >= 10)) { this.raise(this.start, \"Unterminated string constant\"); }\n        ++this.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.pos++);\n    return this.finishToken(types.string, out)\n  };\n\n\n  var INVALID_TEMPLATE_ESCAPE_ERROR = {};\n\n  pp$9.tryReadTemplateToken = function() {\n    this.inTemplateElement = true;\n    try {\n      this.readTmplToken();\n    } catch (err) {\n      if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n        this.readInvalidTemplateToken();\n      } else {\n        throw err\n      }\n    }\n\n    this.inTemplateElement = false;\n  };\n\n  pp$9.invalidStringToken = function(position, message) {\n    if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n      throw INVALID_TEMPLATE_ESCAPE_ERROR\n    } else {\n      this.raise(position, message);\n    }\n  };\n\n  pp$9.readTmplToken = function() {\n    var out = \"\", chunkStart = this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated template\"); }\n      var ch = this.input.charCodeAt(this.pos);\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) { \n        if (this.pos === this.start && (this.type === types.template || this.type === types.invalidTemplate)) {\n          if (ch === 36) {\n            this.pos += 2;\n            return this.finishToken(types.dollarBraceL)\n          } else {\n            ++this.pos;\n            return this.finishToken(types.backQuote)\n          }\n        }\n        out += this.input.slice(chunkStart, this.pos);\n        return this.finishToken(types.template, out)\n      }\n      if (ch === 92) { \n        out += this.input.slice(chunkStart, this.pos);\n        out += this.readEscapedChar(true);\n        chunkStart = this.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.pos);\n        ++this.pos;\n        switch (ch) {\n        case 13:\n          if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; }\n        case 10:\n          out += \"\\n\";\n          break\n        default:\n          out += String.fromCharCode(ch);\n          break\n        }\n        if (this.options.locations) {\n          ++this.curLine;\n          this.lineStart = this.pos;\n        }\n        chunkStart = this.pos;\n      } else {\n        ++this.pos;\n      }\n    }\n  };\n\n  pp$9.readInvalidTemplateToken = function() {\n    for (; this.pos < this.input.length; this.pos++) {\n      switch (this.input[this.pos]) {\n      case \"\\\\\":\n        ++this.pos;\n        break\n\n      case \"$\":\n        if (this.input[this.pos + 1] !== \"{\") {\n          break\n        }\n\n      case \"`\":\n        return this.finishToken(types.invalidTemplate, this.input.slice(this.start, this.pos))\n\n      }\n    }\n    this.raise(this.start, \"Unterminated template\");\n  };\n\n\n  pp$9.readEscapedChar = function(inTemplate) {\n    var ch = this.input.charCodeAt(++this.pos);\n    ++this.pos;\n    switch (ch) {\n    case 110: return \"\\n\" \n    case 114: return \"\\r\" \n    case 120: return String.fromCharCode(this.readHexChar(2)) \n    case 117: return codePointToString$1(this.readCodePoint()) \n    case 116: return \"\\t\" \n    case 98: return \"\\b\" \n    case 118: return \"\\u000b\" \n    case 102: return \"\\f\" \n    case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } \n    case 10: \n      if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n      return \"\"\n    case 56:\n    case 57:\n      if (inTemplate) {\n        var codePos = this.pos - 1;\n\n        this.invalidStringToken(\n          codePos,\n          \"Invalid escape sequence in template string\"\n        );\n\n        return null\n      }\n    default:\n      if (ch >= 48 && ch <= 55) {\n        var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n        var octal = parseInt(octalStr, 8);\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n        this.pos += octalStr.length - 1;\n        ch = this.input.charCodeAt(this.pos);\n        if ((octalStr !== \"0\" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\n          this.invalidStringToken(\n            this.pos - 1 - octalStr.length,\n            inTemplate\n              ? \"Octal literal in template string\"\n              : \"Octal literal in strict mode\"\n          );\n        }\n        return String.fromCharCode(octal)\n      }\n      if (isNewLine(ch)) {\n        return \"\"\n      }\n      return String.fromCharCode(ch)\n    }\n  };\n\n\n  pp$9.readHexChar = function(len) {\n    var codePos = this.pos;\n    var n = this.readInt(16, len);\n    if (n === null) { this.invalidStringToken(codePos, \"Bad character escape sequence\"); }\n    return n\n  };\n\n\n  pp$9.readWord1 = function() {\n    this.containsEsc = false;\n    var word = \"\", first = true, chunkStart = this.pos;\n    var astral = this.options.ecmaVersion >= 6;\n    while (this.pos < this.input.length) {\n      var ch = this.fullCharCodeAtPos();\n      if (isIdentifierChar(ch, astral)) {\n        this.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) { \n        this.containsEsc = true;\n        word += this.input.slice(chunkStart, this.pos);\n        var escStart = this.pos;\n        if (this.input.charCodeAt(++this.pos) !== 117) \n          { this.invalidStringToken(this.pos, \"Expecting Unicode escape sequence \\\\uXXXX\"); }\n        ++this.pos;\n        var esc = this.readCodePoint();\n        if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n          { this.invalidStringToken(escStart, \"Invalid Unicode escape\"); }\n        word += codePointToString$1(esc);\n        chunkStart = this.pos;\n      } else {\n        break\n      }\n      first = false;\n    }\n    return word + this.input.slice(chunkStart, this.pos)\n  };\n\n\n  pp$9.readWord = function() {\n    var word = this.readWord1();\n    var type = types.name;\n    if (this.keywords.test(word)) {\n      type = keywords$1[word];\n    }\n    return this.finishToken(type, word)\n  };\n\n\n  var version = \"7.1.0\";\n\n  Parser.acorn = {\n    Parser: Parser,\n    version: version,\n    defaultOptions: defaultOptions,\n    Position: Position,\n    SourceLocation: SourceLocation,\n    getLineInfo: getLineInfo,\n    Node: Node,\n    TokenType: TokenType,\n    tokTypes: types,\n    keywordTypes: keywords$1,\n    TokContext: TokContext,\n    tokContexts: types$1,\n    isIdentifierChar: isIdentifierChar,\n    isIdentifierStart: isIdentifierStart,\n    Token: Token,\n    isNewLine: isNewLine,\n    lineBreak: lineBreak,\n    lineBreakG: lineBreakG,\n    nonASCIIwhitespace: nonASCIIwhitespace\n  };\n\n\n  function parse(input, options) {\n    return Parser.parse(input, options)\n  }\n\n\n  function parseExpressionAt(input, pos, options) {\n    return Parser.parseExpressionAt(input, pos, options)\n  }\n\n\n  function tokenizer(input, options) {\n    return Parser.tokenizer(input, options)\n  }\n\n  exports.Node = Node;\n  exports.Parser = Parser;\n  exports.Position = Position;\n  exports.SourceLocation = SourceLocation;\n  exports.TokContext = TokContext;\n  exports.Token = Token;\n  exports.TokenType = TokenType;\n  exports.defaultOptions = defaultOptions;\n  exports.getLineInfo = getLineInfo;\n  exports.isIdentifierChar = isIdentifierChar;\n  exports.isIdentifierStart = isIdentifierStart;\n  exports.isNewLine = isNewLine;\n  exports.keywordTypes = keywords$1;\n  exports.lineBreak = lineBreak;\n  exports.lineBreakG = lineBreakG;\n  exports.nonASCIIwhitespace = nonASCIIwhitespace;\n  exports.parse = parse;\n  exports.parseExpressionAt = parseExpressionAt;\n  exports.tokContexts = types$1;\n  exports.tokTypes = types;\n  exports.tokenizer = tokenizer;\n  exports.version = version;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n\n},{}],2:[function(require,module,exports){\n\n},{}],3:[function(require,module,exports){\nfunction glWiretap(gl, options = {}) {\n  const {\n    contextName = 'gl',\n    throwGetError,\n    useTrackablePrimitives,\n    readPixelsFile,\n    recording = [],\n    variables = {},\n    onReadPixels,\n    onUnrecognizedArgumentLookup,\n  } = options;\n  const proxy = new Proxy(gl, { get: listen });\n  const contextVariables = [];\n  const entityNames = {};\n  let imageCount = 0;\n  let indent = '';\n  let readPixelsVariableName;\n  return proxy;\n  function listen(obj, property) {\n    switch (property) {\n      case 'addComment': return addComment;\n      case 'checkThrowError': return checkThrowError;\n      case 'getReadPixelsVariableName': return readPixelsVariableName;\n      case 'insertVariable': return insertVariable;\n      case 'reset': return reset;\n      case 'setIndent': return setIndent;\n      case 'toString': return toString;\n      case 'getContextVariableName': return getContextVariableName;\n    }\n    if (typeof gl[property] === 'function') {\n      return function() { \n        switch (property) {\n          case 'getError':\n            if (throwGetError) {\n              recording.push(`${indent}if (${contextName}.getError() !== ${contextName}.NONE) throw new Error('error');`);\n            } else {\n              recording.push(`${indent}${contextName}.getError();`); \n            }\n            return gl.getError();\n          case 'getExtension': {\n            const variableName = `${contextName}Variables${contextVariables.length}`;\n            recording.push(`${indent}const ${variableName} = ${contextName}.getExtension('${arguments[0]}');`);\n            const extension = gl.getExtension(arguments[0]);\n            if (extension && typeof extension === 'object') {\n              const tappedExtension = glExtensionWiretap(extension, {\n                getEntity,\n                useTrackablePrimitives,\n                recording,\n                contextName: variableName,\n                contextVariables,\n                variables,\n                indent,\n                onUnrecognizedArgumentLookup,\n              });\n              contextVariables.push(tappedExtension);\n              return tappedExtension;\n            } else {\n              contextVariables.push(null);\n            }\n            return extension;\n          }\n          case 'readPixels':\n            const i = contextVariables.indexOf(arguments[6]);\n            let targetVariableName;\n            if (i === -1) {\n              const variableName = getVariableName(arguments[6]);\n              if (variableName) {\n                targetVariableName = variableName;\n                recording.push(`${indent}${variableName}`);\n              } else {\n                targetVariableName = `${contextName}Variable${contextVariables.length}`;\n                contextVariables.push(arguments[6]);\n                recording.push(`${indent}const ${targetVariableName} = new ${arguments[6].constructor.name}(${arguments[6].length});`);\n              }\n            } else {\n              targetVariableName = `${contextName}Variable${i}`;\n            }\n            readPixelsVariableName = targetVariableName;\n            const argumentAsStrings = [\n              arguments[0],\n              arguments[1],\n              arguments[2],\n              arguments[3],\n              getEntity(arguments[4]),\n              getEntity(arguments[5]),\n              targetVariableName\n            ];\n            recording.push(`${indent}${contextName}.readPixels(${argumentAsStrings.join(', ')});`);\n            if (readPixelsFile) {\n              writePPM(arguments[2], arguments[3]);\n            }\n            if (onReadPixels) {\n              onReadPixels(targetVariableName, argumentAsStrings);\n            }\n            return gl.readPixels.apply(gl, arguments);\n          case 'drawBuffers':\n            recording.push(`${indent}${contextName}.drawBuffers([${argumentsToString(arguments[0], { contextName, contextVariables, getEntity, addVariable, variables, onUnrecognizedArgumentLookup } )}]);`);\n            return gl.drawBuffers(arguments[0]);\n        }\n        let result = gl[property].apply(gl, arguments);\n        switch (typeof result) {\n          case 'undefined':\n            recording.push(`${indent}${methodCallToString(property, arguments)};`);\n            return;\n          case 'number':\n          case 'boolean':\n            if (useTrackablePrimitives && contextVariables.indexOf(trackablePrimitive(result)) === -1) {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n              contextVariables.push(result = trackablePrimitive(result));\n              break;\n            }\n          default:\n            if (result === null) {\n              recording.push(`${methodCallToString(property, arguments)};`);\n            } else {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n            }\n\n            contextVariables.push(result);\n        }\n        return result;\n      }\n    }\n    entityNames[gl[property]] = property;\n    return gl[property];\n  }\n  function toString() {\n    return recording.join('\\n');\n  }\n  function reset() {\n    while (recording.length > 0) {\n      recording.pop();\n    }\n  }\n  function insertVariable(name, value) {\n    variables[name] = value;\n  }\n  function getEntity(value) {\n    const name = entityNames[value];\n    if (name) {\n      return contextName + '.' + name;\n    }\n    return value;\n  }\n  function setIndent(spaces) {\n    indent = ' '.repeat(spaces);\n  }\n  function addVariable(value, source) {\n    const variableName = `${contextName}Variable${contextVariables.length}`;\n    recording.push(`${indent}const ${variableName} = ${source};`);\n    contextVariables.push(value);\n    return variableName;\n  }\n  function writePPM(width, height) {\n    const sourceVariable = `${contextName}Variable${contextVariables.length}`;\n    const imageVariable = `imageDatum${imageCount}`;\n    recording.push(`${indent}let ${imageVariable} = [\"P3\\\\n# ${readPixelsFile}.ppm\\\\n\", ${width}, ' ', ${height}, \"\\\\n255\\\\n\"].join(\"\");`);\n    recording.push(`${indent}for (let i = 0; i < ${imageVariable}.length; i += 4) {`);\n    recording.push(`${indent}  ${imageVariable} += ${sourceVariable}[i] + ' ' + ${sourceVariable}[i + 1] + ' ' + ${sourceVariable}[i + 2] + ' ';`);\n    recording.push(`${indent}}`);\n    recording.push(`${indent}if (typeof require !== \"undefined\") {`);\n    recording.push(`${indent}  require('fs').writeFileSync('./${readPixelsFile}.ppm', ${imageVariable});`);\n    recording.push(`${indent}}`);\n    imageCount++;\n  }\n  function addComment(value) {\n    recording.push(`${indent}// ${value}`);\n  }\n  function checkThrowError() {\n    recording.push(`${indent}(() => {\n${indent}const error = ${contextName}.getError();\n${indent}if (error !== ${contextName}.NONE) {\n${indent}  const names = Object.getOwnPropertyNames(gl);\n${indent}  for (let i = 0; i < names.length; i++) {\n${indent}    const name = names[i];\n${indent}    if (${contextName}[name] === error) {\n${indent}      throw new Error('${contextName} threw ' + name);\n${indent}    }\n${indent}  }\n${indent}}\n${indent}})();`);\n  }\n  function methodCallToString(method, args) {\n    return `${contextName}.${method}(${argumentsToString(args, { contextName, contextVariables, getEntity, addVariable, variables, onUnrecognizedArgumentLookup })})`;\n  }\n\n  function getVariableName(value) {\n    if (variables) {\n      for (const name in variables) {\n        if (variables[name] === value) {\n          return name;\n        }\n      }\n    }\n    return null;\n  }\n\n  function getContextVariableName(value) {\n    const i = contextVariables.indexOf(value);\n    if (i !== -1) {\n      return `${contextName}Variable${i}`;\n    }\n    return null;\n  }\n}\n\nfunction glExtensionWiretap(extension, options) {\n  const proxy = new Proxy(extension, { get: listen });\n  const extensionEntityNames = {};\n  const {\n    contextName,\n    contextVariables,\n    getEntity,\n    useTrackablePrimitives,\n    recording,\n    variables,\n    indent,\n    onUnrecognizedArgumentLookup,\n  } = options;\n  return proxy;\n  function listen(obj, property) {\n    if (typeof obj[property] === 'function') {\n      return function() {\n        switch (property) {\n          case 'drawBuffersWEBGL':\n            recording.push(`${indent}${contextName}.drawBuffersWEBGL([${argumentsToString(arguments[0], { contextName, contextVariables, getEntity: getExtensionEntity, addVariable, variables, onUnrecognizedArgumentLookup })}]);`);\n            return extension.drawBuffersWEBGL(arguments[0]);\n        }\n        let result = extension[property].apply(extension, arguments);\n        switch (typeof result) {\n          case 'undefined':\n            recording.push(`${indent}${methodCallToString(property, arguments)};`);\n            return;\n          case 'number':\n          case 'boolean':\n            if (useTrackablePrimitives && contextVariables.indexOf(trackablePrimitive(result)) === -1) {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n              contextVariables.push(result = trackablePrimitive(result));\n            } else {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n              contextVariables.push(result);\n            }\n            break;\n          default:\n            if (result === null) {\n              recording.push(`${methodCallToString(property, arguments)};`);\n            } else {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n            }\n            contextVariables.push(result);\n        }\n        return result;\n      };\n    }\n    extensionEntityNames[extension[property]] = property;\n    return extension[property];\n  }\n\n  function getExtensionEntity(value) {\n    if (extensionEntityNames.hasOwnProperty(value)) {\n      return `${contextName}.${extensionEntityNames[value]}`;\n    }\n    return getEntity(value);\n  }\n\n  function methodCallToString(method, args) {\n    return `${contextName}.${method}(${argumentsToString(args, { contextName, contextVariables, getEntity: getExtensionEntity, addVariable, variables, onUnrecognizedArgumentLookup })})`;\n  }\n\n  function addVariable(value, source) {\n    const variableName = `${contextName}Variable${contextVariables.length}`;\n    contextVariables.push(value);\n    recording.push(`${indent}const ${variableName} = ${source};`);\n    return variableName;\n  }\n}\n\nfunction argumentsToString(args, options) {\n  const { variables, onUnrecognizedArgumentLookup } = options;\n  return (Array.from(args).map((arg) => {\n    const variableName = getVariableName(arg);\n    if (variableName) {\n      return variableName;\n    }\n    return argumentToString(arg, options);\n  }).join(', '));\n\n  function getVariableName(value) {\n    if (variables) {\n      for (const name in variables) {\n        if (!variables.hasOwnProperty(name)) continue;\n        if (variables[name] === value) {\n          return name;\n        }\n      }\n    }\n    if (onUnrecognizedArgumentLookup) {\n      return onUnrecognizedArgumentLookup(value);\n    }\n    return null;\n  }\n}\n\nfunction argumentToString(arg, options) {\n  const { contextName, contextVariables, getEntity, addVariable, onUnrecognizedArgumentLookup } = options;\n  if (typeof arg === 'undefined') {\n    return 'undefined';\n  }\n  if (arg === null) {\n    return 'null';\n  }\n  const i = contextVariables.indexOf(arg);\n  if (i > -1) {\n    return `${contextName}Variable${i}`;\n  }\n  switch (arg.constructor.name) {\n    case 'String':\n      const hasLines = /\\n/.test(arg);\n      const hasSingleQuotes = /'/.test(arg);\n      const hasDoubleQuotes = /\"/.test(arg);\n      if (hasLines) {\n        return '`' + arg + '`';\n      } else if (hasSingleQuotes && !hasDoubleQuotes) {\n        return '\"' + arg + '\"';\n      } else if (!hasSingleQuotes && hasDoubleQuotes) {\n        return \"'\" + arg + \"'\";\n      } else {\n        return '\\'' + arg + '\\'';\n      }\n    case 'Number': return getEntity(arg);\n    case 'Boolean': return getEntity(arg);\n    case 'Array':\n      return addVariable(arg, `new ${arg.constructor.name}([${Array.from(arg).join(',')}])`);\n    case 'Float32Array':\n    case 'Uint8Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n      return addVariable(arg, `new ${arg.constructor.name}(${JSON.stringify(Array.from(arg))})`);\n    default:\n      if (onUnrecognizedArgumentLookup) {\n        const instantiationString = onUnrecognizedArgumentLookup(arg);\n        if (instantiationString) {\n          return instantiationString;\n        }\n      }\n      throw new Error(`unrecognized argument type ${arg.constructor.name}`);\n  }\n}\n\nfunction trackablePrimitive(value) {\n  return new value.constructor(value);\n}\n\nif (typeof module !== 'undefined') {\n  module.exports = { glWiretap, glExtensionWiretap };\n}\n\nif (typeof window !== 'undefined') {\n  glWiretap.glExtensionWiretap = glExtensionWiretap;\n  window.glWiretap = glWiretap;\n}\n\n},{}],4:[function(require,module,exports){\nfunction setupArguments(args) {\n  const newArguments = new Array(args.length);\n  for (let i = 0; i < args.length; i++) {\n    const arg = args[i];\n    if (arg.toArray) {\n      newArguments[i] = arg.toArray();\n    } else {\n      newArguments[i] = arg;\n    }\n  }\n  return newArguments;\n}\n\nfunction mock1D() {\n  const args = setupArguments(arguments);\n  const row = new Float32Array(this.output.x);\n  for (let x = 0; x < this.output.x; x++) {\n    this.thread.x = x;\n    this.thread.y = 0;\n    this.thread.z = 0;\n    row[x] = this._fn.apply(this, args);\n  }\n  return row;\n}\n\nfunction mock2D() {\n  const args = setupArguments(arguments);\n  const matrix = new Array(this.output.y);\n  for (let y = 0; y < this.output.y; y++) {\n    const row = new Float32Array(this.output.x);\n    for (let x = 0; x < this.output.x; x++) {\n      this.thread.x = x;\n      this.thread.y = y;\n      this.thread.z = 0;\n      row[x] = this._fn.apply(this, args);\n    }\n    matrix[y] = row;\n  }\n  return matrix;\n}\n\nfunction mock2DGraphical() {\n  const args = setupArguments(arguments);\n  for (let y = 0; y < this.output.y; y++) {\n    for (let x = 0; x < this.output.x; x++) {\n      this.thread.x = x;\n      this.thread.y = y;\n      this.thread.z = 0;\n      this._fn.apply(this, args);\n    }\n  }\n}\n\nfunction mock3D() {\n  const args = setupArguments(arguments);\n  const cube = new Array(this.output.z);\n  for (let z = 0; z < this.output.z; z++) {\n    const matrix = new Array(this.output.y);\n    for (let y = 0; y < this.output.y; y++) {\n      const row = new Float32Array(this.output.x);\n      for (let x = 0; x < this.output.x; x++) {\n        this.thread.x = x;\n        this.thread.y = y;\n        this.thread.z = z;\n        row[x] = this._fn.apply(this, args);\n      }\n      matrix[y] = row;\n    }\n    cube[z] = matrix;\n  }\n  return cube;\n}\n\nfunction apiDecorate(kernel) {\n  kernel.setOutput = (output) => {\n    kernel.output = setupOutput(output);\n    if (kernel.graphical) {\n      setupGraphical(kernel);\n    }\n  };\n  kernel.toJSON = () => {\n    throw new Error('Not usable with gpuMock');\n  };\n  kernel.setConstants = (flag) => {\n    kernel.constants = flag;\n    return kernel;\n  };\n  kernel.setGraphical = (flag) => {\n    kernel.graphical = flag;\n    return kernel;\n  };\n  kernel.setCanvas = (flag) => {\n    kernel.canvas = flag;\n    return kernel;\n  };\n  kernel.setContext = (flag) => {\n    kernel.context = flag;\n    return kernel;\n  };\n  kernel.destroy = () => {};\n  kernel.validateSettings = () => {};\n  if (kernel.graphical && kernel.output) {\n    setupGraphical(kernel);\n  }\n  kernel.exec = function() {\n    return new Promise((resolve, reject) => {\n      try {\n        resolve(kernel.apply(kernel, arguments));\n      } catch(e) {\n        reject(e);\n      }\n    });\n  };\n  kernel.getPixels = (flip) => {\n    const {x, y} = kernel.output;\n    return flip ? flipPixels(kernel._imageData.data, x, y) : kernel._imageData.data.slice(0);\n  };\n  kernel.color = function(r, g, b, a) {\n    if (typeof a === 'undefined') {\n      a = 1;\n    }\n\n    r = Math.floor(r * 255);\n    g = Math.floor(g * 255);\n    b = Math.floor(b * 255);\n    a = Math.floor(a * 255);\n\n    const width = kernel.output.x;\n    const height = kernel.output.y;\n\n    const x = kernel.thread.x;\n    const y = height - kernel.thread.y - 1;\n\n    const index = x + y * width;\n\n    kernel._colorData[index * 4 + 0] = r;\n    kernel._colorData[index * 4 + 1] = g;\n    kernel._colorData[index * 4 + 2] = b;\n    kernel._colorData[index * 4 + 3] = a;\n  };\n\n  const mockMethod = () => kernel;\n  const methods = [\n    'setWarnVarUsage',\n    'setArgumentTypes',\n    'setTactic',\n    'setOptimizeFloatMemory',\n    'setDebug',\n    'setLoopMaxIterations',\n    'setConstantTypes',\n    'setFunctions',\n    'setNativeFunctions',\n    'setInjectedNative',\n    'setPipeline',\n    'setPrecision',\n    'setOutputToTexture',\n    'setImmutable',\n    'setStrictIntegers',\n    'setDynamicOutput',\n    'setHardcodeConstants',\n    'setDynamicArguments',\n    'setUseLegacyEncoder',\n    'setWarnVarUsage',\n    'addSubKernel',\n  ];\n  for (let i = 0; i < methods.length; i++) {\n    kernel[methods[i]] = mockMethod;\n  }\n  return kernel;\n}\n\nfunction setupGraphical(kernel) {\n  const {x, y} = kernel.output;\n  if (kernel.context && kernel.context.createImageData) {\n    const data = new Uint8ClampedArray(x * y * 4);\n    kernel._imageData = kernel.context.createImageData(x, y);\n    kernel._colorData = data;\n  } else {\n    const data = new Uint8ClampedArray(x * y * 4);\n    kernel._imageData = { data };\n    kernel._colorData = data;\n  }\n}\n\nfunction setupOutput(output) {\n  let result = null;\n  if (output.length) {\n    if (output.length === 3) {\n      const [x,y,z] = output;\n      result = { x, y, z };\n    } else if (output.length === 2) {\n      const [x,y] = output;\n      result = { x, y };\n    } else {\n      const [x] = output;\n      result = { x };\n    }\n  } else {\n    result = output;\n  }\n  return result;\n}\n\nfunction gpuMock(fn, settings = {}) {\n  const output = settings.output ? setupOutput(settings.output) : null;\n  function kernel() {\n    if (kernel.output.z) {\n      return mock3D.apply(kernel, arguments);\n    } else if (kernel.output.y) {\n      if (kernel.graphical) {\n        return mock2DGraphical.apply(kernel, arguments);\n      }\n      return mock2D.apply(kernel, arguments);\n    } else {\n      return mock1D.apply(kernel, arguments);\n    }\n  }\n  kernel._fn = fn;\n  kernel.constants = settings.constants || null;\n  kernel.context = settings.context || null;\n  kernel.canvas = settings.canvas || null;\n  kernel.graphical = settings.graphical || false;\n  kernel._imageData = null;\n  kernel._colorData = null;\n  kernel.output = output;\n  kernel.thread = {\n    x: 0,\n    y: 0,\n    z: 0\n  };\n  return apiDecorate(kernel);\n}\n\nfunction flipPixels(pixels, width, height) {\n  const halfHeight = height / 2 | 0; \n  const bytesPerRow = width * 4;\n  const temp = new Uint8ClampedArray(width * 4);\n  const result = pixels.slice(0);\n  for (let y = 0; y < halfHeight; ++y) {\n    const topOffset = y * bytesPerRow;\n    const bottomOffset = (height - y - 1) * bytesPerRow;\n\n    temp.set(result.subarray(topOffset, topOffset + bytesPerRow));\n\n    result.copyWithin(topOffset, bottomOffset, bottomOffset + bytesPerRow);\n\n    result.set(temp, bottomOffset);\n  }\n  return result;\n}\n\nmodule.exports = {\n  gpuMock\n};\n\n},{}],5:[function(require,module,exports){\nconst { utils } = require('./utils');\n\nfunction alias(name, source) {\n  const fnString = source.toString();\n  return new Function(`return function ${ name } (${ utils.getArgumentNamesFromString(fnString).join(', ') }) {\n  ${ utils.getFunctionBodyFromString(fnString) }\n}`)();\n}\n\nmodule.exports = {\n  alias\n};\n},{\"./utils\":114}],6:[function(require,module,exports){\nconst { FunctionNode } = require('../function-node');\n\nclass CPUFunctionNode extends FunctionNode {\n  astFunction(ast, retArr) {\n\n    if (!this.isRootKernel) {\n      retArr.push('function');\n      retArr.push(' ');\n      retArr.push(this.name);\n      retArr.push('(');\n\n      for (let i = 0; i < this.argumentNames.length; ++i) {\n        const argumentName = this.argumentNames[i];\n\n        if (i > 0) {\n          retArr.push(', ');\n        }\n        retArr.push('user_');\n        retArr.push(argumentName);\n      }\n\n      retArr.push(') {\\n');\n    }\n\n    for (let i = 0; i < ast.body.body.length; ++i) {\n      this.astGeneric(ast.body.body[i], retArr);\n      retArr.push('\\n');\n    }\n\n    if (!this.isRootKernel) {\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astReturnStatement(ast, retArr) {\n    const type = this.returnType || this.getType(ast.argument);\n\n    if (!this.returnType) {\n      this.returnType = type;\n    }\n\n    if (this.isRootKernel) {\n      retArr.push(this.leadingReturnStatement);\n      this.astGeneric(ast.argument, retArr);\n      retArr.push(';\\n');\n      retArr.push(this.followingReturnStatement);\n      retArr.push('continue;\\n');\n    } else if (this.isSubKernel) {\n      retArr.push(`subKernelResult_${ this.name } = `);\n      this.astGeneric(ast.argument, retArr);\n      retArr.push(';');\n      retArr.push(`return subKernelResult_${ this.name };`);\n    } else {\n      retArr.push('return ');\n      this.astGeneric(ast.argument, retArr);\n      retArr.push(';');\n    }\n    return retArr;\n  }\n\n  astLiteral(ast, retArr) {\n\n    if (isNaN(ast.value)) {\n      throw this.astErrorOutput(\n        'Non-numeric literal not supported : ' + ast.value,\n        ast\n      );\n    }\n\n    retArr.push(ast.value);\n\n    return retArr;\n  }\n\n  astBinaryExpression(ast, retArr) {\n    retArr.push('(');\n    this.astGeneric(ast.left, retArr);\n    retArr.push(ast.operator);\n    this.astGeneric(ast.right, retArr);\n    retArr.push(')');\n    return retArr;\n  }\n\n  astIdentifierExpression(idtNode, retArr) {\n    if (idtNode.type !== 'Identifier') {\n      throw this.astErrorOutput(\n        'IdentifierExpression - not an Identifier',\n        idtNode\n      );\n    }\n\n    switch (idtNode.name) {\n      case 'Infinity':\n        retArr.push('Infinity');\n        break;\n      default:\n        if (this.constants && this.constants.hasOwnProperty(idtNode.name)) {\n          retArr.push('constants_' + idtNode.name);\n        } else {\n          retArr.push('user_' + idtNode.name);\n        }\n    }\n\n    return retArr;\n  }\n\n  astForStatement(forNode, retArr) {\n    if (forNode.type !== 'ForStatement') {\n      throw this.astErrorOutput('Invalid for statement', forNode);\n    }\n\n    const initArr = [];\n    const testArr = [];\n    const updateArr = [];\n    const bodyArr = [];\n    let isSafe = null;\n\n    if (forNode.init) {\n      this.pushState('in-for-loop-init');\n      this.astGeneric(forNode.init, initArr);\n      for (let i = 0; i < initArr.length; i++) {\n        if (initArr[i].includes && initArr[i].includes(',')) {\n          isSafe = false;\n        }\n      }\n      this.popState('in-for-loop-init');\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.test) {\n      this.astGeneric(forNode.test, testArr);\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.update) {\n      this.astGeneric(forNode.update, updateArr);\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.body) {\n      this.pushState('loop-body');\n      this.astGeneric(forNode.body, bodyArr);\n      this.popState('loop-body');\n    }\n\n    if (isSafe === null) {\n      isSafe = this.isSafe(forNode.init) && this.isSafe(forNode.test);\n    }\n\n    if (isSafe) {\n      retArr.push(`for (${initArr.join('')};${testArr.join('')};${updateArr.join('')}){\\n`);\n      retArr.push(bodyArr.join(''));\n      retArr.push('}\\n');\n    } else {\n      const iVariableName = this.getInternalVariableName('safeI');\n      if (initArr.length > 0) {\n        retArr.push(initArr.join(''), ';\\n');\n      }\n      retArr.push(`for (let ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n      if (testArr.length > 0) {\n        retArr.push(`if (!${testArr.join('')}) break;\\n`);\n      }\n      retArr.push(bodyArr.join(''));\n      retArr.push(`\\n${updateArr.join('')};`);\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astWhileStatement(whileNode, retArr) {\n    if (whileNode.type !== 'WhileStatement') {\n      throw this.astErrorOutput(\n        'Invalid while statement',\n        whileNode\n      );\n    }\n\n    retArr.push('for (let i = 0; i < LOOP_MAX; i++) {');\n    retArr.push('if (');\n    this.astGeneric(whileNode.test, retArr);\n    retArr.push(') {\\n');\n    this.astGeneric(whileNode.body, retArr);\n    retArr.push('} else {\\n');\n    retArr.push('break;\\n');\n    retArr.push('}\\n');\n    retArr.push('}\\n');\n\n    return retArr;\n  }\n\n  astDoWhileStatement(doWhileNode, retArr) {\n    if (doWhileNode.type !== 'DoWhileStatement') {\n      throw this.astErrorOutput(\n        'Invalid while statement',\n        doWhileNode\n      );\n    }\n\n    retArr.push('for (let i = 0; i < LOOP_MAX; i++) {');\n    this.astGeneric(doWhileNode.body, retArr);\n    retArr.push('if (!');\n    this.astGeneric(doWhileNode.test, retArr);\n    retArr.push(') {\\n');\n    retArr.push('break;\\n');\n    retArr.push('}\\n');\n    retArr.push('}\\n');\n\n    return retArr;\n\n  }\n\n  astAssignmentExpression(assNode, retArr) {\n    const declaration = this.getDeclaration(assNode.left);\n    if (declaration && !declaration.assignable) {\n      throw this.astErrorOutput(`Variable ${assNode.left.name} is not assignable here`, assNode);\n    }\n    this.astGeneric(assNode.left, retArr);\n    retArr.push(assNode.operator);\n    this.astGeneric(assNode.right, retArr);\n    return retArr;\n  }\n\n  astBlockStatement(bNode, retArr) {\n    if (this.isState('loop-body')) {\n      this.pushState('block-body'); \n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      this.popState('block-body');\n    } else {\n      retArr.push('{\\n');\n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astVariableDeclaration(varDecNode, retArr) {\n    retArr.push(`${varDecNode.kind} `);\n    const { declarations } = varDecNode;\n    for (let i = 0; i < declarations.length; i++) {\n      if (i > 0) {\n        retArr.push(',');\n      }\n      const declaration = declarations[i];\n      const info = this.getDeclaration(declaration.id);\n      if (!info.valueType) {\n        info.valueType = this.getType(declaration.init);\n      }\n      this.astGeneric(declaration, retArr);\n    }\n    if (!this.isState('in-for-loop-init')) {\n      retArr.push(';');\n    }\n    return retArr;\n  }\n\n  astIfStatement(ifNode, retArr) {\n    retArr.push('if (');\n    this.astGeneric(ifNode.test, retArr);\n    retArr.push(')');\n    if (ifNode.consequent.type === 'BlockStatement') {\n      this.astGeneric(ifNode.consequent, retArr);\n    } else {\n      retArr.push(' {\\n');\n      this.astGeneric(ifNode.consequent, retArr);\n      retArr.push('\\n}\\n');\n    }\n\n    if (ifNode.alternate) {\n      retArr.push('else ');\n      if (ifNode.alternate.type === 'BlockStatement' || ifNode.alternate.type === 'IfStatement') {\n        this.astGeneric(ifNode.alternate, retArr);\n      } else {\n        retArr.push(' {\\n');\n        this.astGeneric(ifNode.alternate, retArr);\n        retArr.push('\\n}\\n');\n      }\n    }\n    return retArr;\n\n  }\n\n  astSwitchStatement(ast, retArr) {\n    const { discriminant, cases } = ast;\n    retArr.push('switch (');\n    this.astGeneric(discriminant, retArr);\n    retArr.push(') {\\n');\n    for (let i = 0; i < cases.length; i++) {\n      if (cases[i].test === null) {\n        retArr.push('default:\\n');\n        this.astGeneric(cases[i].consequent, retArr);\n        if (cases[i].consequent && cases[i].consequent.length > 0) {\n          retArr.push('break;\\n');\n        }\n        continue;\n      }\n      retArr.push('case ');\n      this.astGeneric(cases[i].test, retArr);\n      retArr.push(':\\n');\n      if (cases[i].consequent && cases[i].consequent.length > 0) {\n        this.astGeneric(cases[i].consequent, retArr);\n        retArr.push('break;\\n');\n      }\n    }\n    retArr.push('\\n}');\n  }\n\n  astThisExpression(tNode, retArr) {\n    retArr.push('_this');\n    return retArr;\n  }\n\n  astMemberExpression(mNode, retArr) {\n    const {\n      signature,\n      type,\n      property,\n      xProperty,\n      yProperty,\n      zProperty,\n      name,\n      origin\n    } = this.getMemberExpressionDetails(mNode);\n    switch (signature) {\n      case 'this.thread.value':\n        retArr.push(`_this.thread.${ name }`);\n        return retArr;\n      case 'this.output.value':\n        switch (name) {\n          case 'x':\n            retArr.push('outputX');\n            break;\n          case 'y':\n            retArr.push('outputY');\n            break;\n          case 'z':\n            retArr.push('outputZ');\n            break;\n          default:\n            throw this.astErrorOutput('Unexpected expression', mNode);\n        }\n        return retArr;\n      case 'value':\n        throw this.astErrorOutput('Unexpected expression', mNode);\n      case 'value[]':\n      case 'value[][]':\n      case 'value[][][]':\n      case 'value.value':\n        if (origin === 'Math') {\n          retArr.push(Math[name]);\n          return retArr;\n        }\n        switch (property) {\n          case 'r':\n            retArr.push(`user_${ name }[0]`);\n            return retArr;\n          case 'g':\n            retArr.push(`user_${ name }[1]`);\n            return retArr;\n          case 'b':\n            retArr.push(`user_${ name }[2]`);\n            return retArr;\n          case 'a':\n            retArr.push(`user_${ name }[3]`);\n            return retArr;\n        }\n        break;\n      case 'this.constants.value':\n      case 'this.constants.value[]':\n      case 'this.constants.value[][]':\n      case 'this.constants.value[][][]':\n        break;\n      case 'fn()[]':\n        this.astGeneric(mNode.object, retArr);\n        retArr.push('[');\n        this.astGeneric(mNode.property, retArr);\n        retArr.push(']');\n        return retArr;\n      case 'fn()[][]':\n        this.astGeneric(mNode.object.object, retArr);\n        retArr.push('[');\n        this.astGeneric(mNode.object.property, retArr);\n        retArr.push(']');\n        retArr.push('[');\n        this.astGeneric(mNode.property, retArr);\n        retArr.push(']');\n        return retArr;\n      default:\n        throw this.astErrorOutput('Unexpected expression', mNode);\n    }\n\n    if (!mNode.computed) {\n      switch (type) {\n        case 'Number':\n        case 'Integer':\n        case 'Float':\n        case 'Boolean':\n          retArr.push(`${origin}_${name}`);\n          return retArr;\n      }\n    }\n\n    const markupName = `${origin}_${name}`;\n\n    switch (type) {\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n      case 'HTMLImageArray':\n      case 'ArrayTexture(1)':\n      case 'ArrayTexture(2)':\n      case 'ArrayTexture(3)':\n      case 'ArrayTexture(4)':\n      case 'HTMLImage':\n      default:\n        let size;\n        let isInput;\n        if (origin === 'constants') {\n          const constant = this.constants[name];\n          isInput = this.constantTypes[name] === 'Input';\n          size = isInput ? constant.size : null;\n        } else {\n          isInput = this.isInput(name);\n          size = isInput ? this.argumentSizes[this.argumentNames.indexOf(name)] : null;\n        }\n        retArr.push(`${ markupName }`);\n        if (zProperty && yProperty) {\n          if (isInput) {\n            retArr.push('[(');\n            this.astGeneric(zProperty, retArr);\n            retArr.push(`*${ this.dynamicArguments ? '(outputY * outputX)' : size[1] * size[0] })+(`);\n            this.astGeneric(yProperty, retArr);\n            retArr.push(`*${ this.dynamicArguments ? 'outputX' : size[0] })+`);\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          } else {\n            retArr.push('[');\n            this.astGeneric(zProperty, retArr);\n            retArr.push(']');\n            retArr.push('[');\n            this.astGeneric(yProperty, retArr);\n            retArr.push(']');\n            retArr.push('[');\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          }\n        } else if (yProperty) {\n          if (isInput) {\n            retArr.push('[(');\n            this.astGeneric(yProperty, retArr);\n            retArr.push(`*${ this.dynamicArguments ? 'outputX' : size[0] })+`);\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          } else {\n            retArr.push('[');\n            this.astGeneric(yProperty, retArr);\n            retArr.push(']');\n            retArr.push('[');\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          }\n        } else if (typeof xProperty !== 'undefined') {\n          retArr.push('[');\n          this.astGeneric(xProperty, retArr);\n          retArr.push(']');\n        }\n    }\n    return retArr;\n  }\n\n  astCallExpression(ast, retArr) {\n    if (ast.type !== 'CallExpression') {\n      throw this.astErrorOutput('Unknown CallExpression', ast);\n    }\n    let functionName = this.astMemberExpressionUnroll(ast.callee);\n\n    if (this.calledFunctions.indexOf(functionName) < 0) {\n      this.calledFunctions.push(functionName);\n    }\n\n    const isMathFunction = this.isAstMathFunction(ast);\n\n    if (this.onFunctionCall) {\n      this.onFunctionCall(this.name, functionName, ast.arguments);\n    }\n\n    retArr.push(functionName);\n\n    retArr.push('(');\n    const targetTypes = this.lookupFunctionArgumentTypes(functionName) || [];\n    for (let i = 0; i < ast.arguments.length; ++i) {\n      const argument = ast.arguments[i];\n\n      let argumentType = this.getType(argument);\n      if (!targetTypes[i]) {\n        this.triggerImplyArgumentType(functionName, i, argumentType, this);\n      }\n\n      if (i > 0) {\n        retArr.push(', ');\n      }\n      this.astGeneric(argument, retArr);\n    }\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  astArrayExpression(arrNode, retArr) {\n    const returnType = this.getType(arrNode);\n    const arrLen = arrNode.elements.length;\n    const elements = [];\n    for (let i = 0; i < arrLen; ++i) {\n      const element = [];\n      this.astGeneric(arrNode.elements[i], element);\n      elements.push(element.join(''));\n    }\n    switch (returnType) {\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n        retArr.push(`[${elements.join(', ')}]`);\n        break;\n      default:\n        retArr.push(`new Float32Array([${elements.join(', ')}])`);\n    }\n    return retArr;\n  }\n\n  astDebuggerStatement(arrNode, retArr) {\n    retArr.push('debugger;');\n    return retArr;\n  }\n}\n\nmodule.exports = {\n  CPUFunctionNode\n};\n},{\"../function-node\":10}],7:[function(require,module,exports){\nconst { utils } = require('../../utils');\n\nfunction constantsToString(constants, types) {\n  const results = [];\n  for (const name in types) {\n    if (!types.hasOwnProperty(name)) continue;\n    const type = types[name];\n    const constant = constants[name];\n    switch (type) {\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n      case 'Boolean':\n        results.push(`${name}:${constant}`);\n        break;\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n        results.push(`${name}:new ${constant.constructor.name}(${JSON.stringify(Array.from(constant))})`);\n        break;\n    }\n  }\n  return `{ ${ results.join() } }`;\n}\n\nfunction cpuKernelString(cpuKernel, name) {\n  const header = [];\n  const thisProperties = [];\n  const beforeReturn = [];\n\n  const useFunctionKeyword = !/^function/.test(cpuKernel.color.toString());\n\n  header.push(\n    '  const { context, canvas, constants: incomingConstants } = settings;',\n    `  const output = new Int32Array(${JSON.stringify(Array.from(cpuKernel.output))});`,\n    `  const _constantTypes = ${JSON.stringify(cpuKernel.constantTypes)};`,\n    `  const _constants = ${constantsToString(cpuKernel.constants, cpuKernel.constantTypes)};`\n  );\n\n  thisProperties.push(\n    '    constants: _constants,',\n    '    context,',\n    '    output,',\n    '    thread: {x: 0, y: 0, z: 0},'\n  );\n\n  if (cpuKernel.graphical) {\n    header.push(`  const _imageData = context.createImageData(${cpuKernel.output[0]}, ${cpuKernel.output[1]});`);\n    header.push(`  const _colorData = new Uint8ClampedArray(${cpuKernel.output[0]} * ${cpuKernel.output[1]} * 4);`);\n\n    const colorFn = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel.color.toString(), {\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case '_colorData':\n            return '_colorData';\n          case '_imageData':\n            return '_imageData';\n          case 'output':\n            return 'output';\n          case 'thread':\n            return 'this.thread';\n        }\n        return JSON.stringify(cpuKernel[propertyName]);\n      },\n      findDependency: (object, name) => {\n        return null;\n      }\n    });\n\n    const getPixelsFn = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel.getPixels.toString(), {\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case '_colorData':\n            return '_colorData';\n          case '_imageData':\n            return '_imageData';\n          case 'output':\n            return 'output';\n          case 'thread':\n            return 'this.thread';\n        }\n        return JSON.stringify(cpuKernel[propertyName]);\n      },\n      findDependency: () => {\n        return null;\n      }\n    });\n\n    thisProperties.push(\n      '    _imageData,',\n      '    _colorData,',\n      `    color: ${colorFn},`\n    );\n\n    beforeReturn.push(\n      `  kernel.getPixels = ${getPixelsFn};`\n    );\n  }\n\n  const constantTypes = [];\n  const constantKeys = Object.keys(cpuKernel.constantTypes);\n  for (let i = 0; i < constantKeys.length; i++) {\n    constantTypes.push(cpuKernel.constantTypes[constantKeys]);\n  }\n  if (cpuKernel.argumentTypes.indexOf('HTMLImageArray') !== -1 || constantTypes.indexOf('HTMLImageArray') !== -1) {\n    const flattenedImageTo3DArray = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel._imageTo3DArray.toString(), {\n      doNotDefine: ['canvas'],\n      findDependency: (object, name) => {\n        if (object === 'this') {\n          return (useFunctionKeyword ? 'function ' : '') + cpuKernel[name].toString();\n        }\n        return null;\n      },\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case 'canvas':\n            return;\n          case 'context':\n            return 'context';\n        }\n      }\n    });\n    beforeReturn.push(flattenedImageTo3DArray);\n    thisProperties.push(`    _mediaTo2DArray,`);\n    thisProperties.push(`    _imageTo3DArray,`);\n  } else if (cpuKernel.argumentTypes.indexOf('HTMLImage') !== -1 || constantTypes.indexOf('HTMLImage') !== -1) {\n    const flattenedImageTo2DArray = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel._mediaTo2DArray.toString(), {\n      findDependency: (object, name) => {\n        return null;\n      },\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case 'canvas':\n            return 'settings.canvas';\n          case 'context':\n            return 'settings.context';\n        }\n        throw new Error('unhandled thisLookup');\n      }\n    });\n    beforeReturn.push(flattenedImageTo2DArray);\n    thisProperties.push(`    _mediaTo2DArray,`);\n  }\n\n  return `function(settings) {\n${ header.join('\\n') }\n  for (const p in _constantTypes) {\n    if (!_constantTypes.hasOwnProperty(p)) continue;\n    const type = _constantTypes[p];\n    switch (type) {\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n      case 'Boolean':\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n        if (incomingConstants.hasOwnProperty(p)) {\n          console.warn('constant ' + p + ' of type ' + type + ' cannot be resigned');\n        }\n        continue;\n    }\n    if (!incomingConstants.hasOwnProperty(p)) {\n      throw new Error('constant ' + p + ' not found');\n    }\n    _constants[p] = incomingConstants[p];\n  }\n  const kernel = (function() {\n${cpuKernel._kernelString}\n  })\n    .apply({ ${thisProperties.join('\\n')} });\n  ${ beforeReturn.join('\\n') }\n  return kernel;\n}`;\n}\n\nmodule.exports = {\n  cpuKernelString\n};\n},{\"../../utils\":114}],8:[function(require,module,exports){\nconst { Kernel } = require('../kernel');\nconst { FunctionBuilder } = require('../function-builder');\nconst { CPUFunctionNode } = require('./function-node');\nconst { utils } = require('../../utils');\nconst { cpuKernelString } = require('./kernel-string');\n\nclass CPUKernel extends Kernel {\n  static getFeatures() {\n    return this.features;\n  }\n  static get features() {\n    return Object.freeze({\n      kernelMap: true,\n      isIntegerDivisionAccurate: true\n    });\n  }\n  static get isSupported() {\n    return true;\n  }\n  static isContextMatch(context) {\n    return false;\n  }\n  static get mode() {\n    return 'cpu';\n  }\n\n  static nativeFunctionArguments() {\n    return null;\n  }\n\n  static nativeFunctionReturnType() {\n    throw new Error(`Looking up native function return type not supported on ${this.name}`);\n  }\n\n  static combineKernels(combinedKernel) {\n    return combinedKernel;\n  }\n\n  static getSignature(kernel, argumentTypes) {\n    return 'cpu' + (argumentTypes.length > 0 ? ':' + argumentTypes.join(',') : '');\n  }\n\n  constructor(source, settings) {\n    super(source, settings);\n    this.mergeSettings(source.settings || settings);\n\n    this._imageData = null;\n    this._colorData = null;\n    this._kernelString = null;\n    this._prependedString = [];\n    this.thread = {\n      x: 0,\n      y: 0,\n      z: 0\n    };\n    this.translatedSources = null;\n  }\n\n  initCanvas() {\n    if (typeof document !== 'undefined') {\n      return document.createElement('canvas');\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      return new OffscreenCanvas(0, 0);\n    }\n  }\n\n  initContext() {\n    if (!this.canvas) return null;\n    return this.canvas.getContext('2d');\n  }\n\n  initPlugins(settings) {\n    return [];\n  }\n\n  validateSettings(args) {\n    if (!this.output || this.output.length === 0) {\n      if (args.length !== 1) {\n        throw new Error('Auto output only supported for kernels with only one input');\n      }\n\n      const argType = utils.getVariableType(args[0], this.strictIntegers);\n      if (argType === 'Array') {\n        this.output = utils.getDimensions(argType);\n      } else if (argType === 'NumberTexture' || argType === 'ArrayTexture(4)') {\n        this.output = args[0].output;\n      } else {\n        throw new Error('Auto output not supported for input type: ' + argType);\n      }\n    }\n\n    if (this.graphical) {\n      if (this.output.length !== 2) {\n        throw new Error('Output must have 2 dimensions on graphical mode');\n      }\n    }\n\n    this.checkOutput();\n  }\n\n  translateSource() {\n    this.leadingReturnStatement = this.output.length > 1 ? 'resultX[x] = ' : 'result[x] = ';\n    if (this.subKernels) {\n      const followingReturnStatement = [];\n      for (let i = 0; i < this.subKernels.length; i++) {\n        const {\n          name\n        } = this.subKernels[i];\n        followingReturnStatement.push(this.output.length > 1 ? `resultX_${ name }[x] = subKernelResult_${ name };\\n` : `result_${ name }[x] = subKernelResult_${ name };\\n`);\n      }\n      this.followingReturnStatement = followingReturnStatement.join('');\n    }\n    const functionBuilder = FunctionBuilder.fromKernel(this, CPUFunctionNode);\n    this.translatedSources = functionBuilder.getPrototypes('kernel');\n    if (!this.graphical && !this.returnType) {\n      this.returnType = functionBuilder.getKernelResultType();\n    }\n  }\n\n  build() {\n    if (this.built) return;\n    this.setupConstants();\n    this.setupArguments(arguments);\n    this.validateSettings(arguments);\n    this.translateSource();\n\n    if (this.graphical) {\n      const {\n        canvas,\n        output\n      } = this;\n      if (!canvas) {\n        throw new Error('no canvas available for using graphical output');\n      }\n      const width = output[0];\n      const height = output[1] || 1;\n      canvas.width = width;\n      canvas.height = height;\n      this._imageData = this.context.createImageData(width, height);\n      this._colorData = new Uint8ClampedArray(width * height * 4);\n    }\n\n    const kernelString = this.getKernelString();\n    this.kernelString = kernelString;\n\n    if (this.debug) {\n      console.log('Function output:');\n      console.log(kernelString);\n    }\n\n    try {\n      this.run = new Function([], kernelString).bind(this)();\n    } catch (e) {\n      console.error('An error occurred compiling the javascript: ', e);\n    }\n    this.buildSignature(arguments);\n    this.built = true;\n  }\n\n  color(r, g, b, a) {\n    if (typeof a === 'undefined') {\n      a = 1;\n    }\n\n    r = Math.floor(r * 255);\n    g = Math.floor(g * 255);\n    b = Math.floor(b * 255);\n    a = Math.floor(a * 255);\n\n    const width = this.output[0];\n    const height = this.output[1];\n\n    const x = this.thread.x;\n    const y = height - this.thread.y - 1;\n\n    const index = x + y * width;\n\n    this._colorData[index * 4 + 0] = r;\n    this._colorData[index * 4 + 1] = g;\n    this._colorData[index * 4 + 2] = b;\n    this._colorData[index * 4 + 3] = a;\n  }\n\n  getKernelString() {\n    if (this._kernelString !== null) return this._kernelString;\n\n    let kernelThreadString = null;\n    let {\n      translatedSources\n    } = this;\n    if (translatedSources.length > 1) {\n      translatedSources = translatedSources.filter(fn => {\n        if (/^function/.test(fn)) return fn;\n        kernelThreadString = fn;\n        return false;\n      });\n    } else {\n      kernelThreadString = translatedSources.shift();\n    }\n    return this._kernelString = `  const LOOP_MAX = ${ this._getLoopMaxString() };\n  ${ this.injectedNative || '' }\n  const _this = this;\n  ${ this._resultKernelHeader() }\n  ${ this._processConstants() }\n  return (${ this.argumentNames.map(argumentName => 'user_' + argumentName).join(', ') }) => {\n    ${ this._prependedString.join('') }\n    ${ this._earlyThrows() }\n    ${ this._processArguments() }\n    ${ this.graphical ? this._graphicalKernelBody(kernelThreadString) : this._resultKernelBody(kernelThreadString) }\n    ${ translatedSources.length > 0 ? translatedSources.join('\\n') : '' }\n  };`;\n  }\n\n  toString() {\n    return cpuKernelString(this);\n  }\n\n  _getLoopMaxString() {\n    return (\n      this.loopMaxIterations ?\n      ` ${ parseInt(this.loopMaxIterations) };` :\n      ' 1000;'\n    );\n  }\n\n  _processConstants() {\n    if (!this.constants) return '';\n\n    const result = [];\n    for (let p in this.constants) {\n      const type = this.constantTypes[p];\n      switch (type) {\n        case 'HTMLCanvas':\n        case 'OffscreenCanvas':\n        case 'HTMLImage':\n        case 'ImageBitmap':\n        case 'ImageData':\n        case 'HTMLVideo':\n          result.push(`    const constants_${p} = this._mediaTo2DArray(this.constants.${p});\\n`);\n          break;\n        case 'HTMLImageArray':\n          result.push(`    const constants_${p} = this._imageTo3DArray(this.constants.${p});\\n`);\n          break;\n        case 'Input':\n          result.push(`    const constants_${p} = this.constants.${p}.value;\\n`);\n          break;\n        default:\n          result.push(`    const constants_${p} = this.constants.${p};\\n`);\n      }\n    }\n    return result.join('');\n  }\n\n  _earlyThrows() {\n    if (this.graphical) return '';\n    if (this.immutable) return '';\n    if (!this.pipeline) return '';\n    const arrayArguments = [];\n    for (let i = 0; i < this.argumentTypes.length; i++) {\n      if (this.argumentTypes[i] === 'Array') {\n        arrayArguments.push(this.argumentNames[i]);\n      }\n    }\n    if (arrayArguments.length === 0) return '';\n    const checks = [];\n    for (let i = 0; i < arrayArguments.length; i++) {\n      const argumentName = arrayArguments[i];\n      const checkSubKernels = this._mapSubKernels(subKernel => `user_${argumentName} === result_${subKernel.name}`).join(' || ');\n      checks.push(`user_${argumentName} === result${checkSubKernels ? ` || ${checkSubKernels}` : ''}`);\n    }\n    return `if (${checks.join(' || ')}) throw new Error('Source and destination arrays are the same.  Use immutable = true');`;\n  }\n\n  _processArguments() {\n    const result = [];\n    for (let i = 0; i < this.argumentTypes.length; i++) {\n      const variableName = `user_${this.argumentNames[i]}`;\n      switch (this.argumentTypes[i]) {\n        case 'HTMLCanvas':\n        case 'OffscreenCanvas':\n        case 'HTMLImage':\n        case 'ImageBitmap':\n        case 'ImageData':\n        case 'HTMLVideo':\n          result.push(`    ${variableName} = this._mediaTo2DArray(${variableName});\\n`);\n          break;\n        case 'HTMLImageArray':\n          result.push(`    ${variableName} = this._imageTo3DArray(${variableName});\\n`);\n          break;\n        case 'Input':\n          result.push(`    ${variableName} = ${variableName}.value;\\n`);\n          break;\n        case 'ArrayTexture(1)':\n        case 'ArrayTexture(2)':\n        case 'ArrayTexture(3)':\n        case 'ArrayTexture(4)':\n        case 'NumberTexture':\n        case 'MemoryOptimizedNumberTexture':\n          result.push(`\n    if (${variableName}.toArray) {\n      if (!_this.textureCache) {\n        _this.textureCache = [];\n        _this.arrayCache = [];\n      }\n      const textureIndex = _this.textureCache.indexOf(${variableName});\n      if (textureIndex !== -1) {\n        ${variableName} = _this.arrayCache[textureIndex];\n      } else {\n        _this.textureCache.push(${variableName});\n        ${variableName} = ${variableName}.toArray();\n        _this.arrayCache.push(${variableName});\n      }\n    }`);\n          break;\n      }\n    }\n    return result.join('');\n  }\n\n  _mediaTo2DArray(media) {\n    const canvas = this.canvas;\n    const width = media.width > 0 ? media.width : media.videoWidth;\n    const height = media.height > 0 ? media.height : media.videoHeight;\n    if (canvas.width < width) {\n      canvas.width = width;\n    }\n    if (canvas.height < height) {\n      canvas.height = height;\n    }\n    const ctx = this.context;\n    let pixelsData;\n    if (media.constructor === ImageData) {\n      pixelsData = media.data;\n    } else {\n      ctx.drawImage(media, 0, 0, width, height);\n      pixelsData = ctx.getImageData(0, 0, width, height).data;\n    }\n    const imageArray = new Array(height);\n    let index = 0;\n    for (let y = height - 1; y >= 0; y--) {\n      const row = imageArray[y] = new Array(width);\n      for (let x = 0; x < width; x++) {\n        const pixel = new Float32Array(4);\n        pixel[0] = pixelsData[index++] / 255; \n        pixel[1] = pixelsData[index++] / 255; \n        pixel[2] = pixelsData[index++] / 255; \n        pixel[3] = pixelsData[index++] / 255; \n        row[x] = pixel;\n      }\n    }\n    return imageArray;\n  }\n\n  getPixels(flip) {\n    const [width, height] = this.output;\n    return flip ? utils.flipPixels(this._imageData.data, width, height) : this._imageData.data.slice(0);\n  }\n\n  _imageTo3DArray(images) {\n    const imagesArray = new Array(images.length);\n    for (let i = 0; i < images.length; i++) {\n      imagesArray[i] = this._mediaTo2DArray(images[i]);\n    }\n    return imagesArray;\n  }\n\n  _resultKernelHeader() {\n    if (this.graphical) return '';\n    if (this.immutable) return '';\n    if (!this.pipeline) return '';\n    switch (this.output.length) {\n      case 1:\n        return this._mutableKernel1DResults();\n      case 2:\n        return this._mutableKernel2DResults();\n      case 3:\n        return this._mutableKernel3DResults();\n    }\n  }\n\n  _resultKernelBody(kernelString) {\n    switch (this.output.length) {\n      case 1:\n        return (!this.immutable && this.pipeline ? this._resultMutableKernel1DLoop(kernelString) : this._resultImmutableKernel1DLoop(kernelString)) + this._kernelOutput();\n      case 2:\n        return (!this.immutable && this.pipeline ? this._resultMutableKernel2DLoop(kernelString) : this._resultImmutableKernel2DLoop(kernelString)) + this._kernelOutput();\n      case 3:\n        return (!this.immutable && this.pipeline ? this._resultMutableKernel3DLoop(kernelString) : this._resultImmutableKernel3DLoop(kernelString)) + this._kernelOutput();\n      default:\n        throw new Error('unsupported size kernel');\n    }\n  }\n\n  _graphicalKernelBody(kernelThreadString) {\n    switch (this.output.length) {\n      case 2:\n        return this._graphicalKernel2DLoop(kernelThreadString) + this._graphicalOutput();\n      default:\n        throw new Error('unsupported size kernel');\n    }\n  }\n\n  _graphicalOutput() {\n    return `\n    this._imageData.data.set(this._colorData);\n    this.context.putImageData(this._imageData, 0, 0);\n    return;`\n  }\n\n  _getKernelResultTypeConstructorString() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        return 'Float32Array';\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n        return 'Array';\n      default:\n        if (this.graphical) {\n          return 'Float32Array';\n        }\n        throw new Error(`unhandled returnType ${ this.returnType }`);\n    }\n  }\n\n  _resultImmutableKernel1DLoop(kernelString) {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const result = new ${constructorString}(outputX);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new ${constructorString}(outputX);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let x = 0; x < outputX; x++) {\n      this.thread.x = x;\n      this.thread.y = 0;\n      this.thread.z = 0;\n      ${ kernelString }\n    }`;\n  }\n\n  _mutableKernel1DResults() {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const result = new ${constructorString}(outputX);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new ${constructorString}(outputX);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }`;\n  }\n\n  _resultMutableKernel1DLoop(kernelString) {\n    return `  const outputX = _this.output[0];\n    for (let x = 0; x < outputX; x++) {\n      this.thread.x = x;\n      this.thread.y = 0;\n      this.thread.z = 0;\n      ${ kernelString }\n    }`;\n  }\n\n  _resultImmutableKernel2DLoop(kernelString) {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const result = new Array(outputY);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputY);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let y = 0; y < outputY; y++) {\n      this.thread.z = 0;\n      this.thread.y = y;\n      const resultX = result[y] = new ${constructorString}(outputX);\n      ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = result_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('') }\n      for (let x = 0; x < outputX; x++) {\n        this.thread.x = x;\n        ${ kernelString }\n      }\n    }`;\n  }\n\n  _mutableKernel2DResults() {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const result = new Array(outputY);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputY);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let y = 0; y < outputY; y++) {\n      const resultX = result[y] = new ${constructorString}(outputX);\n      ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = result_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('') }\n    }`;\n  }\n\n  _resultMutableKernel2DLoop(kernelString) {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    for (let y = 0; y < outputY; y++) {\n      this.thread.z = 0;\n      this.thread.y = y;\n      const resultX = result[y];\n      ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = result_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('') }\n      for (let x = 0; x < outputX; x++) {\n        this.thread.x = x;\n        ${ kernelString }\n      }\n    }`;\n  }\n\n  _graphicalKernel2DLoop(kernelString) {\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    for (let y = 0; y < outputY; y++) {\n      this.thread.z = 0;\n      this.thread.y = y;\n      for (let x = 0; x < outputX; x++) {\n        this.thread.x = x;\n        ${ kernelString }\n      }\n    }`;\n  }\n\n  _resultImmutableKernel3DLoop(kernelString) {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const outputZ = _this.output[2];\n    const result = new Array(outputZ);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputZ);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let z = 0; z < outputZ; z++) {\n      this.thread.z = z;\n      const resultY = result[z] = new Array(outputY);\n      ${ this._mapSubKernels(subKernel => `const resultY_${ subKernel.name } = result_${subKernel.name}[z] = new Array(outputY);\\n`).join('      ') }\n      for (let y = 0; y < outputY; y++) {\n        this.thread.y = y;\n        const resultX = resultY[y] = new ${constructorString}(outputX);\n        ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = resultY_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('        ') }\n        for (let x = 0; x < outputX; x++) {\n          this.thread.x = x;\n          ${ kernelString }\n        }\n      }\n    }`;\n  }\n\n  _mutableKernel3DResults() {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const outputZ = _this.output[2];\n    const result = new Array(outputZ);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputZ);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let z = 0; z < outputZ; z++) {\n      const resultY = result[z] = new Array(outputY);\n      ${ this._mapSubKernels(subKernel => `const resultY_${ subKernel.name } = result_${subKernel.name}[z] = new Array(outputY);\\n`).join('      ') }\n      for (let y = 0; y < outputY; y++) {\n        const resultX = resultY[y] = new ${constructorString}(outputX);\n        ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = resultY_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('        ') }\n      }\n    }`;\n  }\n\n  _resultMutableKernel3DLoop(kernelString) {\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const outputZ = _this.output[2];\n    for (let z = 0; z < outputZ; z++) {\n      this.thread.z = z;\n      const resultY = result[z];\n      for (let y = 0; y < outputY; y++) {\n        this.thread.y = y;\n        const resultX = resultY[y];\n        for (let x = 0; x < outputX; x++) {\n          this.thread.x = x;\n          ${ kernelString }\n        }\n      }\n    }`;\n  }\n\n  _kernelOutput() {\n    if (!this.subKernels) {\n      return '\\n    return result;';\n    }\n    return `\\n    return {\n      result: result,\n      ${ this.subKernels.map(subKernel => `${ subKernel.property }: result_${ subKernel.name }`).join(',\\n      ') }\n    };`;\n  }\n\n  _mapSubKernels(fn) {\n    return this.subKernels === null ? [''] :\n      this.subKernels.map(fn);\n  }\n\n  destroy(removeCanvasReference) {\n    if (removeCanvasReference) {\n      delete this.canvas;\n    }\n  }\n\n  static destroyContext(context) {}\n\n  toJSON() {\n    const json = super.toJSON();\n    json.functionNodes = FunctionBuilder.fromKernel(this, CPUFunctionNode).toJSON();\n    return json;\n  }\n\n  setOutput(output) {\n    super.setOutput(output);\n    const [width, height] = this.output;\n    if (this.graphical) {\n      this._imageData = this.context.createImageData(width, height);\n      this._colorData = new Uint8ClampedArray(width * height * 4);\n    }\n  }\n\n  prependString(value) {\n    if (this._kernelString) throw new Error('Kernel already built');\n    this._prependedString.push(value);\n  }\n\n  hasPrependString(value) {\n    return this._prependedString.indexOf(value) > -1;\n  }\n}\n\nmodule.exports = {\n  CPUKernel\n};\n},{\"../../utils\":114,\"../function-builder\":9,\"../kernel\":36,\"./function-node\":6,\"./kernel-string\":7}],9:[function(require,module,exports){\nclass FunctionBuilder {\n  static fromKernel(kernel, FunctionNode, extraNodeOptions) {\n    const {\n      kernelArguments,\n      kernelConstants,\n      argumentNames,\n      argumentSizes,\n      argumentBitRatios,\n      constants,\n      constantBitRatios,\n      debug,\n      loopMaxIterations,\n      nativeFunctions,\n      output,\n      optimizeFloatMemory,\n      precision,\n      plugins,\n      source,\n      subKernels,\n      functions,\n      leadingReturnStatement,\n      followingReturnStatement,\n      dynamicArguments,\n      dynamicOutput,\n    } = kernel;\n\n    const argumentTypes = new Array(kernelArguments.length);\n    const constantTypes = {};\n\n    for (let i = 0; i < kernelArguments.length; i++) {\n      argumentTypes[i] = kernelArguments[i].type;\n    }\n\n    for (let i = 0; i < kernelConstants.length; i++) {\n      const kernelConstant = kernelConstants[i];\n      constantTypes[kernelConstant.name] = kernelConstant.type;\n    }\n\n    const needsArgumentType = (functionName, index) => {\n      return functionBuilder.needsArgumentType(functionName, index);\n    };\n\n    const assignArgumentType = (functionName, index, type) => {\n      functionBuilder.assignArgumentType(functionName, index, type);\n    };\n\n    const lookupReturnType = (functionName, ast, requestingNode) => {\n      return functionBuilder.lookupReturnType(functionName, ast, requestingNode);\n    };\n\n    const lookupFunctionArgumentTypes = (functionName) => {\n      return functionBuilder.lookupFunctionArgumentTypes(functionName);\n    };\n\n    const lookupFunctionArgumentName = (functionName, argumentIndex) => {\n      return functionBuilder.lookupFunctionArgumentName(functionName, argumentIndex);\n    };\n\n    const lookupFunctionArgumentBitRatio = (functionName, argumentName) => {\n      return functionBuilder.lookupFunctionArgumentBitRatio(functionName, argumentName);\n    };\n\n    const triggerImplyArgumentType = (functionName, i, argumentType, requestingNode) => {\n      functionBuilder.assignArgumentType(functionName, i, argumentType, requestingNode);\n    };\n\n    const triggerImplyArgumentBitRatio = (functionName, argumentName, calleeFunctionName, argumentIndex) => {\n      functionBuilder.assignArgumentBitRatio(functionName, argumentName, calleeFunctionName, argumentIndex);\n    };\n\n    const onFunctionCall = (functionName, calleeFunctionName, args) => {\n      functionBuilder.trackFunctionCall(functionName, calleeFunctionName, args);\n    };\n\n    const onNestedFunction = (ast, source) => {\n      const argumentNames = [];\n      for (let i = 0; i < ast.params.length; i++) {\n        argumentNames.push(ast.params[i].name);\n      }\n      const nestedFunction = new FunctionNode(source, Object.assign({}, nodeOptions, {\n        returnType: null,\n        ast,\n        name: ast.id.name,\n        argumentNames,\n        lookupReturnType,\n        lookupFunctionArgumentTypes,\n        lookupFunctionArgumentName,\n        lookupFunctionArgumentBitRatio,\n        needsArgumentType,\n        assignArgumentType,\n        triggerImplyArgumentType,\n        triggerImplyArgumentBitRatio,\n        onFunctionCall,\n      }));\n      nestedFunction.traceFunctionAST(ast);\n      functionBuilder.addFunctionNode(nestedFunction);\n    };\n\n    const nodeOptions = Object.assign({\n      isRootKernel: false,\n      onNestedFunction,\n      lookupReturnType,\n      lookupFunctionArgumentTypes,\n      lookupFunctionArgumentName,\n      lookupFunctionArgumentBitRatio,\n      needsArgumentType,\n      assignArgumentType,\n      triggerImplyArgumentType,\n      triggerImplyArgumentBitRatio,\n      onFunctionCall,\n      optimizeFloatMemory,\n      precision,\n      constants,\n      constantTypes,\n      constantBitRatios,\n      debug,\n      loopMaxIterations,\n      output,\n      plugins,\n      dynamicArguments,\n      dynamicOutput,\n    }, extraNodeOptions || {});\n\n    const rootNodeOptions = Object.assign({}, nodeOptions, {\n      isRootKernel: true,\n      name: 'kernel',\n      argumentNames,\n      argumentTypes,\n      argumentSizes,\n      argumentBitRatios,\n      leadingReturnStatement,\n      followingReturnStatement,\n    });\n\n    if (typeof source === 'object' && source.functionNodes) {\n      return new FunctionBuilder().fromJSON(source.functionNodes, FunctionNode);\n    }\n\n    const rootNode = new FunctionNode(source, rootNodeOptions);\n\n    let functionNodes = null;\n    if (functions) {\n      functionNodes = functions.map((fn) => new FunctionNode(fn.source, {\n        returnType: fn.returnType,\n        argumentTypes: fn.argumentTypes,\n        output,\n        plugins,\n        constants,\n        constantTypes,\n        constantBitRatios,\n        optimizeFloatMemory,\n        precision,\n        lookupReturnType,\n        lookupFunctionArgumentTypes,\n        lookupFunctionArgumentName,\n        lookupFunctionArgumentBitRatio,\n        needsArgumentType,\n        assignArgumentType,\n        triggerImplyArgumentType,\n        triggerImplyArgumentBitRatio,\n        onFunctionCall,\n        onNestedFunction,\n      }));\n    }\n\n    let subKernelNodes = null;\n    if (subKernels) {\n      subKernelNodes = subKernels.map((subKernel) => {\n        const { name, source } = subKernel;\n        return new FunctionNode(source, Object.assign({}, nodeOptions, {\n          name,\n          isSubKernel: true,\n          isRootKernel: false,\n        }));\n      });\n    }\n\n    const functionBuilder = new FunctionBuilder({\n      kernel,\n      rootNode,\n      functionNodes,\n      nativeFunctions,\n      subKernelNodes\n    });\n\n    return functionBuilder;\n  }\n\n  constructor(settings) {\n    settings = settings || {};\n    this.kernel = settings.kernel;\n    this.rootNode = settings.rootNode;\n    this.functionNodes = settings.functionNodes || [];\n    this.subKernelNodes = settings.subKernelNodes || [];\n    this.nativeFunctions = settings.nativeFunctions || [];\n    this.functionMap = {};\n    this.nativeFunctionNames = [];\n    this.lookupChain = [];\n    this.functionNodeDependencies = {};\n    this.functionCalls = {};\n\n    if (this.rootNode) {\n      this.functionMap['kernel'] = this.rootNode;\n    }\n\n    if (this.functionNodes) {\n      for (let i = 0; i < this.functionNodes.length; i++) {\n        this.functionMap[this.functionNodes[i].name] = this.functionNodes[i];\n      }\n    }\n\n    if (this.subKernelNodes) {\n      for (let i = 0; i < this.subKernelNodes.length; i++) {\n        this.functionMap[this.subKernelNodes[i].name] = this.subKernelNodes[i];\n      }\n    }\n\n    if (this.nativeFunctions) {\n      for (let i = 0; i < this.nativeFunctions.length; i++) {\n        const nativeFunction = this.nativeFunctions[i];\n        this.nativeFunctionNames.push(nativeFunction.name);\n      }\n    }\n  }\n\n  addFunctionNode(functionNode) {\n    if (!functionNode.name) throw new Error('functionNode.name needs set');\n    this.functionMap[functionNode.name] = functionNode;\n    if (functionNode.isRootKernel) {\n      this.rootNode = functionNode;\n    }\n  }\n\n  traceFunctionCalls(functionName, retList) {\n    functionName = functionName || 'kernel';\n    retList = retList || [];\n\n    if (this.nativeFunctionNames.indexOf(functionName) > -1) {\n      const nativeFunctionIndex = retList.indexOf(functionName);\n      if (nativeFunctionIndex === -1) {\n        retList.push(functionName);\n      } else {\n        const dependantNativeFunctionName = retList.splice(nativeFunctionIndex, 1)[0];\n        retList.push(dependantNativeFunctionName);\n      }\n      return retList;\n    }\n\n    const functionNode = this.functionMap[functionName];\n    if (functionNode) {\n      const functionIndex = retList.indexOf(functionName);\n      if (functionIndex === -1) {\n        retList.push(functionName);\n        functionNode.toString(); \n        for (let i = 0; i < functionNode.calledFunctions.length; ++i) {\n          this.traceFunctionCalls(functionNode.calledFunctions[i], retList);\n        }\n      } else {\n        const dependantFunctionName = retList.splice(functionIndex, 1)[0];\n        retList.push(dependantFunctionName);\n      }\n    }\n\n    return retList;\n  }\n\n  getPrototypeString(functionName) {\n    return this.getPrototypes(functionName).join('\\n');\n  }\n\n  getPrototypes(functionName) {\n    if (this.rootNode) {\n      this.rootNode.toString();\n    }\n    if (functionName) {\n      return this.getPrototypesFromFunctionNames(this.traceFunctionCalls(functionName, []).reverse());\n    }\n    return this.getPrototypesFromFunctionNames(Object.keys(this.functionMap));\n  }\n\n  getStringFromFunctionNames(functionList) {\n    const ret = [];\n    for (let i = 0; i < functionList.length; ++i) {\n      const node = this.functionMap[functionList[i]];\n      if (node) {\n        ret.push(this.functionMap[functionList[i]].toString());\n      }\n    }\n    return ret.join('\\n');\n  }\n\n  getPrototypesFromFunctionNames(functionList) {\n    const ret = [];\n    for (let i = 0; i < functionList.length; ++i) {\n      const functionName = functionList[i];\n      const functionIndex = this.nativeFunctionNames.indexOf(functionName);\n      if (functionIndex > -1) {\n        ret.push(this.nativeFunctions[functionIndex].source);\n        continue;\n      }\n      const node = this.functionMap[functionName];\n      if (node) {\n        ret.push(node.toString());\n      }\n    }\n    return ret;\n  }\n\n  toJSON() {\n    return this.traceFunctionCalls(this.rootNode.name).reverse().map(name => {\n      const nativeIndex = this.nativeFunctions.indexOf(name);\n      if (nativeIndex > -1) {\n        return {\n          name,\n          source: this.nativeFunctions[nativeIndex].source\n        };\n      } else if (this.functionMap[name]) {\n        return this.functionMap[name].toJSON();\n      } else {\n        throw new Error(`function ${ name } not found`);\n      }\n    });\n  }\n\n  fromJSON(jsonFunctionNodes, FunctionNode) {\n    this.functionMap = {};\n    for (let i = 0; i < jsonFunctionNodes.length; i++) {\n      const jsonFunctionNode = jsonFunctionNodes[i];\n      this.functionMap[jsonFunctionNode.settings.name] = new FunctionNode(jsonFunctionNode.ast, jsonFunctionNode.settings);\n    }\n    return this;\n  }\n\n  getString(functionName) {\n    if (functionName) {\n      return this.getStringFromFunctionNames(this.traceFunctionCalls(functionName).reverse());\n    }\n    return this.getStringFromFunctionNames(Object.keys(this.functionMap));\n  }\n\n  lookupReturnType(functionName, ast, requestingNode) {\n    if (ast.type !== 'CallExpression') {\n      throw new Error(`expected ast type of \"CallExpression\", but is ${ ast.type }`);\n    }\n    if (this._isNativeFunction(functionName)) {\n      return this._lookupNativeFunctionReturnType(functionName);\n    } else if (this._isFunction(functionName)) {\n      const node = this._getFunction(functionName);\n      if (node.returnType) {\n        return node.returnType;\n      } else {\n        for (let i = 0; i < this.lookupChain.length; i++) {\n          if (this.lookupChain[i].ast === ast) {\n            if (node.argumentTypes.length === 0 && ast.arguments.length > 0) {\n              const args = ast.arguments;\n              for (let j = 0; j < args.length; j++) {\n                this.lookupChain.push({\n                  name: requestingNode.name,\n                  ast: args[i],\n                  requestingNode\n                });\n                node.argumentTypes[j] = requestingNode.getType(args[j]);\n                this.lookupChain.pop();\n              }\n              return node.returnType = node.getType(node.getJsAST());\n            }\n\n            throw new Error('circlical logic detected!');\n          }\n        }\n        this.lookupChain.push({\n          name: requestingNode.name,\n          ast,\n          requestingNode\n        });\n        const type = node.getType(node.getJsAST());\n        this.lookupChain.pop();\n        return node.returnType = type;\n      }\n    }\n\n    return null;\n  }\n\n  _getFunction(functionName) {\n    if (!this._isFunction(functionName)) {\n      new Error(`Function ${functionName} not found`);\n    }\n    return this.functionMap[functionName];\n  }\n\n  _isFunction(functionName) {\n    return Boolean(this.functionMap[functionName]);\n  }\n\n  _getNativeFunction(functionName) {\n    for (let i = 0; i < this.nativeFunctions.length; i++) {\n      if (this.nativeFunctions[i].name === functionName) return this.nativeFunctions[i];\n    }\n    return null;\n  }\n\n  _isNativeFunction(functionName) {\n    return Boolean(this._getNativeFunction(functionName));\n  }\n\n  _lookupNativeFunctionReturnType(functionName) {\n    let nativeFunction = this._getNativeFunction(functionName);\n    if (nativeFunction) {\n      return nativeFunction.returnType;\n    }\n    throw new Error(`Native function ${ functionName } not found`);\n  }\n\n  lookupFunctionArgumentTypes(functionName) {\n    if (this._isNativeFunction(functionName)) {\n      return this._getNativeFunction(functionName).argumentTypes;\n    } else if (this._isFunction(functionName)) {\n      return this._getFunction(functionName).argumentTypes;\n    }\n    return null;\n  }\n\n  lookupFunctionArgumentName(functionName, argumentIndex) {\n    return this._getFunction(functionName).argumentNames[argumentIndex];\n  }\n\n  lookupFunctionArgumentBitRatio(functionName, argumentName) {\n    if (!this._isFunction(functionName)) {\n      throw new Error('function not found');\n    }\n    if (this.rootNode.name === functionName) {\n      const i = this.rootNode.argumentNames.indexOf(argumentName);\n      if (i !== -1) {\n        return this.rootNode.argumentBitRatios[i];\n      }\n    }\n    const node = this._getFunction(functionName);\n    const i = node.argumentNames.indexOf(argumentName);\n    if (i === -1) {\n      throw new Error('argument not found');\n    }\n    const bitRatio = node.argumentBitRatios[i];\n    if (typeof bitRatio !== 'number') {\n      throw new Error('argument bit ratio not found');\n    }\n    return bitRatio;\n  }\n\n  needsArgumentType(functionName, i) {\n    if (!this._isFunction(functionName)) return false;\n    const fnNode = this._getFunction(functionName);\n    return !fnNode.argumentTypes[i];\n  }\n\n  assignArgumentType(functionName, i, argumentType, requestingNode) {\n    if (!this._isFunction(functionName)) return;\n    const fnNode = this._getFunction(functionName);\n    if (!fnNode.argumentTypes[i]) {\n      fnNode.argumentTypes[i] = argumentType;\n    }\n  }\n\n  assignArgumentBitRatio(functionName, argumentName, calleeFunctionName, argumentIndex) {\n    const node = this._getFunction(functionName);\n    if (this._isNativeFunction(calleeFunctionName)) return null;\n    const calleeNode = this._getFunction(calleeFunctionName);\n    const i = node.argumentNames.indexOf(argumentName);\n    if (i === -1) {\n      throw new Error(`Argument ${argumentName} not found in arguments from function ${functionName}`);\n    }\n    const bitRatio = node.argumentBitRatios[i];\n    if (typeof bitRatio !== 'number') {\n      throw new Error(`Bit ratio for argument ${argumentName} not found in function ${functionName}`);\n    }\n    if (!calleeNode.argumentBitRatios) {\n      calleeNode.argumentBitRatios = new Array(calleeNode.argumentNames.length);\n    }\n    const calleeBitRatio = calleeNode.argumentBitRatios[i];\n    if (typeof calleeBitRatio === 'number') {\n      if (calleeBitRatio !== bitRatio) {\n        throw new Error(`Incompatible bit ratio found at function ${functionName} at argument ${argumentName}`);\n      }\n      return calleeBitRatio;\n    }\n    calleeNode.argumentBitRatios[i] = bitRatio;\n    return bitRatio;\n  }\n\n  trackFunctionCall(functionName, calleeFunctionName, args) {\n    if (!this.functionNodeDependencies[functionName]) {\n      this.functionNodeDependencies[functionName] = new Set();\n      this.functionCalls[functionName] = [];\n    }\n    this.functionNodeDependencies[functionName].add(calleeFunctionName);\n    this.functionCalls[functionName].push(args);\n  }\n\n  getKernelResultType() {\n    return this.rootNode.returnType || this.rootNode.getType(this.rootNode.ast);\n  }\n\n  getSubKernelResultType(index) {\n    const subKernelNode = this.subKernelNodes[index];\n    let called = false;\n    for (let functionCallIndex = 0; functionCallIndex < this.rootNode.functionCalls.length; functionCallIndex++) {\n      const functionCall = this.rootNode.functionCalls[functionCallIndex];\n      if (functionCall.ast.callee.name === subKernelNode.name) {\n        called = true;\n      }\n    }\n    if (!called) {\n      throw new Error(`SubKernel ${ subKernelNode.name } never called by kernel`);\n    }\n    return subKernelNode.returnType || subKernelNode.getType(subKernelNode.getJsAST());\n  }\n\n  getReturnTypes() {\n    const result = {\n      [this.rootNode.name]: this.rootNode.getType(this.rootNode.ast),\n    };\n    const list = this.traceFunctionCalls(this.rootNode.name);\n    for (let i = 0; i < list.length; i++) {\n      const functionName = list[i];\n      const functionNode = this.functionMap[functionName];\n      result[functionName] = functionNode.getType(functionNode.ast);\n    }\n    return result;\n  }\n}\n\nmodule.exports = {\n  FunctionBuilder\n};\n},{}],10:[function(require,module,exports){\nconst acorn = require('acorn');\nconst { utils } = require('../utils');\nconst { FunctionTracer } = require('./function-tracer');\n\nclass FunctionNode {\n  constructor(source, settings) {\n    if (!source && !settings.ast) {\n      throw new Error('source parameter is missing');\n    }\n    settings = settings || {};\n    this.source = source;\n    this.ast = null;\n    this.name = typeof source === 'string' ? settings.isRootKernel ?\n      'kernel' :\n      (settings.name || utils.getFunctionNameFromString(source)) : null;\n    this.calledFunctions = [];\n    this.constants = {};\n    this.constantTypes = {};\n    this.constantBitRatios = {};\n    this.isRootKernel = false;\n    this.isSubKernel = false;\n    this.debug = null;\n    this.functions = null;\n    this.identifiers = null;\n    this.contexts = null;\n    this.functionCalls = null;\n    this.states = [];\n    this.needsArgumentType = null;\n    this.assignArgumentType = null;\n    this.lookupReturnType = null;\n    this.lookupFunctionArgumentTypes = null;\n    this.lookupFunctionArgumentBitRatio = null;\n    this.triggerImplyArgumentType = null;\n    this.triggerImplyArgumentBitRatio = null;\n    this.onNestedFunction = null;\n    this.onFunctionCall = null;\n    this.optimizeFloatMemory = null;\n    this.precision = null;\n    this.loopMaxIterations = null;\n    this.argumentNames = (typeof this.source === 'string' ? utils.getArgumentNamesFromString(this.source) : null);\n    this.argumentTypes = [];\n    this.argumentSizes = [];\n    this.argumentBitRatios = null;\n    this.returnType = null;\n    this.output = [];\n    this.plugins = null;\n    this.leadingReturnStatement = null;\n    this.followingReturnStatement = null;\n    this.dynamicOutput = null;\n    this.dynamicArguments = null;\n    this.strictTypingChecking = false;\n    this.fixIntegerDivisionAccuracy = null;\n\n    if (settings) {\n      for (const p in settings) {\n        if (!settings.hasOwnProperty(p)) continue;\n        if (!this.hasOwnProperty(p)) continue;\n        this[p] = settings[p];\n      }\n    }\n\n    this.literalTypes = {};\n\n    this.validate();\n    this._string = null;\n    this._internalVariableNames = {};\n  }\n\n  validate() {\n    if (typeof this.source !== 'string' && !this.ast) {\n      throw new Error('this.source not a string');\n    }\n\n    if (!this.ast && !utils.isFunctionString(this.source)) {\n      throw new Error('this.source not a function string');\n    }\n\n    if (!this.name) {\n      throw new Error('this.name could not be set');\n    }\n\n    if (this.argumentTypes.length > 0 && this.argumentTypes.length !== this.argumentNames.length) {\n      throw new Error(`argumentTypes count of ${ this.argumentTypes.length } exceeds ${ this.argumentNames.length }`);\n    }\n\n    if (this.output.length < 1) {\n      throw new Error('this.output is not big enough');\n    }\n  }\n\n  isIdentifierConstant(name) {\n    if (!this.constants) return false;\n    return this.constants.hasOwnProperty(name);\n  }\n\n  isInput(argumentName) {\n    return this.argumentTypes[this.argumentNames.indexOf(argumentName)] === 'Input';\n  }\n\n  pushState(state) {\n    this.states.push(state);\n  }\n\n  popState(state) {\n    if (this.state !== state) {\n      throw new Error(`Cannot popState ${ state } when in ${ this.state }`);\n    }\n    this.states.pop();\n  }\n\n  isState(state) {\n    return this.state === state;\n  }\n\n  get state() {\n    return this.states[this.states.length - 1];\n  }\n\n  astMemberExpressionUnroll(ast) {\n    if (ast.type === 'Identifier') {\n      return ast.name;\n    } else if (ast.type === 'ThisExpression') {\n      return 'this';\n    }\n\n    if (ast.type === 'MemberExpression') {\n      if (ast.object && ast.property) {\n        if (ast.object.hasOwnProperty('name') && ast.object.name !== 'Math') {\n          return this.astMemberExpressionUnroll(ast.property);\n        }\n\n        return (\n          this.astMemberExpressionUnroll(ast.object) +\n          '.' +\n          this.astMemberExpressionUnroll(ast.property)\n        );\n      }\n    }\n\n    if (ast.hasOwnProperty('expressions')) {\n      const firstExpression = ast.expressions[0];\n      if (firstExpression.type === 'Literal' && firstExpression.value === 0 && ast.expressions.length === 2) {\n        return this.astMemberExpressionUnroll(ast.expressions[1]);\n      }\n    }\n\n    throw this.astErrorOutput('Unknown astMemberExpressionUnroll', ast);\n  }\n\n  getJsAST(inParser) {\n    if (this.ast) {\n      return this.ast;\n    }\n    if (typeof this.source === 'object') {\n      this.traceFunctionAST(this.source);\n      return this.ast = this.source;\n    }\n\n    inParser = inParser || acorn;\n    if (inParser === null) {\n      throw new Error('Missing JS to AST parser');\n    }\n\n    const ast = Object.freeze(inParser.parse(`const parser_${ this.name } = ${ this.source };`, {\n      locations: true\n    }));\n    const functionAST = ast.body[0].declarations[0].init;\n    this.traceFunctionAST(functionAST);\n\n    if (!ast) {\n      throw new Error('Failed to parse JS code');\n    }\n\n    return this.ast = functionAST;\n  }\n\n  traceFunctionAST(ast) {\n    const { contexts, declarations, functions, identifiers, functionCalls } = new FunctionTracer(ast);\n    this.contexts = contexts;\n    this.identifiers = identifiers;\n    this.functionCalls = functionCalls;\n    this.functions = functions;\n    for (let i = 0; i < declarations.length; i++) {\n      const declaration = declarations[i];\n      const { ast, inForLoopInit, inForLoopTest } = declaration;\n      const { init } = ast;\n      const dependencies = this.getDependencies(init);\n      let valueType = null;\n\n      if (inForLoopInit && inForLoopTest) {\n        valueType = 'Integer';\n      } else {\n        if (init) {\n          const realType = this.getType(init);\n          switch (realType) {\n            case 'Integer':\n            case 'Float':\n            case 'Number':\n              if (init.type === 'MemberExpression') {\n                valueType = realType;\n              } else {\n                valueType = 'Number';\n              }\n              break;\n            case 'LiteralInteger':\n              valueType = 'Number';\n              break;\n            default:\n              valueType = realType;\n          }\n        }\n      }\n      declaration.valueType = valueType;\n      declaration.dependencies = dependencies;\n      declaration.isSafe = this.isSafeDependencies(dependencies);\n    }\n\n    for (let i = 0; i < functions.length; i++) {\n      this.onNestedFunction(functions[i], this.source);\n    }\n  }\n\n  getDeclaration(ast) {\n    for (let i = 0; i < this.identifiers.length; i++) {\n      const identifier = this.identifiers[i];\n      if (ast === identifier.ast) {\n        return identifier.declaration;\n      }\n    }\n    return null;\n  }\n\n  getVariableType(ast) {\n    if (ast.type !== 'Identifier') {\n      throw new Error(`ast of ${ast.type} not \"Identifier\"`);\n    }\n    let type = null;\n    const argumentIndex = this.argumentNames.indexOf(ast.name);\n    if (argumentIndex === -1) {\n      const declaration = this.getDeclaration(ast);\n      if (declaration) {\n        return declaration.valueType;\n      }\n    } else {\n      const argumentType = this.argumentTypes[argumentIndex];\n      if (argumentType) {\n        type = argumentType;\n      }\n    }\n    if (!type && this.strictTypingChecking) {\n      throw new Error(`Declaration of ${name} not found`);\n    }\n    return type;\n  }\n\n  getLookupType(type) {\n    if (!typeLookupMap.hasOwnProperty(type)) {\n      throw new Error(`unknown typeLookupMap ${ type }`);\n    }\n    return typeLookupMap[type];\n  }\n\n  getConstantType(constantName) {\n    if (this.constantTypes[constantName]) {\n      const type = this.constantTypes[constantName];\n      if (type === 'Float') {\n        return 'Number';\n      } else {\n        return type;\n      }\n    }\n    throw new Error(`Type for constant \"${ constantName }\" not declared`);\n  }\n\n  toString() {\n    if (this._string) return this._string;\n    return this._string = this.astGeneric(this.getJsAST(), []).join('').trim();\n  }\n\n  toJSON() {\n    const settings = {\n      source: this.source,\n      name: this.name,\n      constants: this.constants,\n      constantTypes: this.constantTypes,\n      isRootKernel: this.isRootKernel,\n      isSubKernel: this.isSubKernel,\n      debug: this.debug,\n      output: this.output,\n      loopMaxIterations: this.loopMaxIterations,\n      argumentNames: this.argumentNames,\n      argumentTypes: this.argumentTypes,\n      argumentSizes: this.argumentSizes,\n      returnType: this.returnType,\n      leadingReturnStatement: this.leadingReturnStatement,\n      followingReturnStatement: this.followingReturnStatement,\n    };\n\n    return {\n      ast: this.ast,\n      settings\n    };\n  }\n\n  getType(ast) {\n    if (Array.isArray(ast)) {\n      return this.getType(ast[ast.length - 1]);\n    }\n    switch (ast.type) {\n      case 'BlockStatement':\n        return this.getType(ast.body);\n      case 'ArrayExpression':\n        const childType = this.getType(ast.elements[0]);\n        switch (childType) {\n          case 'Array(2)':\n          case 'Array(3)':\n          case 'Array(4)':\n            return `Matrix(${ast.elements.length})`;\n        }\n        return `Array(${ ast.elements.length })`;\n      case 'Literal':\n        const literalKey = this.astKey(ast);\n        if (this.literalTypes[literalKey]) {\n          return this.literalTypes[literalKey];\n        }\n        if (Number.isInteger(ast.value)) {\n          return 'LiteralInteger';\n        } else if (ast.value === true || ast.value === false) {\n          return 'Boolean';\n        } else {\n          return 'Number';\n        }\n        case 'AssignmentExpression':\n          return this.getType(ast.left);\n        case 'CallExpression':\n          if (this.isAstMathFunction(ast)) {\n            return 'Number';\n          }\n          if (!ast.callee || !ast.callee.name) {\n            if (ast.callee.type === 'SequenceExpression' && ast.callee.expressions[ast.callee.expressions.length - 1].property.name) {\n              const functionName = ast.callee.expressions[ast.callee.expressions.length - 1].property.name;\n              this.inferArgumentTypesIfNeeded(functionName, ast.arguments);\n              return this.lookupReturnType(functionName, ast, this);\n            }\n            if (this.getVariableSignature(ast.callee, true) === 'this.color') {\n              return null;\n            }\n            if (ast.callee.type === 'MemberExpression' && ast.callee.object && ast.callee.property && ast.callee.property.name && ast.arguments) {\n              const functionName = ast.callee.property.name;\n              this.inferArgumentTypesIfNeeded(functionName, ast.arguments);\n              return this.lookupReturnType(functionName, ast, this);\n            }\n            throw this.astErrorOutput('Unknown call expression', ast);\n          }\n          if (ast.callee && ast.callee.name) {\n            const functionName = ast.callee.name;\n            this.inferArgumentTypesIfNeeded(functionName, ast.arguments);\n            return this.lookupReturnType(functionName, ast, this);\n          }\n          throw this.astErrorOutput(`Unhandled getType Type \"${ ast.type }\"`, ast);\n        case 'LogicalExpression':\n          return 'Boolean';\n        case 'BinaryExpression':\n          switch (ast.operator) {\n            case '%':\n            case '/':\n              if (this.fixIntegerDivisionAccuracy) {\n                return 'Number';\n              } else {\n                break;\n              }\n              case '>':\n              case '<':\n                return 'Boolean';\n              case '&':\n              case '|':\n              case '^':\n              case '<<':\n              case '>>':\n              case '>>>':\n                return 'Integer';\n          }\n          const type = this.getType(ast.left);\n          if (this.isState('skip-literal-correction')) return type;\n          if (type === 'LiteralInteger') {\n            const rightType = this.getType(ast.right);\n            if (rightType === 'LiteralInteger') {\n              if (ast.left.value % 1 === 0) {\n                return 'Integer';\n              } else {\n                return 'Float';\n              }\n            }\n            return rightType;\n          }\n          return typeLookupMap[type] || type;\n        case 'UpdateExpression':\n          return this.getType(ast.argument);\n        case 'UnaryExpression':\n          if (ast.operator === '~') {\n            return 'Integer';\n          }\n          return this.getType(ast.argument);\n        case 'VariableDeclaration': {\n          const declarations = ast.declarations;\n          let lastType;\n          for (let i = 0; i < declarations.length; i++) {\n            const declaration = declarations[i];\n            lastType = this.getType(declaration);\n          }\n          if (!lastType) {\n            throw this.astErrorOutput(`Unable to find type for declaration`, ast);\n          }\n          return lastType;\n        }\n        case 'VariableDeclarator':\n          const declaration = this.getDeclaration(ast.id);\n          if (!declaration) {\n            throw this.astErrorOutput(`Unable to find declarator`, ast);\n          }\n\n          if (!declaration.valueType) {\n            throw this.astErrorOutput(`Unable to find declarator valueType`, ast);\n          }\n\n          return declaration.valueType;\n        case 'Identifier':\n          if (ast.name === 'Infinity') {\n            return 'Number';\n          }\n          if (this.isAstVariable(ast)) {\n            const signature = this.getVariableSignature(ast);\n            if (signature === 'value') {\n              return this.getCheckVariableType(ast);\n            }\n          }\n          const origin = this.findIdentifierOrigin(ast);\n          if (origin && origin.init) {\n            return this.getType(origin.init);\n          }\n          return null;\n        case 'ReturnStatement':\n          return this.getType(ast.argument);\n        case 'MemberExpression':\n          if (this.isAstMathFunction(ast)) {\n            switch (ast.property.name) {\n              case 'ceil':\n                return 'Integer';\n              case 'floor':\n                return 'Integer';\n              case 'round':\n                return 'Integer';\n            }\n            return 'Number';\n          }\n          if (this.isAstVariable(ast)) {\n            const variableSignature = this.getVariableSignature(ast);\n            switch (variableSignature) {\n              case 'value[]':\n                return this.getLookupType(this.getCheckVariableType(ast.object));\n              case 'value[][]':\n                return this.getLookupType(this.getCheckVariableType(ast.object.object));\n              case 'value[][][]':\n                return this.getLookupType(this.getCheckVariableType(ast.object.object.object));\n              case 'value[][][][]':\n                return this.getLookupType(this.getCheckVariableType(ast.object.object.object.object));\n              case 'value.thread.value':\n              case 'this.thread.value':\n                return 'Integer';\n              case 'this.output.value':\n                return this.dynamicOutput ? 'Integer' : 'LiteralInteger';\n              case 'this.constants.value':\n                return this.getConstantType(ast.property.name);\n              case 'this.constants.value[]':\n                return this.getLookupType(this.getConstantType(ast.object.property.name));\n              case 'this.constants.value[][]':\n                return this.getLookupType(this.getConstantType(ast.object.object.property.name));\n              case 'this.constants.value[][][]':\n                return this.getLookupType(this.getConstantType(ast.object.object.object.property.name));\n              case 'this.constants.value[][][][]':\n                return this.getLookupType(this.getConstantType(ast.object.object.object.object.property.name));\n              case 'fn()[]':\n              case 'fn()[][]':\n              case 'fn()[][][]':\n                return this.getLookupType(this.getType(ast.object));\n              case 'value.value':\n                if (this.isAstMathVariable(ast)) {\n                  return 'Number';\n                }\n                switch (ast.property.name) {\n                  case 'r':\n                  case 'g':\n                  case 'b':\n                  case 'a':\n                    return this.getLookupType(this.getCheckVariableType(ast.object));\n                }\n                case '[][]':\n                  return 'Number';\n            }\n            throw this.astErrorOutput('Unhandled getType MemberExpression', ast);\n          }\n          throw this.astErrorOutput('Unhandled getType MemberExpression', ast);\n        case 'ConditionalExpression':\n          return this.getType(ast.consequent);\n        case 'FunctionDeclaration':\n        case 'FunctionExpression':\n          const lastReturn = this.findLastReturn(ast.body);\n          if (lastReturn) {\n            return this.getType(lastReturn);\n          }\n          return null;\n        case 'IfStatement':\n          return this.getType(ast.consequent);\n        case 'SequenceExpression':\n          return this.getType(ast.expressions[ast.expressions.length - 1]);\n        default:\n          throw this.astErrorOutput(`Unhandled getType Type \"${ ast.type }\"`, ast);\n    }\n  }\n\n  getCheckVariableType(ast) {\n    const type = this.getVariableType(ast);\n    if (!type) {\n      throw this.astErrorOutput(`${ast.type} is not defined`, ast);\n    }\n    return type;\n  }\n\n  inferArgumentTypesIfNeeded(functionName, args) {\n    for (let i = 0; i < args.length; i++) {\n      if (!this.needsArgumentType(functionName, i)) continue;\n      const type = this.getType(args[i]);\n      if (!type) {\n        throw this.astErrorOutput(`Unable to infer argument ${i}`, args[i]);\n      }\n      this.assignArgumentType(functionName, i, type);\n    }\n  }\n\n  isAstMathVariable(ast) {\n    const mathProperties = [\n      'E',\n      'PI',\n      'SQRT2',\n      'SQRT1_2',\n      'LN2',\n      'LN10',\n      'LOG2E',\n      'LOG10E',\n    ];\n    return ast.type === 'MemberExpression' &&\n      ast.object && ast.object.type === 'Identifier' &&\n      ast.object.name === 'Math' &&\n      ast.property &&\n      ast.property.type === 'Identifier' &&\n      mathProperties.indexOf(ast.property.name) > -1;\n  }\n\n  isAstMathFunction(ast) {\n    const mathFunctions = [\n      'abs',\n      'acos',\n      'acosh',\n      'asin',\n      'asinh',\n      'atan',\n      'atan2',\n      'atanh',\n      'cbrt',\n      'ceil',\n      'clz32',\n      'cos',\n      'cosh',\n      'expm1',\n      'exp',\n      'floor',\n      'fround',\n      'imul',\n      'log',\n      'log2',\n      'log10',\n      'log1p',\n      'max',\n      'min',\n      'pow',\n      'random',\n      'round',\n      'sign',\n      'sin',\n      'sinh',\n      'sqrt',\n      'tan',\n      'tanh',\n      'trunc',\n    ];\n    return ast.type === 'CallExpression' &&\n      ast.callee &&\n      ast.callee.type === 'MemberExpression' &&\n      ast.callee.object &&\n      ast.callee.object.type === 'Identifier' &&\n      ast.callee.object.name === 'Math' &&\n      ast.callee.property &&\n      ast.callee.property.type === 'Identifier' &&\n      mathFunctions.indexOf(ast.callee.property.name) > -1;\n  }\n\n  isAstVariable(ast) {\n    return ast.type === 'Identifier' || ast.type === 'MemberExpression';\n  }\n\n  isSafe(ast) {\n    return this.isSafeDependencies(this.getDependencies(ast));\n  }\n\n  isSafeDependencies(dependencies) {\n    return dependencies && dependencies.every ? dependencies.every(dependency => dependency.isSafe) : true;\n  }\n\n  getDependencies(ast, dependencies, isNotSafe) {\n    if (!dependencies) {\n      dependencies = [];\n    }\n    if (!ast) return null;\n    if (Array.isArray(ast)) {\n      for (let i = 0; i < ast.length; i++) {\n        this.getDependencies(ast[i], dependencies, isNotSafe);\n      }\n      return dependencies;\n    }\n    switch (ast.type) {\n      case 'AssignmentExpression':\n        this.getDependencies(ast.left, dependencies, isNotSafe);\n        this.getDependencies(ast.right, dependencies, isNotSafe);\n        return dependencies;\n      case 'ConditionalExpression':\n        this.getDependencies(ast.test, dependencies, isNotSafe);\n        this.getDependencies(ast.alternate, dependencies, isNotSafe);\n        this.getDependencies(ast.consequent, dependencies, isNotSafe);\n        return dependencies;\n      case 'Literal':\n        dependencies.push({\n          origin: 'literal',\n          value: ast.value,\n          isSafe: isNotSafe === true ? false : ast.value > -Infinity && ast.value < Infinity && !isNaN(ast.value)\n        });\n        break;\n      case 'VariableDeclarator':\n        return this.getDependencies(ast.init, dependencies, isNotSafe);\n      case 'Identifier':\n        const declaration = this.getDeclaration(ast);\n        if (declaration) {\n          dependencies.push({\n            name: ast.name,\n            origin: 'declaration',\n            isSafe: isNotSafe ? false : this.isSafeDependencies(declaration.dependencies),\n          });\n        } else if (this.argumentNames.indexOf(ast.name) > -1) {\n          dependencies.push({\n            name: ast.name,\n            origin: 'argument',\n            isSafe: false,\n          });\n        } else if (this.strictTypingChecking) {\n          throw new Error(`Cannot find identifier origin \"${ast.name}\"`);\n        }\n        break;\n      case 'FunctionDeclaration':\n        return this.getDependencies(ast.body.body[ast.body.body.length - 1], dependencies, isNotSafe);\n      case 'ReturnStatement':\n        return this.getDependencies(ast.argument, dependencies);\n      case 'BinaryExpression':\n      case 'LogicalExpression':\n        isNotSafe = (ast.operator === '/' || ast.operator === '*');\n        this.getDependencies(ast.left, dependencies, isNotSafe);\n        this.getDependencies(ast.right, dependencies, isNotSafe);\n        return dependencies;\n      case 'UnaryExpression':\n      case 'UpdateExpression':\n        return this.getDependencies(ast.argument, dependencies, isNotSafe);\n      case 'VariableDeclaration':\n        return this.getDependencies(ast.declarations, dependencies, isNotSafe);\n      case 'ArrayExpression':\n        dependencies.push({\n          origin: 'declaration',\n          isSafe: true,\n        });\n        return dependencies;\n      case 'CallExpression':\n        dependencies.push({\n          origin: 'function',\n          isSafe: true,\n        });\n        return dependencies;\n      case 'MemberExpression':\n        const details = this.getMemberExpressionDetails(ast);\n        switch (details.signature) {\n          case 'value[]':\n            this.getDependencies(ast.object, dependencies, isNotSafe);\n            break;\n          case 'value[][]':\n            this.getDependencies(ast.object.object, dependencies, isNotSafe);\n            break;\n          case 'value[][][]':\n            this.getDependencies(ast.object.object.object, dependencies, isNotSafe);\n            break;\n          case 'this.output.value':\n            if (this.dynamicOutput) {\n              dependencies.push({\n                name: details.name,\n                origin: 'output',\n                isSafe: false,\n              });\n            }\n            break;\n        }\n        if (details) {\n          if (details.property) {\n            this.getDependencies(details.property, dependencies, isNotSafe);\n          }\n          if (details.xProperty) {\n            this.getDependencies(details.xProperty, dependencies, isNotSafe);\n          }\n          if (details.yProperty) {\n            this.getDependencies(details.yProperty, dependencies, isNotSafe);\n          }\n          if (details.zProperty) {\n            this.getDependencies(details.zProperty, dependencies, isNotSafe);\n          }\n          return dependencies;\n        }\n        case 'SequenceExpression':\n          return this.getDependencies(ast.expressions, dependencies, isNotSafe);\n        default:\n          throw this.astErrorOutput(`Unhandled type ${ ast.type } in getDependencies`, ast);\n    }\n    return dependencies;\n  }\n\n  getVariableSignature(ast, returnRawValue) {\n    if (!this.isAstVariable(ast)) {\n      throw new Error(`ast of type \"${ ast.type }\" is not a variable signature`);\n    }\n    if (ast.type === 'Identifier') {\n      return 'value';\n    }\n    const signature = [];\n    while (true) {\n      if (!ast) break;\n      if (ast.computed) {\n        signature.push('[]');\n      } else if (ast.type === 'ThisExpression') {\n        signature.unshift('this');\n      } else if (ast.property && ast.property.name) {\n        if (\n          ast.property.name === 'x' ||\n          ast.property.name === 'y' ||\n          ast.property.name === 'z'\n        ) {\n          signature.unshift(returnRawValue ? '.' + ast.property.name : '.value');\n        } else if (\n          ast.property.name === 'constants' ||\n          ast.property.name === 'thread' ||\n          ast.property.name === 'output'\n        ) {\n          signature.unshift('.' + ast.property.name);\n        } else {\n          signature.unshift(returnRawValue ? '.' + ast.property.name : '.value');\n        }\n      } else if (ast.name) {\n        signature.unshift(returnRawValue ? ast.name : 'value');\n      } else if (ast.callee && ast.callee.name) {\n        signature.unshift(returnRawValue ? ast.callee.name + '()' : 'fn()');\n      } else if (ast.elements) {\n        signature.unshift('[]');\n      } else {\n        signature.unshift('unknown');\n      }\n      ast = ast.object;\n    }\n\n    const signatureString = signature.join('');\n    if (returnRawValue) {\n      return signatureString;\n    }\n\n    const allowedExpressions = [\n      'value',\n      'value[]',\n      'value[][]',\n      'value[][][]',\n      'value[][][][]',\n      'value.value',\n      'value.thread.value',\n      'this.thread.value',\n      'this.output.value',\n      'this.constants.value',\n      'this.constants.value[]',\n      'this.constants.value[][]',\n      'this.constants.value[][][]',\n      'this.constants.value[][][][]',\n      'fn()[]',\n      'fn()[][]',\n      'fn()[][][]',\n      '[][]',\n    ];\n    if (allowedExpressions.indexOf(signatureString) > -1) {\n      return signatureString;\n    }\n    return null;\n  }\n\n  build() {\n    return this.toString().length > 0;\n  }\n\n  astGeneric(ast, retArr) {\n    if (ast === null) {\n      throw this.astErrorOutput('NULL ast', ast);\n    } else {\n      if (Array.isArray(ast)) {\n        for (let i = 0; i < ast.length; i++) {\n          this.astGeneric(ast[i], retArr);\n        }\n        return retArr;\n      }\n\n      switch (ast.type) {\n        case 'FunctionDeclaration':\n          return this.astFunctionDeclaration(ast, retArr);\n        case 'FunctionExpression':\n          return this.astFunctionExpression(ast, retArr);\n        case 'ReturnStatement':\n          return this.astReturnStatement(ast, retArr);\n        case 'Literal':\n          return this.astLiteral(ast, retArr);\n        case 'BinaryExpression':\n          return this.astBinaryExpression(ast, retArr);\n        case 'Identifier':\n          return this.astIdentifierExpression(ast, retArr);\n        case 'AssignmentExpression':\n          return this.astAssignmentExpression(ast, retArr);\n        case 'ExpressionStatement':\n          return this.astExpressionStatement(ast, retArr);\n        case 'EmptyStatement':\n          return this.astEmptyStatement(ast, retArr);\n        case 'BlockStatement':\n          return this.astBlockStatement(ast, retArr);\n        case 'IfStatement':\n          return this.astIfStatement(ast, retArr);\n        case 'SwitchStatement':\n          return this.astSwitchStatement(ast, retArr);\n        case 'BreakStatement':\n          return this.astBreakStatement(ast, retArr);\n        case 'ContinueStatement':\n          return this.astContinueStatement(ast, retArr);\n        case 'ForStatement':\n          return this.astForStatement(ast, retArr);\n        case 'WhileStatement':\n          return this.astWhileStatement(ast, retArr);\n        case 'DoWhileStatement':\n          return this.astDoWhileStatement(ast, retArr);\n        case 'VariableDeclaration':\n          return this.astVariableDeclaration(ast, retArr);\n        case 'VariableDeclarator':\n          return this.astVariableDeclarator(ast, retArr);\n        case 'ThisExpression':\n          return this.astThisExpression(ast, retArr);\n        case 'SequenceExpression':\n          return this.astSequenceExpression(ast, retArr);\n        case 'UnaryExpression':\n          return this.astUnaryExpression(ast, retArr);\n        case 'UpdateExpression':\n          return this.astUpdateExpression(ast, retArr);\n        case 'LogicalExpression':\n          return this.astLogicalExpression(ast, retArr);\n        case 'MemberExpression':\n          return this.astMemberExpression(ast, retArr);\n        case 'CallExpression':\n          return this.astCallExpression(ast, retArr);\n        case 'ArrayExpression':\n          return this.astArrayExpression(ast, retArr);\n        case 'DebuggerStatement':\n          return this.astDebuggerStatement(ast, retArr);\n        case 'ConditionalExpression':\n          return this.astConditionalExpression(ast, retArr);\n      }\n\n      throw this.astErrorOutput('Unknown ast type : ' + ast.type, ast);\n    }\n  }\n  astErrorOutput(error, ast) {\n    if (typeof this.source !== 'string') {\n      return new Error(error);\n    }\n\n    const debugString = utils.getAstString(this.source, ast);\n    const leadingSource = this.source.substr(ast.start);\n    const splitLines = leadingSource.split(/\\n/);\n    const lineBefore = splitLines.length > 0 ? splitLines[splitLines.length - 1] : 0;\n    return new Error(`${error} on line ${ splitLines.length }, position ${ lineBefore.length }:\\n ${ debugString }`);\n  }\n\n  astDebuggerStatement(arrNode, retArr) {\n    return retArr;\n  }\n\n  astConditionalExpression(ast, retArr) {\n    if (ast.type !== 'ConditionalExpression') {\n      throw this.astErrorOutput('Not a conditional expression', ast);\n    }\n    retArr.push('(');\n    this.astGeneric(ast.test, retArr);\n    retArr.push('?');\n    this.astGeneric(ast.consequent, retArr);\n    retArr.push(':');\n    this.astGeneric(ast.alternate, retArr);\n    retArr.push(')');\n    return retArr;\n  }\n\n  astFunction(ast, retArr) {\n    throw new Error(`\"astFunction\" not defined on ${ this.constructor.name }`);\n  }\n\n  astFunctionDeclaration(ast, retArr) {\n    if (this.isChildFunction(ast)) {\n      return retArr;\n    }\n    return this.astFunction(ast, retArr);\n  }\n  astFunctionExpression(ast, retArr) {\n    if (this.isChildFunction(ast)) {\n      return retArr;\n    }\n    return this.astFunction(ast, retArr);\n  }\n  isChildFunction(ast) {\n    for (let i = 0; i < this.functions.length; i++) {\n      if (this.functions[i] === ast) {\n        return true;\n      }\n    }\n    return false;\n  }\n  astReturnStatement(ast, retArr) {\n    return retArr;\n  }\n  astLiteral(ast, retArr) {\n    this.literalTypes[this.astKey(ast)] = 'Number';\n    return retArr;\n  }\n  astBinaryExpression(ast, retArr) {\n    return retArr;\n  }\n  astIdentifierExpression(ast, retArr) {\n    return retArr;\n  }\n  astAssignmentExpression(ast, retArr) {\n    return retArr;\n  }\n  astExpressionStatement(esNode, retArr) {\n    this.astGeneric(esNode.expression, retArr);\n    retArr.push(';');\n    return retArr;\n  }\n  astEmptyStatement(eNode, retArr) {\n    return retArr;\n  }\n  astBlockStatement(ast, retArr) {\n    return retArr;\n  }\n  astIfStatement(ast, retArr) {\n    return retArr;\n  }\n  astSwitchStatement(ast, retArr) {\n    return retArr;\n  }\n  astBreakStatement(brNode, retArr) {\n    retArr.push('break;');\n    return retArr;\n  }\n  astContinueStatement(crNode, retArr) {\n    retArr.push('continue;\\n');\n    return retArr;\n  }\n  astForStatement(ast, retArr) {\n    return retArr;\n  }\n  astWhileStatement(ast, retArr) {\n    return retArr;\n  }\n  astDoWhileStatement(ast, retArr) {\n    return retArr;\n  }\n  astVariableDeclarator(iVarDecNode, retArr) {\n    this.astGeneric(iVarDecNode.id, retArr);\n    if (iVarDecNode.init !== null) {\n      retArr.push('=');\n      this.astGeneric(iVarDecNode.init, retArr);\n    }\n    return retArr;\n  }\n  astThisExpression(ast, retArr) {\n    return retArr;\n  }\n  astSequenceExpression(sNode, retArr) {\n    const { expressions } = sNode;\n    const sequenceResult = [];\n    for (let i = 0; i < expressions.length; i++) {\n      const expression = expressions[i];\n      const expressionResult = [];\n      this.astGeneric(expression, expressionResult);\n      sequenceResult.push(expressionResult.join(''));\n    }\n    if (sequenceResult.length > 1) {\n      retArr.push('(', sequenceResult.join(','), ')');\n    } else {\n      retArr.push(sequenceResult[0]);\n    }\n    return retArr;\n  }\n  astUnaryExpression(uNode, retArr) {\n    const unaryResult = this.checkAndUpconvertBitwiseUnary(uNode, retArr);\n    if (unaryResult) {\n      return retArr;\n    }\n\n    if (uNode.prefix) {\n      retArr.push(uNode.operator);\n      this.astGeneric(uNode.argument, retArr);\n    } else {\n      this.astGeneric(uNode.argument, retArr);\n      retArr.push(uNode.operator);\n    }\n\n    return retArr;\n  }\n\n  checkAndUpconvertBitwiseUnary(uNode, retArr) {}\n\n  astUpdateExpression(uNode, retArr) {\n    if (uNode.prefix) {\n      retArr.push(uNode.operator);\n      this.astGeneric(uNode.argument, retArr);\n    } else {\n      this.astGeneric(uNode.argument, retArr);\n      retArr.push(uNode.operator);\n    }\n\n    return retArr;\n  }\n  astLogicalExpression(logNode, retArr) {\n    retArr.push('(');\n    this.astGeneric(logNode.left, retArr);\n    retArr.push(logNode.operator);\n    this.astGeneric(logNode.right, retArr);\n    retArr.push(')');\n    return retArr;\n  }\n  astMemberExpression(ast, retArr) {\n    return retArr;\n  }\n  astCallExpression(ast, retArr) {\n    return retArr;\n  }\n  astArrayExpression(ast, retArr) {\n    return retArr;\n  }\n\n  getMemberExpressionDetails(ast) {\n    if (ast.type !== 'MemberExpression') {\n      throw this.astErrorOutput(`Expression ${ ast.type } not a MemberExpression`, ast);\n    }\n    let name = null;\n    let type = null;\n    const variableSignature = this.getVariableSignature(ast);\n    switch (variableSignature) {\n      case 'value':\n        return null;\n      case 'value.thread.value':\n      case 'this.thread.value':\n      case 'this.output.value':\n        return {\n          signature: variableSignature,\n            type: 'Integer',\n            name: ast.property.name\n        };\n      case 'value[]':\n        if (typeof ast.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object),\n            xProperty: ast.property\n        };\n      case 'value[][]':\n        if (typeof ast.object.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object.object),\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n        };\n      case 'value[][][]':\n        if (typeof ast.object.object.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.object.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object.object.object),\n            zProperty: ast.object.object.property,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n        };\n      case 'value[][][][]':\n        if (typeof ast.object.object.object.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.object.object.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object.object.object.object),\n            zProperty: ast.object.object.property,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n        };\n      case 'value.value':\n        if (typeof ast.property.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        if (this.isAstMathVariable(ast)) {\n          name = ast.property.name;\n          return {\n            name,\n            origin: 'Math',\n            type: 'Number',\n            signature: variableSignature,\n          };\n        }\n        switch (ast.property.name) {\n          case 'r':\n          case 'g':\n          case 'b':\n          case 'a':\n            name = ast.object.name;\n            return {\n              name,\n              property: ast.property.name,\n                origin: 'user',\n                signature: variableSignature,\n                type: 'Number'\n            };\n          default:\n            throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        case 'this.constants.value':\n          if (typeof ast.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n              signature: variableSignature,\n          };\n        case 'this.constants.value[]':\n          if (typeof ast.object.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.object.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n              signature: variableSignature,\n              xProperty: ast.property,\n          };\n        case 'this.constants.value[][]': {\n          if (typeof ast.object.object.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.object.object.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n            signature: variableSignature,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n          };\n        }\n        case 'this.constants.value[][][]': {\n          if (typeof ast.object.object.object.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.object.object.object.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n            signature: variableSignature,\n            zProperty: ast.object.object.property,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n          };\n        }\n        case 'fn()[]':\n        case 'fn()[][]':\n        case '[][]':\n          return {\n            signature: variableSignature,\n              property: ast.property,\n          };\n        default:\n          throw this.astErrorOutput('Unexpected expression', ast);\n    }\n  }\n\n  findIdentifierOrigin(astToFind) {\n    const stack = [this.ast];\n\n    while (stack.length > 0) {\n      const atNode = stack[0];\n      if (atNode.type === 'VariableDeclarator' && atNode.id && atNode.id.name && atNode.id.name === astToFind.name) {\n        return atNode;\n      }\n      stack.shift();\n      if (atNode.argument) {\n        stack.push(atNode.argument);\n      } else if (atNode.body) {\n        stack.push(atNode.body);\n      } else if (atNode.declarations) {\n        stack.push(atNode.declarations);\n      } else if (Array.isArray(atNode)) {\n        for (let i = 0; i < atNode.length; i++) {\n          stack.push(atNode[i]);\n        }\n      }\n    }\n    return null;\n  }\n\n  findLastReturn(ast) {\n    const stack = [ast || this.ast];\n\n    while (stack.length > 0) {\n      const atNode = stack.pop();\n      if (atNode.type === 'ReturnStatement') {\n        return atNode;\n      }\n      if (atNode.type === 'FunctionDeclaration') {\n        continue;\n      }\n      if (atNode.argument) {\n        stack.push(atNode.argument);\n      } else if (atNode.body) {\n        stack.push(atNode.body);\n      } else if (atNode.declarations) {\n        stack.push(atNode.declarations);\n      } else if (Array.isArray(atNode)) {\n        for (let i = 0; i < atNode.length; i++) {\n          stack.push(atNode[i]);\n        }\n      } else if (atNode.consequent) {\n        stack.push(atNode.consequent);\n      } else if (atNode.cases) {\n        stack.push(atNode.cases);\n      }\n    }\n    return null;\n  }\n\n  getInternalVariableName(name) {\n    if (!this._internalVariableNames.hasOwnProperty(name)) {\n      this._internalVariableNames[name] = 0;\n    }\n    this._internalVariableNames[name]++;\n    if (this._internalVariableNames[name] === 1) {\n      return name;\n    }\n    return name + this._internalVariableNames[name];\n  }\n\n  astKey(ast, separator = ',') {\n    if (!ast.start || !ast.end) throw new Error('AST start and end needed');\n    return `${ast.start}${separator}${ast.end}`;\n  }\n}\n\nconst typeLookupMap = {\n  'Number': 'Number',\n  'Float': 'Float',\n  'Integer': 'Integer',\n  'Array': 'Number',\n  'Array(2)': 'Number',\n  'Array(3)': 'Number',\n  'Array(4)': 'Number',\n  'Matrix(2)': 'Number',\n  'Matrix(3)': 'Number',\n  'Matrix(4)': 'Number',\n  'Array2D': 'Number',\n  'Array3D': 'Number',\n  'Input': 'Number',\n  'HTMLCanvas': 'Array(4)',\n  'OffscreenCanvas': 'Array(4)',\n  'HTMLImage': 'Array(4)',\n  'ImageBitmap': 'Array(4)',\n  'ImageData': 'Array(4)',\n  'HTMLVideo': 'Array(4)',\n  'HTMLImageArray': 'Array(4)',\n  'NumberTexture': 'Number',\n  'MemoryOptimizedNumberTexture': 'Number',\n  'Array1D(2)': 'Array(2)',\n  'Array1D(3)': 'Array(3)',\n  'Array1D(4)': 'Array(4)',\n  'Array2D(2)': 'Array(2)',\n  'Array2D(3)': 'Array(3)',\n  'Array2D(4)': 'Array(4)',\n  'Array3D(2)': 'Array(2)',\n  'Array3D(3)': 'Array(3)',\n  'Array3D(4)': 'Array(4)',\n  'ArrayTexture(1)': 'Number',\n  'ArrayTexture(2)': 'Array(2)',\n  'ArrayTexture(3)': 'Array(3)',\n  'ArrayTexture(4)': 'Array(4)',\n};\n\nmodule.exports = {\n  FunctionNode\n};\n},{\"../utils\":114,\"./function-tracer\":11,\"acorn\":1}],11:[function(require,module,exports){\nconst { utils } = require('../utils');\n\nfunction last(array) {\n  return array.length > 0 ? array[array.length - 1] : null;\n}\n\nconst states = {\n  trackIdentifiers: 'trackIdentifiers',\n  memberExpression: 'memberExpression',\n  inForLoopInit: 'inForLoopInit'\n};\n\nclass FunctionTracer {\n  constructor(ast) {\n    this.runningContexts = [];\n    this.functionContexts = [];\n    this.contexts = [];\n    this.functionCalls = [];\n    this.declarations = [];\n    this.identifiers = [];\n    this.functions = [];\n    this.returnStatements = [];\n    this.trackedIdentifiers = null;\n    this.states = [];\n    this.newFunctionContext();\n    this.scan(ast);\n  }\n\n  isState(state) {\n    return this.states[this.states.length - 1] === state;\n  }\n\n  hasState(state) {\n    return this.states.indexOf(state) > -1;\n  }\n\n  pushState(state) {\n    this.states.push(state);\n  }\n\n  popState(state) {\n    if (this.isState(state)) {\n      this.states.pop();\n    } else {\n      throw new Error(`Cannot pop the non-active state \"${state}\"`);\n    }\n  }\n\n  get currentFunctionContext() {\n    return last(this.functionContexts);\n  }\n\n  get currentContext() {\n    return last(this.runningContexts);\n  }\n\n  newFunctionContext() {\n    const newContext = { '@contextType': 'function' };\n    this.contexts.push(newContext);\n    this.functionContexts.push(newContext);\n  }\n\n  newContext(run) {\n    const newContext = Object.assign({ '@contextType': 'const/let' }, this.currentContext);\n    this.contexts.push(newContext);\n    this.runningContexts.push(newContext);\n    run();\n    const { currentFunctionContext } = this;\n    for (const p in currentFunctionContext) {\n      if (!currentFunctionContext.hasOwnProperty(p) || newContext.hasOwnProperty(p)) continue;\n      newContext[p] = currentFunctionContext[p];\n    }\n    this.runningContexts.pop();\n    return newContext;\n  }\n\n  useFunctionContext(run) {\n    const functionContext = last(this.functionContexts);\n    this.runningContexts.push(functionContext);\n    run();\n    this.runningContexts.pop();\n  }\n\n  getIdentifiers(run) {\n    const trackedIdentifiers = this.trackedIdentifiers = [];\n    this.pushState(states.trackIdentifiers);\n    run();\n    this.trackedIdentifiers = null;\n    this.popState(states.trackIdentifiers);\n    return trackedIdentifiers;\n  }\n\n  getDeclaration(name) {\n    const { currentContext, currentFunctionContext, runningContexts } = this;\n    const declaration = currentContext[name] || currentFunctionContext[name] || null;\n\n    if (\n      !declaration &&\n      currentContext === currentFunctionContext &&\n      runningContexts.length > 0\n    ) {\n      const previousRunningContext = runningContexts[runningContexts.length - 2];\n      if (previousRunningContext[name]) {\n        return previousRunningContext[name];\n      }\n    }\n\n    return declaration;\n  }\n\n  scan(ast) {\n    if (!ast) return;\n    if (Array.isArray(ast)) {\n      for (let i = 0; i < ast.length; i++) {\n        this.scan(ast[i]);\n      }\n      return;\n    }\n    switch (ast.type) {\n      case 'Program':\n        this.useFunctionContext(() => {\n          this.scan(ast.body);\n        });\n        break;\n      case 'BlockStatement':\n        this.newContext(() => {\n          this.scan(ast.body);\n        });\n        break;\n      case 'AssignmentExpression':\n      case 'LogicalExpression':\n        this.scan(ast.left);\n        this.scan(ast.right);\n        break;\n      case 'BinaryExpression':\n        this.scan(ast.left);\n        this.scan(ast.right);\n        break;\n      case 'UpdateExpression':\n        if (ast.operator === '++') {\n          const declaration = this.getDeclaration(ast.argument.name);\n          if (declaration) {\n            declaration.suggestedType = 'Integer';\n          }\n        }\n        this.scan(ast.argument);\n        break;\n      case 'UnaryExpression':\n        this.scan(ast.argument);\n        break;\n      case 'VariableDeclaration':\n        if (ast.kind === 'var') {\n          this.useFunctionContext(() => {\n            ast.declarations = utils.normalizeDeclarations(ast);\n            this.scan(ast.declarations);\n          });\n        } else {\n          ast.declarations = utils.normalizeDeclarations(ast);\n          this.scan(ast.declarations);\n        }\n        break;\n      case 'VariableDeclarator': {\n        const { currentContext } = this;\n        const inForLoopInit = this.hasState(states.inForLoopInit);\n        const declaration = {\n          ast: ast,\n          context: currentContext,\n          name: ast.id.name,\n          origin: 'declaration',\n          inForLoopInit,\n          inForLoopTest: null,\n          assignable: currentContext === this.currentFunctionContext || (!inForLoopInit && !currentContext.hasOwnProperty(ast.id.name)),\n          suggestedType: null,\n          valueType: null,\n          dependencies: null,\n          isSafe: null,\n        };\n        if (!currentContext[ast.id.name]) {\n          currentContext[ast.id.name] = declaration;\n        }\n        this.declarations.push(declaration);\n        this.scan(ast.id);\n        this.scan(ast.init);\n        break;\n      }\n      case 'FunctionExpression':\n      case 'FunctionDeclaration':\n        if (this.runningContexts.length === 0) {\n          this.scan(ast.body);\n        } else {\n          this.functions.push(ast);\n        }\n        break;\n      case 'IfStatement':\n        this.scan(ast.test);\n        this.scan(ast.consequent);\n        if (ast.alternate) this.scan(ast.alternate);\n        break;\n      case 'ForStatement': {\n        let testIdentifiers;\n        const context = this.newContext(() => {\n          this.pushState(states.inForLoopInit);\n          this.scan(ast.init);\n          this.popState(states.inForLoopInit);\n\n          testIdentifiers = this.getIdentifiers(() => {\n            this.scan(ast.test);\n          });\n\n          this.scan(ast.update);\n          this.newContext(() => {\n            this.scan(ast.body);\n          });\n        });\n\n        if (testIdentifiers) {\n          for (const p in context) {\n            if (p === '@contextType') continue;\n            if (testIdentifiers.indexOf(p) > -1) {\n              context[p].inForLoopTest = true;\n            }\n          }\n        }\n        break;\n      }\n      case 'DoWhileStatement':\n      case 'WhileStatement':\n        this.newContext(() => {\n          this.scan(ast.body);\n          this.scan(ast.test);\n        });\n        break;\n      case 'Identifier': {\n        if (this.isState(states.trackIdentifiers)) {\n          this.trackedIdentifiers.push(ast.name);\n        }\n        this.identifiers.push({\n          context: this.currentContext,\n          declaration: this.getDeclaration(ast.name),\n          ast,\n        });\n        break;\n      }\n      case 'ReturnStatement':\n        this.returnStatements.push(ast);\n        this.scan(ast.argument);\n        break;\n      case 'MemberExpression':\n        this.pushState(states.memberExpression);\n        this.scan(ast.object);\n        this.scan(ast.property);\n        this.popState(states.memberExpression);\n        break;\n      case 'ExpressionStatement':\n        this.scan(ast.expression);\n        break;\n      case 'SequenceExpression':\n        this.scan(ast.expressions);\n        break;\n      case 'CallExpression':\n        this.functionCalls.push({\n          context: this.currentContext,\n          ast,\n        });\n        this.scan(ast.arguments);\n        break;\n      case 'ArrayExpression':\n        this.scan(ast.elements);\n        break;\n      case 'ConditionalExpression':\n        this.scan(ast.test);\n        this.scan(ast.alternate);\n        this.scan(ast.consequent);\n        break;\n      case 'SwitchStatement':\n        this.scan(ast.discriminant);\n        this.scan(ast.cases);\n        break;\n      case 'SwitchCase':\n        this.scan(ast.test);\n        this.scan(ast.consequent);\n        break;\n\n      case 'ThisExpression':\n      case 'Literal':\n      case 'DebuggerStatement':\n      case 'EmptyStatement':\n      case 'BreakStatement':\n      case 'ContinueStatement':\n        break;\n      default:\n        throw new Error(`unhandled type \"${ast.type}\"`);\n    }\n  }\n}\n\nmodule.exports = {\n  FunctionTracer,\n};\n},{\"../utils\":114}],12:[function(require,module,exports){\nconst { glWiretap } = require('gl-wiretap');\nconst { utils } = require('../../utils');\n\nfunction toStringWithoutUtils(fn) {\n  return fn.toString()\n    .replace('=>', '')\n    .replace(/^function /, '')\n    .replace(/utils[.]/g, '/*utils.*/');\n}\n\nfunction glKernelString(Kernel, args, originKernel, setupContextString, destroyContextString) {\n  if (!originKernel.built) {\n    originKernel.build.apply(originKernel, args);\n  }\n  args = args ? Array.from(args).map(arg => {\n    switch (typeof arg) {\n      case 'boolean':\n        return new Boolean(arg);\n      case 'number':\n        return new Number(arg);\n      default:\n        return arg;\n    }\n  }) : null;\n  const uploadedValues = [];\n  const postResult = [];\n  const context = glWiretap(originKernel.context, {\n    useTrackablePrimitives: true,\n    onReadPixels: (targetName) => {\n      if (kernel.subKernels) {\n        if (!subKernelsResultVariableSetup) {\n          postResult.push(`    const result = { result: ${getRenderString(targetName, kernel)} };`);\n          subKernelsResultVariableSetup = true;\n        } else {\n          const property = kernel.subKernels[subKernelsResultIndex++].property;\n          postResult.push(`    result${isNaN(property) ? '.' + property : `[${property}]`} = ${getRenderString(targetName, kernel)};`);\n        }\n        if (subKernelsResultIndex === kernel.subKernels.length) {\n          postResult.push('    return result;');\n        }\n        return;\n      }\n      if (targetName) {\n        postResult.push(`    return ${getRenderString(targetName, kernel)};`);\n      } else {\n        postResult.push(`    return null;`);\n      }\n    },\n    onUnrecognizedArgumentLookup: (argument) => {\n      const argumentName = findKernelValue(argument, kernel.kernelArguments, [], context, uploadedValues);\n      if (argumentName) {\n        return argumentName;\n      }\n      const constantName = findKernelValue(argument, kernel.kernelConstants, constants ? Object.keys(constants).map(key => constants[key]) : [], context, uploadedValues);\n      if (constantName) {\n        return constantName;\n      }\n      return null;\n    }\n  });\n  let subKernelsResultVariableSetup = false;\n  let subKernelsResultIndex = 0;\n  const {\n    source,\n    canvas,\n    output,\n    pipeline,\n    graphical,\n    loopMaxIterations,\n    constants,\n    optimizeFloatMemory,\n    precision,\n    fixIntegerDivisionAccuracy,\n    functions,\n    nativeFunctions,\n    subKernels,\n    immutable,\n    argumentTypes,\n    constantTypes,\n    kernelArguments,\n    kernelConstants,\n    tactic,\n  } = originKernel;\n  const kernel = new Kernel(source, {\n    canvas,\n    context,\n    checkContext: false,\n    output,\n    pipeline,\n    graphical,\n    loopMaxIterations,\n    constants,\n    optimizeFloatMemory,\n    precision,\n    fixIntegerDivisionAccuracy,\n    functions,\n    nativeFunctions,\n    subKernels,\n    immutable,\n    argumentTypes,\n    constantTypes,\n    tactic,\n  });\n  let result = [];\n  context.setIndent(2);\n  kernel.build.apply(kernel, args);\n  result.push(context.toString());\n  context.reset();\n\n  kernel.kernelArguments.forEach((kernelArgument, i) => {\n    switch (kernelArgument.type) {\n      case 'Integer':\n      case 'Boolean':\n      case 'Number':\n      case 'Float':\n      case 'Array':\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n      case 'HTMLCanvas':\n      case 'HTMLImage':\n      case 'HTMLVideo':\n        context.insertVariable(`uploadValue_${kernelArgument.name}`, kernelArgument.uploadValue);\n        break;\n      case 'HTMLImageArray':\n        for (let imageIndex = 0; imageIndex < args[i].length; imageIndex++) {\n          const arg = args[i];\n          context.insertVariable(`uploadValue_${kernelArgument.name}[${imageIndex}]`, arg[imageIndex]);\n        }\n        break;\n      case 'Input':\n        context.insertVariable(`uploadValue_${kernelArgument.name}`, kernelArgument.uploadValue);\n        break;\n      case 'MemoryOptimizedNumberTexture':\n      case 'NumberTexture':\n      case 'Array1D(2)':\n      case 'Array1D(3)':\n      case 'Array1D(4)':\n      case 'Array2D(2)':\n      case 'Array2D(3)':\n      case 'Array2D(4)':\n      case 'Array3D(2)':\n      case 'Array3D(3)':\n      case 'Array3D(4)':\n      case 'ArrayTexture(1)':\n      case 'ArrayTexture(2)':\n      case 'ArrayTexture(3)':\n      case 'ArrayTexture(4)':\n        context.insertVariable(`uploadValue_${kernelArgument.name}`, args[i].texture);\n        break;\n      default:\n        throw new Error(`unhandled kernelArgumentType insertion for glWiretap of type ${kernelArgument.type}`);\n    }\n  });\n  result.push('/** start of injected functions **/');\n  result.push(`function ${toStringWithoutUtils(utils.flattenTo)}`);\n  result.push(`function ${toStringWithoutUtils(utils.flatten2dArrayTo)}`);\n  result.push(`function ${toStringWithoutUtils(utils.flatten3dArrayTo)}`);\n  result.push(`function ${toStringWithoutUtils(utils.flatten4dArrayTo)}`);\n  result.push(`function ${toStringWithoutUtils(utils.isArray)}`);\n  if (kernel.renderOutput !== kernel.renderTexture && kernel.formatValues) {\n    result.push(\n      `  const renderOutput = function ${toStringWithoutUtils(kernel.formatValues)};`\n    );\n  }\n  result.push('/** end of injected functions **/');\n  result.push(`  const innerKernel = function (${kernel.kernelArguments.map(kernelArgument => kernelArgument.varName).join(', ')}) {`);\n  context.setIndent(4);\n  kernel.run.apply(kernel, args);\n  if (kernel.renderKernels) {\n    kernel.renderKernels();\n  } else if (kernel.renderOutput) {\n    kernel.renderOutput();\n  }\n  result.push('    /** start setup uploads for kernel values **/');\n  kernel.kernelArguments.forEach(kernelArgument => {\n    result.push('    ' + kernelArgument.getStringValueHandler().split('\\n').join('\\n    '));\n  });\n  result.push('    /** end setup uploads for kernel values **/');\n  result.push(context.toString());\n  if (kernel.renderOutput === kernel.renderTexture) {\n    context.reset();\n    const framebufferName = context.getContextVariableName(kernel.framebuffer);\n    if (kernel.renderKernels) {\n      const results = kernel.renderKernels();\n      const textureName = context.getContextVariableName(kernel.texture.texture);\n      result.push(`    return {\n      result: {\n        texture: ${ textureName },\n        type: '${ results.result.type }',\n        toArray: ${ getToArrayString(results.result, textureName, framebufferName) }\n      },`);\n      const { subKernels, mappedTextures } = kernel;\n      for (let i = 0; i < subKernels.length; i++) {\n        const texture = mappedTextures[i];\n        const subKernel = subKernels[i];\n        const subKernelResult = results[subKernel.property];\n        const subKernelTextureName = context.getContextVariableName(texture.texture);\n        result.push(`\n      ${subKernel.property}: {\n        texture: ${ subKernelTextureName },\n        type: '${ subKernelResult.type }',\n        toArray: ${ getToArrayString(subKernelResult, subKernelTextureName, framebufferName) }\n      },`);\n      }\n      result.push(`    };`);\n    } else {\n      const rendered = kernel.renderOutput();\n      const textureName = context.getContextVariableName(kernel.texture.texture);\n      result.push(`    return {\n        texture: ${ textureName },\n        type: '${ rendered.type }',\n        toArray: ${ getToArrayString(rendered, textureName, framebufferName) }\n      };`);\n    }\n  }\n  result.push(`    ${destroyContextString ? '\\n' + destroyContextString + '    ': ''}`);\n  result.push(postResult.join('\\n'));\n  result.push('  };');\n  if (kernel.graphical) {\n    result.push(getGetPixelsString(kernel));\n    result.push(`  innerKernel.getPixels = getPixels;`);\n  }\n  result.push('  return innerKernel;');\n\n  let constantsUpload = [];\n  kernelConstants.forEach((kernelConstant) => {\n    constantsUpload.push(`${kernelConstant.getStringValueHandler()}`);\n  });\n  return `function kernel(settings) {\n  const { context, constants } = settings;\n  ${constantsUpload.join('')}\n  ${setupContextString ? setupContextString : ''}\n${result.join('\\n')}\n}`;\n}\n\nfunction getRenderString(targetName, kernel) {\n  const readBackValue = kernel.precision === 'single' ? targetName : `new Float32Array(${targetName}.buffer)`;\n  if (kernel.output[2]) {\n    return `renderOutput(${readBackValue}, ${kernel.output[0]}, ${kernel.output[1]}, ${kernel.output[2]})`;\n  }\n  if (kernel.output[1]) {\n    return `renderOutput(${readBackValue}, ${kernel.output[0]}, ${kernel.output[1]})`;\n  }\n\n  return `renderOutput(${readBackValue}, ${kernel.output[0]})`;\n}\n\nfunction getGetPixelsString(kernel) {\n  const getPixels = kernel.getPixels.toString();\n  const useFunctionKeyword = !/^function/.test(getPixels);\n  return utils.flattenFunctionToString(`${useFunctionKeyword ? 'function ' : ''}${ getPixels }`, {\n    findDependency: (object, name) => {\n      if (object === 'utils') {\n        return `const ${name} = ${utils[name].toString()};`;\n      }\n      return null;\n    },\n    thisLookup: (property) => {\n      if (property === 'context') {\n        return null;\n      }\n      if (kernel.hasOwnProperty(property)) {\n        return JSON.stringify(kernel[property]);\n      }\n      throw new Error(`unhandled thisLookup ${ property }`);\n    }\n  });\n}\n\nfunction getToArrayString(kernelResult, textureName, framebufferName) {\n  const toArray = kernelResult.toArray.toString();\n  const useFunctionKeyword = !/^function/.test(toArray);\n  const flattenedFunctions = utils.flattenFunctionToString(`${useFunctionKeyword ? 'function ' : ''}${ toArray }`, {\n    findDependency: (object, name) => {\n      if (object === 'utils') {\n        return `const ${name} = ${utils[name].toString()};`;\n      } else if (object === 'this') {\n        if (name === 'framebuffer') {\n          return '';\n        }\n        return `${useFunctionKeyword ? 'function ' : ''}${kernelResult[name].toString()}`;\n      } else {\n        throw new Error('unhandled fromObject');\n      }\n    },\n    thisLookup: (property, isDeclaration) => {\n      if (property === 'texture') {\n        return textureName;\n      }\n      if (property === 'context') {\n        if (isDeclaration) return null;\n        return 'gl';\n      }\n      if (kernelResult.hasOwnProperty(property)) {\n        return JSON.stringify(kernelResult[property]);\n      }\n      throw new Error(`unhandled thisLookup ${ property }`);\n    }\n  });\n  return `() => {\n  function framebuffer() { return ${framebufferName}; };\n  ${flattenedFunctions}\n  return toArray();\n  }`;\n}\n\nfunction findKernelValue(argument, kernelValues, values, context, uploadedValues) {\n  if (argument === null) return null;\n  if (kernelValues === null) return null;\n  switch (typeof argument) {\n    case 'boolean':\n    case 'number':\n      return null;\n  }\n  if (\n    typeof HTMLImageElement !== 'undefined' &&\n    argument instanceof HTMLImageElement\n  ) {\n    for (let i = 0; i < kernelValues.length; i++) {\n      const kernelValue = kernelValues[i];\n      if (kernelValue.type !== 'HTMLImageArray' && kernelValue) continue;\n      if (kernelValue.uploadValue !== argument) continue;\n      const variableIndex = values[i].indexOf(argument);\n      if (variableIndex === -1) continue;\n      const variableName = `uploadValue_${kernelValue.name}[${variableIndex}]`;\n      context.insertVariable(variableName, argument);\n      return variableName;\n    }\n  }\n\n  for (let i = 0; i < kernelValues.length; i++) {\n    const kernelValue = kernelValues[i];\n    if (argument !== kernelValue.uploadValue) continue;\n    const variable = `uploadValue_${kernelValue.name}`;\n    context.insertVariable(variable, kernelValue);\n    return variable;\n  }\n  return null;\n}\n\nmodule.exports = {\n  glKernelString\n};\n},{\"../../utils\":114,\"gl-wiretap\":3}],13:[function(require,module,exports){\nconst { Kernel } = require('../kernel');\nconst { utils } = require('../../utils');\nconst { GLTextureArray2Float } = require('./texture/array-2-float');\nconst { GLTextureArray2Float2D } = require('./texture/array-2-float-2d');\nconst { GLTextureArray2Float3D } = require('./texture/array-2-float-3d');\nconst { GLTextureArray3Float } = require('./texture/array-3-float');\nconst { GLTextureArray3Float2D } = require('./texture/array-3-float-2d');\nconst { GLTextureArray3Float3D } = require('./texture/array-3-float-3d');\nconst { GLTextureArray4Float } = require('./texture/array-4-float');\nconst { GLTextureArray4Float2D } = require('./texture/array-4-float-2d');\nconst { GLTextureArray4Float3D } = require('./texture/array-4-float-3d');\nconst { GLTextureFloat } = require('./texture/float');\nconst { GLTextureFloat2D } = require('./texture/float-2d');\nconst { GLTextureFloat3D } = require('./texture/float-3d');\nconst { GLTextureMemoryOptimized } = require('./texture/memory-optimized');\nconst { GLTextureMemoryOptimized2D } = require('./texture/memory-optimized-2d');\nconst { GLTextureMemoryOptimized3D } = require('./texture/memory-optimized-3d');\nconst { GLTextureUnsigned } = require('./texture/unsigned');\nconst { GLTextureUnsigned2D } = require('./texture/unsigned-2d');\nconst { GLTextureUnsigned3D } = require('./texture/unsigned-3d');\nconst { GLTextureGraphical } = require('./texture/graphical');\n\nclass GLKernel extends Kernel {\n  static get mode() {\n    return 'gpu';\n  }\n\n  static getIsFloatRead() {\n    const kernelString = `function kernelFunction() {\n      return 1;\n    }`;\n    const kernel = new this(kernelString, {\n      context: this.testContext,\n      canvas: this.testCanvas,\n      validate: false,\n      output: [1],\n      precision: 'single',\n      returnType: 'Number',\n      tactic: 'speed',\n    });\n    kernel.build();\n    kernel.run();\n    const result = kernel.renderOutput();\n    kernel.destroy(true);\n    return result[0] === 1;\n  }\n\n  static getIsIntegerDivisionAccurate() {\n    function kernelFunction(v1, v2) {\n      return v1[this.thread.x] / v2[this.thread.x];\n    }\n    const kernel = new this(kernelFunction.toString(), {\n      context: this.testContext,\n      canvas: this.testCanvas,\n      validate: false,\n      output: [2],\n      returnType: 'Number',\n      precision: 'unsigned',\n      tactic: 'speed',\n    });\n    const args = [\n      [6, 6030401],\n      [3, 3991]\n    ];\n    kernel.build.apply(kernel, args);\n    kernel.run.apply(kernel, args);\n    const result = kernel.renderOutput();\n    kernel.destroy(true);\n    return result[0] === 2 && result[1] === 1511;\n  }\n\n  static getIsSpeedTacticSupported() {\n    function kernelFunction(value) {\n      return value[this.thread.x];\n    }\n    const kernel = new this(kernelFunction.toString(), {\n      context: this.testContext,\n      canvas: this.testCanvas,\n      validate: false,\n      output: [4],\n      returnType: 'Number',\n      precision: 'unsigned',\n      tactic: 'speed',\n    });\n    const args = [\n      [0, 1, 2, 3]\n    ];\n    kernel.build.apply(kernel, args);\n    kernel.run.apply(kernel, args);\n    const result = kernel.renderOutput();\n    kernel.destroy(true);\n    return Math.round(result[0]) === 0 && Math.round(result[1]) === 1 && Math.round(result[2]) === 2 && Math.round(result[3]) === 3;\n  }\n\n  static get testCanvas() {\n    throw new Error(`\"testCanvas\" not defined on ${ this.name }`);\n  }\n\n  static get testContext() {\n    throw new Error(`\"testContext\" not defined on ${ this.name }`);\n  }\n\n  static getFeatures() {\n    const gl = this.testContext;\n    const isDrawBuffers = this.getIsDrawBuffers();\n    return Object.freeze({\n      isFloatRead: this.getIsFloatRead(),\n      isIntegerDivisionAccurate: this.getIsIntegerDivisionAccurate(),\n      isSpeedTacticSupported: this.getIsSpeedTacticSupported(),\n      isTextureFloat: this.getIsTextureFloat(),\n      isDrawBuffers,\n      kernelMap: isDrawBuffers,\n      channelCount: this.getChannelCount(),\n      maxTextureSize: this.getMaxTextureSize(),\n      lowIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT),\n      lowFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT),\n      mediumIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT),\n      mediumFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT),\n      highIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT),\n      highFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT),\n    });\n  }\n\n  static setupFeatureChecks() {\n    throw new Error(`\"setupFeatureChecks\" not defined on ${ this.name }`);\n  }\n\n  static getSignature(kernel, argumentTypes) {\n    return kernel.getVariablePrecisionString() + (argumentTypes.length > 0 ? ':' + argumentTypes.join(',') : '');\n  }\n\n  setFixIntegerDivisionAccuracy(fix) {\n    this.fixIntegerDivisionAccuracy = fix;\n    return this;\n  }\n\n  setPrecision(flag) {\n    this.precision = flag;\n    return this;\n  }\n\n  setFloatTextures(flag) {\n    utils.warnDeprecated('method', 'setFloatTextures', 'setOptimizeFloatMemory');\n    this.floatTextures = flag;\n    return this;\n  }\n\n  static nativeFunctionArguments(source) {\n    const argumentTypes = [];\n    const argumentNames = [];\n    const states = [];\n    const isStartingVariableName = /^[a-zA-Z_]/;\n    const isVariableChar = /[a-zA-Z_0-9]/;\n    let i = 0;\n    let argumentName = null;\n    let argumentType = null;\n    while (i < source.length) {\n      const char = source[i];\n      const nextChar = source[i + 1];\n      const state = states.length > 0 ? states[states.length - 1] : null;\n\n      if (state === 'FUNCTION_ARGUMENTS' && char === '/' && nextChar === '*') {\n        states.push('MULTI_LINE_COMMENT');\n        i += 2;\n        continue;\n      } else if (state === 'MULTI_LINE_COMMENT' && char === '*' && nextChar === '/') {\n        states.pop();\n        i += 2;\n        continue;\n      }\n\n      else if (state === 'FUNCTION_ARGUMENTS' && char === '/' && nextChar === '/') {\n        states.push('COMMENT');\n        i += 2;\n        continue;\n      } else if (state === 'COMMENT' && char === '\\n') {\n        states.pop();\n        i++;\n        continue;\n      }\n\n      else if (state === null && char === '(') {\n        states.push('FUNCTION_ARGUMENTS');\n        i++;\n        continue;\n      } else if (state === 'FUNCTION_ARGUMENTS') {\n        if (char === ')') {\n          states.pop();\n          break;\n        }\n        if (char === 'f' && nextChar === 'l' && source[i + 2] === 'o' && source[i + 3] === 'a' && source[i + 4] === 't' && source[i + 5] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'float';\n          argumentName = '';\n          i += 6;\n          continue;\n        } else if (char === 'i' && nextChar === 'n' && source[i + 2] === 't' && source[i + 3] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'int';\n          argumentName = '';\n          i += 4;\n          continue;\n        } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '2' && source[i + 4] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'vec2';\n          argumentName = '';\n          i += 5;\n          continue;\n        } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '3' && source[i + 4] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'vec3';\n          argumentName = '';\n          i += 5;\n          continue;\n        } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '4' && source[i + 4] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'vec4';\n          argumentName = '';\n          i += 5;\n          continue;\n        }\n      }\n\n      else if (state === 'DECLARE_VARIABLE') {\n        if (argumentName === '') {\n          if (char === ' ') {\n            i++;\n            continue;\n          }\n          if (!isStartingVariableName.test(char)) {\n            throw new Error('variable name is not expected string');\n          }\n        }\n        argumentName += char;\n        if (!isVariableChar.test(nextChar)) {\n          states.pop();\n          argumentNames.push(argumentName);\n          argumentTypes.push(typeMap[argumentType]);\n        }\n      }\n\n      i++;\n    }\n    if (states.length > 0) {\n      throw new Error('GLSL function was not parsable');\n    }\n    return {\n      argumentNames,\n      argumentTypes,\n    };\n  }\n\n  static nativeFunctionReturnType(source) {\n    return typeMap[source.match(/int|float|vec[2-4]/)[0]];\n  }\n\n  static combineKernels(combinedKernel, lastKernel) {\n    combinedKernel.apply(null, arguments);\n    const {\n      texSize,\n      context,\n      threadDim\n    } = lastKernel.texSize;\n    let result;\n    if (lastKernel.precision === 'single') {\n      const w = texSize[0];\n      const h = Math.ceil(texSize[1] / 4);\n      result = new Float32Array(w * h * 4 * 4);\n      context.readPixels(0, 0, w, h * 4, context.RGBA, context.FLOAT, result);\n    } else {\n      const bytes = new Uint8Array(texSize[0] * texSize[1] * 4);\n      context.readPixels(0, 0, texSize[0], texSize[1], context.RGBA, context.UNSIGNED_BYTE, bytes);\n      result = new Float32Array(bytes.buffer);\n    }\n\n    result = result.subarray(0, threadDim[0] * threadDim[1] * threadDim[2]);\n\n    if (lastKernel.output.length === 1) {\n      return result;\n    } else if (lastKernel.output.length === 2) {\n      return utils.splitArray(result, lastKernel.output[0]);\n    } else if (lastKernel.output.length === 3) {\n      const cube = utils.splitArray(result, lastKernel.output[0] * lastKernel.output[1]);\n      return cube.map(function(x) {\n        return utils.splitArray(x, lastKernel.output[0]);\n      });\n    }\n  }\n\n  constructor(source, settings) {\n    super(source, settings);\n    this.transferValues = null;\n    this.formatValues = null;\n    this.TextureConstructor = null;\n    this.renderOutput = null;\n    this.renderRawOutput = null;\n    this.texSize = null;\n    this.translatedSource = null;\n    this.compiledFragmentShader = null;\n    this.compiledVertexShader = null;\n    this.switchingKernels = null;\n    this._textureSwitched = null;\n    this._mappedTextureSwitched = null;\n  }\n\n  checkTextureSize() {\n    const { features } = this.constructor;\n    if (this.texSize[0] > features.maxTextureSize || this.texSize[1] > features.maxTextureSize) {\n      throw new Error(`Texture size [${this.texSize[0]},${this.texSize[1]}] generated by kernel is larger than supported size [${features.maxTextureSize},${features.maxTextureSize}]`);\n    }\n  }\n\n  translateSource() {\n    throw new Error(`\"translateSource\" not defined on ${this.constructor.name}`);\n  }\n\n  pickRenderStrategy(args) {\n    if (this.graphical) {\n      this.renderRawOutput = this.readPackedPixelsToUint8Array;\n      this.transferValues = (pixels) => pixels;\n      this.TextureConstructor = GLTextureGraphical;\n      return null;\n    }\n    if (this.precision === 'unsigned') {\n      this.renderRawOutput = this.readPackedPixelsToUint8Array;\n      this.transferValues = this.readPackedPixelsToFloat32Array;\n      if (this.pipeline) {\n        this.renderOutput = this.renderTexture;\n        if (this.subKernels !== null) {\n          this.renderKernels = this.renderKernelsToTextures;\n        }\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer':\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureUnsigned3D;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureUnsigned2D;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureUnsigned;\n              return null;\n            }\n            case 'Array(2)':\n            case 'Array(3)':\n            case 'Array(4)':\n              return this.requestFallback(args);\n        }\n      } else {\n        if (this.subKernels !== null) {\n          this.renderKernels = this.renderKernelsToArrays;\n        }\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer':\n            this.renderOutput = this.renderValues;\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureUnsigned3D;\n              this.formatValues = utils.erect3DPackedFloat;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureUnsigned2D;\n              this.formatValues = utils.erect2DPackedFloat;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureUnsigned;\n              this.formatValues = utils.erectPackedFloat;\n              return null;\n            }\n            case 'Array(2)':\n            case 'Array(3)':\n            case 'Array(4)':\n              return this.requestFallback(args);\n        }\n      }\n    } else if (this.precision === 'single') {\n      this.renderRawOutput = this.readFloatPixelsToFloat32Array;\n      this.transferValues = this.readFloatPixelsToFloat32Array;\n      if (this.pipeline) {\n        this.renderOutput = this.renderTexture;\n        if (this.subKernels !== null) {\n          this.renderKernels = this.renderKernelsToTextures;\n        }\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer': {\n            if (this.optimizeFloatMemory) {\n              if (this.output[2] > 0) {\n                this.TextureConstructor = GLTextureMemoryOptimized3D;\n                return null;\n              } else if (this.output[1] > 0) {\n                this.TextureConstructor = GLTextureMemoryOptimized2D;\n                return null;\n              } else {\n                this.TextureConstructor = GLTextureMemoryOptimized;\n                return null;\n              }\n            } else {\n              if (this.output[2] > 0) {\n                this.TextureConstructor = GLTextureFloat3D;\n                return null;\n              } else if (this.output[1] > 0) {\n                this.TextureConstructor = GLTextureFloat2D;\n                return null;\n              } else {\n                this.TextureConstructor = GLTextureFloat;\n                return null;\n              }\n            }\n          }\n          case 'Array(2)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray2Float3D;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray2Float2D;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray2Float;\n              return null;\n            }\n          }\n          case 'Array(3)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray3Float3D;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray3Float2D;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray3Float;\n              return null;\n            }\n          }\n          case 'Array(4)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray4Float3D;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray4Float2D;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray4Float;\n              return null;\n            }\n          }\n        }\n      }\n      this.renderOutput = this.renderValues;\n      if (this.subKernels !== null) {\n        this.renderKernels = this.renderKernelsToArrays;\n      }\n      if (this.optimizeFloatMemory) {\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureMemoryOptimized3D;\n              this.formatValues = utils.erectMemoryOptimized3DFloat;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureMemoryOptimized2D;\n              this.formatValues = utils.erectMemoryOptimized2DFloat;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureMemoryOptimized;\n              this.formatValues = utils.erectMemoryOptimizedFloat;\n              return null;\n            }\n          }\n          case 'Array(2)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray2Float3D;\n              this.formatValues = utils.erect3DArray2;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray2Float2D;\n              this.formatValues = utils.erect2DArray2;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray2Float;\n              this.formatValues = utils.erectArray2;\n              return null;\n            }\n          }\n          case 'Array(3)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray3Float3D;\n              this.formatValues = utils.erect3DArray3;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray3Float2D;\n              this.formatValues = utils.erect2DArray3;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray3Float;\n              this.formatValues = utils.erectArray3;\n              return null;\n            }\n          }\n          case 'Array(4)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray4Float3D;\n              this.formatValues = utils.erect3DArray4;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray4Float2D;\n              this.formatValues = utils.erect2DArray4;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray4Float;\n              this.formatValues = utils.erectArray4;\n              return null;\n            }\n          }\n        }\n      } else {\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureFloat3D;\n              this.formatValues = utils.erect3DFloat;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureFloat2D;\n              this.formatValues = utils.erect2DFloat;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureFloat;\n              this.formatValues = utils.erectFloat;\n              return null;\n            }\n          }\n          case 'Array(2)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray2Float3D;\n              this.formatValues = utils.erect3DArray2;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray2Float2D;\n              this.formatValues = utils.erect2DArray2;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray2Float;\n              this.formatValues = utils.erectArray2;\n              return null;\n            }\n          }\n          case 'Array(3)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray3Float3D;\n              this.formatValues = utils.erect3DArray3;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray3Float2D;\n              this.formatValues = utils.erect2DArray3;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray3Float;\n              this.formatValues = utils.erectArray3;\n              return null;\n            }\n          }\n          case 'Array(4)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray4Float3D;\n              this.formatValues = utils.erect3DArray4;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray4Float2D;\n              this.formatValues = utils.erect2DArray4;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray4Float;\n              this.formatValues = utils.erectArray4;\n              return null;\n            }\n          }\n        }\n      }\n    } else {\n      throw new Error(`unhandled precision of \"${this.precision}\"`);\n    }\n\n    throw new Error(`unhandled return type \"${this.returnType}\"`);\n  }\n\n  getKernelString() {\n    throw new Error(`abstract method call`);\n  }\n\n  getMainResultTexture() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Float':\n      case 'Integer':\n      case 'Number':\n        return this.getMainResultNumberTexture();\n      case 'Array(2)':\n        return this.getMainResultArray2Texture();\n      case 'Array(3)':\n        return this.getMainResultArray3Texture();\n      case 'Array(4)':\n        return this.getMainResultArray4Texture();\n      default:\n        throw new Error(`unhandled returnType type ${ this.returnType }`);\n    }\n  }\n\n  getMainResultKernelNumberTexture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultSubKernelNumberTexture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultKernelArray2Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultSubKernelArray2Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultKernelArray3Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultSubKernelArray3Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultKernelArray4Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultSubKernelArray4Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultGraphical() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultMemoryOptimizedFloats() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultPackedPixels() {\n    throw new Error(`abstract method call`);\n  }\n\n  getMainResultString() {\n    if (this.graphical) {\n      return this.getMainResultGraphical();\n    } else if (this.precision === 'single') {\n      if (this.optimizeFloatMemory) {\n        return this.getMainResultMemoryOptimizedFloats();\n      }\n      return this.getMainResultTexture();\n    } else {\n      return this.getMainResultPackedPixels();\n    }\n  }\n\n  getMainResultNumberTexture() {\n    return utils.linesToString(this.getMainResultKernelNumberTexture()) +\n      utils.linesToString(this.getMainResultSubKernelNumberTexture());\n  }\n\n  getMainResultArray2Texture() {\n    return utils.linesToString(this.getMainResultKernelArray2Texture()) +\n      utils.linesToString(this.getMainResultSubKernelArray2Texture());\n  }\n\n  getMainResultArray3Texture() {\n    return utils.linesToString(this.getMainResultKernelArray3Texture()) +\n      utils.linesToString(this.getMainResultSubKernelArray3Texture());\n  }\n\n  getMainResultArray4Texture() {\n    return utils.linesToString(this.getMainResultKernelArray4Texture()) +\n      utils.linesToString(this.getMainResultSubKernelArray4Texture());\n  }\n\n  getFloatTacticDeclaration() {\n    const variablePrecision = this.getVariablePrecisionString(this.texSize, this.tactic);\n    return `precision ${variablePrecision} float;\\n`;\n  }\n\n  getIntTacticDeclaration() {\n    return `precision ${this.getVariablePrecisionString(this.texSize, this.tactic, true)} int;\\n`;\n  }\n\n  getSampler2DTacticDeclaration() {\n    return `precision ${this.getVariablePrecisionString(this.texSize, this.tactic)} sampler2D;\\n`;\n  }\n\n  getSampler2DArrayTacticDeclaration() {\n    return `precision ${this.getVariablePrecisionString(this.texSize, this.tactic)} sampler2DArray;\\n`;\n  }\n\n  renderTexture() {\n    return this.immutable ? this.texture.clone() : this.texture;\n  }\n  readPackedPixelsToUint8Array() {\n    if (this.precision !== 'unsigned') throw new Error('Requires this.precision to be \"unsigned\"');\n    const {\n      texSize,\n      context: gl\n    } = this;\n    const result = new Uint8Array(texSize[0] * texSize[1] * 4);\n    gl.readPixels(0, 0, texSize[0], texSize[1], gl.RGBA, gl.UNSIGNED_BYTE, result);\n    return result;\n  }\n\n  readPackedPixelsToFloat32Array() {\n    return new Float32Array(this.readPackedPixelsToUint8Array().buffer);\n  }\n\n  readFloatPixelsToFloat32Array() {\n    if (this.precision !== 'single') throw new Error('Requires this.precision to be \"single\"');\n    const {\n      texSize,\n      context: gl\n    } = this;\n    const w = texSize[0];\n    const h = texSize[1];\n    const result = new Float32Array(w * h * 4);\n    gl.readPixels(0, 0, w, h, gl.RGBA, gl.FLOAT, result);\n    return result;\n  }\n\n  getPixels(flip) {\n    const {\n      context: gl,\n      output\n    } = this;\n    const [width, height] = output;\n    const pixels = new Uint8Array(width * height * 4);\n    gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n    return new Uint8ClampedArray((flip ? pixels : utils.flipPixels(pixels, width, height)).buffer);\n  }\n\n  renderKernelsToArrays() {\n    const result = {\n      result: this.renderOutput(),\n    };\n    for (let i = 0; i < this.subKernels.length; i++) {\n      result[this.subKernels[i].property] = this.mappedTextures[i].toArray();\n    }\n    return result;\n  }\n\n  renderKernelsToTextures() {\n    const result = {\n      result: this.renderOutput(),\n    };\n    if (this.immutable) {\n      for (let i = 0; i < this.subKernels.length; i++) {\n        result[this.subKernels[i].property] = this.mappedTextures[i].clone();\n      }\n    } else {\n      for (let i = 0; i < this.subKernels.length; i++) {\n        result[this.subKernels[i].property] = this.mappedTextures[i];\n      }\n    }\n    return result;\n  }\n\n  resetSwitchingKernels() {\n    const existingValue = this.switchingKernels;\n    this.switchingKernels = null;\n    return existingValue;\n  }\n\n  setOutput(output) {\n    const newOutput = this.toKernelOutput(output);\n    if (this.program) {\n      if (!this.dynamicOutput) {\n        throw new Error('Resizing a kernel with dynamicOutput: false is not possible');\n      }\n      const newThreadDim = [newOutput[0], newOutput[1] || 1, newOutput[2] || 1];\n      const newTexSize = utils.getKernelTextureSize({\n        optimizeFloatMemory: this.optimizeFloatMemory,\n        precision: this.precision,\n      }, newThreadDim);\n      const oldTexSize = this.texSize;\n      if (oldTexSize) {\n        const oldPrecision = this.getVariablePrecisionString(oldTexSize, this.tactic);\n        const newPrecision = this.getVariablePrecisionString(newTexSize, this.tactic);\n        if (oldPrecision !== newPrecision) {\n          if (this.debug) {\n            console.warn('Precision requirement changed, asking GPU instance to recompile');\n          }\n          this.switchKernels({\n            type: 'outputPrecisionMismatch',\n            precision: newPrecision,\n            needed: output\n          });\n          return;\n        }\n      }\n      this.output = newOutput;\n      this.threadDim = newThreadDim;\n      this.texSize = newTexSize;\n      const { context: gl } = this;\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n      this.updateMaxTexSize();\n      this.framebuffer.width = this.texSize[0];\n      this.framebuffer.height = this.texSize[1];\n      gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\n      this.canvas.width = this.maxTexSize[0];\n      this.canvas.height = this.maxTexSize[1];\n      if (this.texture) {\n        this.texture.delete();\n      }\n      this.texture = null;\n      this._setupOutputTexture();\n      if (this.mappedTextures && this.mappedTextures.length > 0) {\n        for (let i = 0; i < this.mappedTextures.length; i++) {\n          this.mappedTextures[i].delete();\n        }\n        this.mappedTextures = null;\n        this._setupSubOutputTextures();\n      }\n    } else {\n      this.output = newOutput;\n    }\n    return this;\n  }\n  renderValues() {\n    return this.formatValues(\n      this.transferValues(),\n      this.output[0],\n      this.output[1],\n      this.output[2]\n    );\n  }\n  switchKernels(reason) {\n    if (this.switchingKernels) {\n      this.switchingKernels.push(reason);\n    } else {\n      this.switchingKernels = [reason];\n    }\n  }\n  getVariablePrecisionString(textureSize = this.texSize, tactic = this.tactic, isInt = false) {\n    if (!tactic) {\n      if (!this.constructor.features.isSpeedTacticSupported) return 'highp';\n      const low = this.constructor.features[isInt ? 'lowIntPrecision' : 'lowFloatPrecision'];\n      const medium = this.constructor.features[isInt ? 'mediumIntPrecision' : 'mediumFloatPrecision'];\n      const high = this.constructor.features[isInt ? 'highIntPrecision' : 'highFloatPrecision'];\n      const requiredSize = Math.log2(textureSize[0] * textureSize[1]);\n      if (requiredSize <= low.rangeMax) {\n        return 'lowp';\n      } else if (requiredSize <= medium.rangeMax) {\n        return 'mediump';\n      } else if (requiredSize <= high.rangeMax) {\n        return 'highp';\n      } else {\n        throw new Error(`The required size exceeds that of the ability of your system`);\n      }\n    }\n    switch (tactic) {\n      case 'speed':\n        return 'lowp';\n      case 'balanced':\n        return 'mediump';\n      case 'precision':\n        return 'highp';\n      default:\n        throw new Error(`Unknown tactic \"${tactic}\" use \"speed\", \"balanced\", \"precision\", or empty for auto`);\n    }\n  }\n\n  updateTextureArgumentRefs(kernelValue, arg) {\n    if (!this.immutable) return;\n    if (this.texture.texture === arg.texture) {\n      const { prevArg } = kernelValue;\n      if (prevArg) {\n        if (prevArg.texture._refs === 1) {\n          this.texture.delete();\n          this.texture = prevArg.clone();\n          this._textureSwitched = true;\n        }\n        prevArg.delete();\n      }\n      kernelValue.prevArg = arg.clone();\n    } else if (this.mappedTextures && this.mappedTextures.length > 0) {\n      const { mappedTextures } = this;\n      for (let i = 0; i < mappedTextures.length; i++) {\n        const mappedTexture = mappedTextures[i];\n        if (mappedTexture.texture === arg.texture) {\n          const { prevArg } = kernelValue;\n          if (prevArg) {\n            if (prevArg.texture._refs === 1) {\n              mappedTexture.delete();\n              mappedTextures[i] = prevArg.clone();\n              this._mappedTextureSwitched[i] = true;\n            }\n            prevArg.delete();\n          }\n          kernelValue.prevArg = arg.clone();\n          return;\n        }\n      }\n    }\n  }\n\n  onActivate(previousKernel) {\n    this._textureSwitched = true;\n    this.texture = previousKernel.texture;\n    if (this.mappedTextures) {\n      for (let i = 0; i < this.mappedTextures.length; i++) {\n        this._mappedTextureSwitched[i] = true;\n      }\n      this.mappedTextures = previousKernel.mappedTextures;\n    }\n  }\n\n  initCanvas() {}\n}\n\nconst typeMap = {\n  int: 'Integer',\n  float: 'Number',\n  vec2: 'Array(2)',\n  vec3: 'Array(3)',\n  vec4: 'Array(4)',\n};\n\nmodule.exports = {\n  GLKernel\n};\n},{\"../../utils\":114,\"../kernel\":36,\"./texture/array-2-float\":16,\"./texture/array-2-float-2d\":14,\"./texture/array-2-float-3d\":15,\"./texture/array-3-float\":19,\"./texture/array-3-float-2d\":17,\"./texture/array-3-float-3d\":18,\"./texture/array-4-float\":22,\"./texture/array-4-float-2d\":20,\"./texture/array-4-float-3d\":21,\"./texture/float\":25,\"./texture/float-2d\":23,\"./texture/float-3d\":24,\"./texture/graphical\":26,\"./texture/memory-optimized\":30,\"./texture/memory-optimized-2d\":28,\"./texture/memory-optimized-3d\":29,\"./texture/unsigned\":33,\"./texture/unsigned-2d\":31,\"./texture/unsigned-3d\":32}],14:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray2Float2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(2)';\n  }\n  toArray() {\n    return utils.erect2DArray2(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray2Float2D\n};\n},{\"../../../utils\":114,\"./float\":25}],15:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray2Float3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(2)';\n  }\n  toArray() {\n    return utils.erect3DArray2(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray2Float3D\n};\n},{\"../../../utils\":114,\"./float\":25}],16:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray2Float extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(2)';\n  }\n  toArray() {\n    return utils.erectArray2(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray2Float\n};\n},{\"../../../utils\":114,\"./float\":25}],17:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray3Float2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(3)';\n  }\n  toArray() {\n    return utils.erect2DArray3(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray3Float2D\n};\n},{\"../../../utils\":114,\"./float\":25}],18:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray3Float3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(3)';\n  }\n  toArray() {\n    return utils.erect3DArray3(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray3Float3D\n};\n},{\"../../../utils\":114,\"./float\":25}],19:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray3Float extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(3)';\n  }\n  toArray() {\n    return utils.erectArray3(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray3Float\n};\n},{\"../../../utils\":114,\"./float\":25}],20:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray4Float2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return utils.erect2DArray4(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray4Float2D\n};\n},{\"../../../utils\":114,\"./float\":25}],21:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray4Float3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return utils.erect3DArray4(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray4Float3D\n};\n},{\"../../../utils\":114,\"./float\":25}],22:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray4Float extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return utils.erectArray4(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray4Float\n};\n},{\"../../../utils\":114,\"./float\":25}],23:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureFloat2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(1)';\n  }\n  toArray() {\n    return utils.erect2DFloat(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureFloat2D\n};\n},{\"../../../utils\":114,\"./float\":25}],24:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureFloat3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(1)';\n  }\n  toArray() {\n    return utils.erect3DFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureFloat3D\n};\n},{\"../../../utils\":114,\"./float\":25}],25:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTexture } = require('./index');\n\nclass GLTextureFloat extends GLTexture {\n  get textureType() {\n    return this.context.FLOAT;\n  }\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(1)';\n  }\n  renderRawOutput() {\n    const gl = this.context;\n    const size = this.size;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer());\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture,\n      0\n    );\n    const result = new Float32Array(size[0] * size[1] * 4);\n    gl.readPixels(0, 0, size[0], size[1], gl.RGBA, gl.FLOAT, result);\n    return result;\n  }\n  renderValues() {\n    if (this._deleted) return null;\n    return this.renderRawOutput();\n  }\n  toArray() {\n    return utils.erectFloat(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureFloat\n};\n},{\"../../../utils\":114,\"./index\":27}],26:[function(require,module,exports){\nconst { GLTextureUnsigned } = require('./unsigned');\n\nclass GLTextureGraphical extends GLTextureUnsigned {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return this.renderValues();\n  }\n}\n\nmodule.exports = {\n  GLTextureGraphical\n};\n},{\"./unsigned\":33}],27:[function(require,module,exports){\nconst { Texture } = require('../../../texture');\n\nclass GLTexture extends Texture {\n  get textureType() {\n    throw new Error(`\"textureType\" not implemented on ${ this.name }`);\n  }\n\n  clone() {\n    return new this.constructor(this);\n  }\n\n  beforeMutate() {\n    if (this.texture._refs > 1) {\n      this.newTexture();\n      return true;\n    }\n    return false;\n  }\n\n  cloneTexture() {\n    this.texture._refs--;\n    const { context: gl, size, texture, kernel } = this;\n    if (kernel.debug) {\n      console.warn('cloning internal texture');\n    }\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer());\n    selectTexture(gl, texture);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    const target = gl.createTexture();\n    selectTexture(gl, target);\n    gl.texImage2D(gl.TEXTURE_2D, 0, this.internalFormat, size[0], size[1], 0, this.textureFormat, this.textureType, null);\n    gl.copyTexSubImage2D(gl.TEXTURE_2D, 0, 0, 0, 0, 0, size[0], size[1]);\n    target._refs = 1;\n    this.texture = target;\n  }\n\n  newTexture() {\n    this.texture._refs--;\n    const gl = this.context;\n    const size = this.size;\n    const kernel = this.kernel;\n    if (kernel.debug) {\n      console.warn('new internal texture');\n    }\n    const target = gl.createTexture();\n    selectTexture(gl, target);\n    gl.texImage2D(gl.TEXTURE_2D, 0, this.internalFormat, size[0], size[1], 0, this.textureFormat, this.textureType, null);\n    target._refs = 1;\n    this.texture = target;\n  }\n\n  clear() {\n    if (this.texture._refs) {\n      this.texture._refs--;\n      const gl = this.context;\n      const target = this.texture = gl.createTexture();\n      selectTexture(gl, target);\n      const size = this.size;\n      target._refs = 1;\n      gl.texImage2D(gl.TEXTURE_2D, 0, this.internalFormat, size[0], size[1], 0, this.textureFormat, this.textureType, null);\n    }\n    const { context: gl, texture } = this;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer());\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    selectTexture(gl, texture);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    gl.clearColor(0, 0, 0, 0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n  }\n\n  delete() {\n    if (this._deleted) return;\n    this._deleted = true;\n    if (this.texture._refs) {\n      this.texture._refs--;\n      if (this.texture._refs) return;\n    }\n    this.context.deleteTexture(this.texture);\n  }\n\n  framebuffer() {\n    if (!this._framebuffer) {\n      this._framebuffer = this.kernel.getRawValueFramebuffer(this.size[0], this.size[1]);\n    }\n    return this._framebuffer;\n  }\n}\n\nfunction selectTexture(gl, texture) {\n  gl.activeTexture(gl.TEXTURE15);\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n}\n\nmodule.exports = { GLTexture };\n},{\"../../../texture\":113}],28:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureMemoryOptimized2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'MemoryOptimizedNumberTexture';\n  }\n  toArray() {\n    return utils.erectMemoryOptimized2DFloat(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureMemoryOptimized2D\n};\n},{\"../../../utils\":114,\"./float\":25}],29:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureMemoryOptimized3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'MemoryOptimizedNumberTexture';\n  }\n  toArray() {\n    return utils.erectMemoryOptimized3DFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureMemoryOptimized3D\n};\n},{\"../../../utils\":114,\"./float\":25}],30:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureMemoryOptimized extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'MemoryOptimizedNumberTexture';\n  }\n  toArray() {\n    return utils.erectMemoryOptimizedFloat(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureMemoryOptimized\n};\n},{\"../../../utils\":114,\"./float\":25}],31:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureUnsigned } = require('./unsigned');\n\nclass GLTextureUnsigned2D extends GLTextureUnsigned {\n  constructor(settings) {\n    super(settings);\n    this.type = 'NumberTexture';\n  }\n  toArray() {\n    return utils.erect2DPackedFloat(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureUnsigned2D\n};\n},{\"../../../utils\":114,\"./unsigned\":33}],32:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureUnsigned } = require('./unsigned');\n\nclass GLTextureUnsigned3D extends GLTextureUnsigned {\n  constructor(settings) {\n    super(settings);\n    this.type = 'NumberTexture';\n  }\n  toArray() {\n    return utils.erect3DPackedFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureUnsigned3D\n};\n},{\"../../../utils\":114,\"./unsigned\":33}],33:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTexture } = require('./index');\n\nclass GLTextureUnsigned extends GLTexture {\n  get textureType() {\n    return this.context.UNSIGNED_BYTE;\n  }\n  constructor(settings) {\n    super(settings);\n    this.type = 'NumberTexture';\n  }\n  renderRawOutput() {\n    const { context: gl } = this;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer());\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture,\n      0\n    );\n    const result = new Uint8Array(this.size[0] * this.size[1] * 4);\n    gl.readPixels(0, 0, this.size[0], this.size[1], gl.RGBA, gl.UNSIGNED_BYTE, result);\n    return result;\n  }\n  renderValues() {\n    if (this._deleted) return null;\n    return new Float32Array(this.renderRawOutput().buffer);\n  }\n  toArray() {\n    return utils.erectPackedFloat(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureUnsigned\n};\n},{\"../../../utils\":114,\"./index\":27}],34:[function(require,module,exports){\nconst getContext = require('gl');\nconst { WebGLKernel } = require('../web-gl/kernel');\nconst { glKernelString } = require('../gl/kernel-string');\n\nlet isSupported = null;\nlet testCanvas = null;\nlet testContext = null;\nlet testExtensions = null;\nlet features = null;\n\nclass HeadlessGLKernel extends WebGLKernel {\n  static get isSupported() {\n    if (isSupported !== null) return isSupported;\n    this.setupFeatureChecks();\n    isSupported = testContext !== null;\n    return isSupported;\n  }\n\n  static setupFeatureChecks() {\n    testCanvas = null;\n    testExtensions = null;\n    if (typeof getContext !== 'function') return;\n    try { \n      testContext = getContext(2, 2, {\n        preserveDrawingBuffer: true\n      });\n      if (!testContext || !testContext.getExtension) return;\n      testExtensions = {\n        STACKGL_resize_drawingbuffer: testContext.getExtension('STACKGL_resize_drawingbuffer'),\n        STACKGL_destroy_context: testContext.getExtension('STACKGL_destroy_context'),\n        OES_texture_float: testContext.getExtension('OES_texture_float'),\n        OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear'),\n        OES_element_index_uint: testContext.getExtension('OES_element_index_uint'),\n        WEBGL_draw_buffers: testContext.getExtension('WEBGL_draw_buffers'),\n        WEBGL_color_buffer_float: testContext.getExtension('WEBGL_color_buffer_float'),\n      };\n      features = this.getFeatures();\n    } catch (e) {\n      console.warn(e);\n    }\n  }\n\n  static isContextMatch(context) {\n    try {\n      return context.getParameter(context.RENDERER) === 'ANGLE';\n    } catch (e) {\n      return false;\n    }\n  }\n\n  static getIsTextureFloat() {\n    return Boolean(testExtensions.OES_texture_float);\n  }\n\n  static getIsDrawBuffers() {\n    return Boolean(testExtensions.WEBGL_draw_buffers);\n  }\n\n  static getChannelCount() {\n    return testExtensions.WEBGL_draw_buffers ?\n      testContext.getParameter(testExtensions.WEBGL_draw_buffers.MAX_DRAW_BUFFERS_WEBGL) :\n      1;\n  }\n\n  static getMaxTextureSize() {\n    return testContext.getParameter(testContext.MAX_TEXTURE_SIZE);\n  }\n\n  static get testCanvas() {\n    return testCanvas;\n  }\n\n  static get testContext() {\n    return testContext;\n  }\n\n  static get features() {\n    return features;\n  }\n\n  initCanvas() {\n    return {};\n  }\n\n  initContext() {\n    return getContext(2, 2, {\n      preserveDrawingBuffer: true\n    });\n  }\n\n  initExtensions() {\n    this.extensions = {\n      STACKGL_resize_drawingbuffer: this.context.getExtension('STACKGL_resize_drawingbuffer'),\n      STACKGL_destroy_context: this.context.getExtension('STACKGL_destroy_context'),\n      OES_texture_float: this.context.getExtension('OES_texture_float'),\n      OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear'),\n      OES_element_index_uint: this.context.getExtension('OES_element_index_uint'),\n      WEBGL_draw_buffers: this.context.getExtension('WEBGL_draw_buffers'),\n    };\n  }\n\n  build() {\n    super.build.apply(this, arguments);\n    if (!this.fallbackRequested) {\n      this.extensions.STACKGL_resize_drawingbuffer.resize(this.maxTexSize[0], this.maxTexSize[1]);\n    }\n  }\n\n  destroyExtensions() {\n    this.extensions.STACKGL_resize_drawingbuffer = null;\n    this.extensions.STACKGL_destroy_context = null;\n    this.extensions.OES_texture_float = null;\n    this.extensions.OES_texture_float_linear = null;\n    this.extensions.OES_element_index_uint = null;\n    this.extensions.WEBGL_draw_buffers = null;\n  }\n\n  static destroyContext(context) {\n    const extension = context.getExtension('STACKGL_destroy_context');\n    if (extension && extension.destroy) {\n      extension.destroy();\n    }\n  }\n\n  toString() {\n    const setupContextString = `const gl = context || require('gl')(1, 1);\\n`;\n    const destroyContextString = `    if (!context) { gl.getExtension('STACKGL_destroy_context').destroy(); }\\n`;\n    return glKernelString(this.constructor, arguments, this, setupContextString, destroyContextString);\n  }\n\n  setOutput(output) {\n    super.setOutput(output);\n    if (this.graphical && this.extensions.STACKGL_resize_drawingbuffer) {\n      this.extensions.STACKGL_resize_drawingbuffer.resize(this.maxTexSize[0], this.maxTexSize[1]);\n    }\n    return this;\n  }\n}\n\nmodule.exports = {\n  HeadlessGLKernel\n};\n},{\"../gl/kernel-string\":12,\"../web-gl/kernel\":70,\"gl\":2}],35:[function(require,module,exports){\nclass KernelValue {\n  constructor(value, settings) {\n    const {\n      name,\n      kernel,\n      context,\n      checkContext,\n      onRequestContextHandle,\n      onUpdateValueMismatch,\n      origin,\n      strictIntegers,\n      type,\n      tactic,\n    } = settings;\n    if (!name) {\n      throw new Error('name not set');\n    }\n    if (!type) {\n      throw new Error('type not set');\n    }\n    if (!origin) {\n      throw new Error('origin not set');\n    }\n    if (origin !== 'user' && origin !== 'constants') {\n      throw new Error(`origin must be \"user\" or \"constants\" value is \"${ origin }\"`);\n    }\n    if (!onRequestContextHandle) {\n      throw new Error('onRequestContextHandle is not set');\n    }\n    this.name = name;\n    this.origin = origin;\n    this.tactic = tactic;\n    this.varName = origin === 'constants' ? `constants.${name}` : name;\n    this.kernel = kernel;\n    this.strictIntegers = strictIntegers;\n    this.type = value.type || type;\n    this.size = value.size || null;\n    this.index = null;\n    this.context = context;\n    this.checkContext = checkContext !== null && checkContext !== undefined ? checkContext : true;\n    this.contextHandle = null;\n    this.onRequestContextHandle = onRequestContextHandle;\n    this.onUpdateValueMismatch = onUpdateValueMismatch;\n    this.forceUploadEachRun = null;\n  }\n\n  get id() {\n    return `${this.origin}_${name}`;\n  }\n\n  getSource() {\n    throw new Error(`\"getSource\" not defined on ${ this.constructor.name }`);\n  }\n\n  updateValue(value) {\n    throw new Error(`\"updateValue\" not defined on ${ this.constructor.name }`);\n  }\n}\n\nmodule.exports = {\n  KernelValue\n};\n},{}],36:[function(require,module,exports){\nconst { utils } = require('../utils');\nconst { Input } = require('../input');\n\nclass Kernel {\n  static get isSupported() {\n    throw new Error(`\"isSupported\" not implemented on ${ this.name }`);\n  }\n\n  static isContextMatch(context) {\n    throw new Error(`\"isContextMatch\" not implemented on ${ this.name }`);\n  }\n\n  static getFeatures() {\n    throw new Error(`\"getFeatures\" not implemented on ${ this.name }`);\n  }\n\n  static destroyContext(context) {\n    throw new Error(`\"destroyContext\" called on ${ this.name }`);\n  }\n\n  static nativeFunctionArguments() {\n    throw new Error(`\"nativeFunctionArguments\" called on ${ this.name }`);\n  }\n\n  static nativeFunctionReturnType() {\n    throw new Error(`\"nativeFunctionReturnType\" called on ${ this.name }`);\n  }\n\n  static combineKernels() {\n    throw new Error(`\"combineKernels\" called on ${ this.name }`);\n  }\n\n  constructor(source, settings) {\n    if (typeof source !== 'object') {\n      if (typeof source !== 'string') {\n        throw new Error('source not a string');\n      }\n      if (!utils.isFunctionString(source)) {\n        throw new Error('source not a function string');\n      }\n    }\n    this.useLegacyEncoder = false;\n    this.fallbackRequested = false;\n    this.onRequestFallback = null;\n\n    this.argumentNames = typeof source === 'string' ? utils.getArgumentNamesFromString(source) : null;\n    this.argumentTypes = null;\n    this.argumentSizes = null;\n    this.argumentBitRatios = null;\n    this.kernelArguments = null;\n    this.kernelConstants = null;\n    this.forceUploadKernelConstants = null;\n\n\n    this.source = source;\n\n    this.output = null;\n\n    this.debug = false;\n\n    this.graphical = false;\n\n    this.loopMaxIterations = 0;\n\n    this.constants = null;\n\n    this.constantTypes = null;\n\n    this.constantBitRatios = null;\n\n    this.dynamicArguments = false;\n\n    this.dynamicOutput = false;\n\n    this.canvas = null;\n\n    this.context = null;\n\n    this.checkContext = null;\n\n    this.gpu = null;\n\n    this.functions = null;\n\n    this.nativeFunctions = null;\n\n    this.injectedNative = null;\n\n    this.subKernels = null;\n\n    this.validate = true;\n\n    this.immutable = false;\n\n    this.pipeline = false;\n\n    this.precision = null;\n\n    this.tactic = null;\n\n    this.plugins = null;\n\n    this.returnType = null;\n    this.leadingReturnStatement = null;\n    this.followingReturnStatement = null;\n    this.optimizeFloatMemory = null;\n    this.strictIntegers = false;\n    this.fixIntegerDivisionAccuracy = null;\n    this.built = false;\n    this.signature = null;\n  }\n\n  mergeSettings(settings) {\n    for (let p in settings) {\n      if (!settings.hasOwnProperty(p) || !this.hasOwnProperty(p)) continue;\n      switch (p) {\n        case 'output':\n          if (!Array.isArray(settings.output)) {\n            this.setOutput(settings.output); \n            continue;\n          }\n          break;\n        case 'functions':\n          this.functions = [];\n          for (let i = 0; i < settings.functions.length; i++) {\n            this.addFunction(settings.functions[i]);\n          }\n          continue;\n        case 'graphical':\n          if (settings[p] && !settings.hasOwnProperty('precision')) {\n            this.precision = 'unsigned';\n          }\n          this[p] = settings[p];\n          continue;\n        case 'nativeFunctions':\n          if (!settings.nativeFunctions) continue;\n          this.nativeFunctions = [];\n          for (let i = 0; i < settings.nativeFunctions.length; i++) {\n            const s = settings.nativeFunctions[i];\n            const { name, source } = s;\n            this.addNativeFunction(name, source, s);\n          }\n          continue;\n      }\n      this[p] = settings[p];\n    }\n\n    if (!this.canvas) this.canvas = this.initCanvas();\n    if (!this.context) this.context = this.initContext();\n    if (!this.plugins) this.plugins = this.initPlugins(settings);\n  }\n  build() {\n    throw new Error(`\"build\" not defined on ${ this.constructor.name }`);\n  }\n\n  run() {\n    throw new Error(`\"run\" not defined on ${ this.constructor.name }`)\n  }\n\n  initCanvas() {\n    throw new Error(`\"initCanvas\" not defined on ${ this.constructor.name }`);\n  }\n\n  initContext() {\n    throw new Error(`\"initContext\" not defined on ${ this.constructor.name }`);\n  }\n\n  initPlugins(settings) {\n    throw new Error(`\"initPlugins\" not defined on ${ this.constructor.name }`);\n  }\n\n  addFunction(source, settings = {}) {\n    if (source.name && source.source && source.argumentTypes && 'returnType' in source) {\n      this.functions.push(source);\n    } else if ('settings' in source && 'source' in source) {\n      this.functions.push(this.functionToIGPUFunction(source.source, source.settings));\n    } else if (typeof source === 'string' || typeof source === 'function') {\n      this.functions.push(this.functionToIGPUFunction(source, settings));\n    } else {\n      throw new Error(`function not properly defined`);\n    }\n    return this;\n  }\n\n  addNativeFunction(name, source, settings = {}) {\n    const { argumentTypes, argumentNames } = settings.argumentTypes ?\n      splitArgumentTypes(settings.argumentTypes) :\n      this.constructor.nativeFunctionArguments(source) || {};\n    this.nativeFunctions.push({\n      name,\n      source,\n      settings,\n      argumentTypes,\n      argumentNames,\n      returnType: settings.returnType || this.constructor.nativeFunctionReturnType(source)\n    });\n    return this;\n  }\n\n  setupArguments(args) {\n    this.kernelArguments = [];\n    if (!this.argumentTypes) {\n      if (!this.argumentTypes) {\n        this.argumentTypes = [];\n        for (let i = 0; i < args.length; i++) {\n          const argType = utils.getVariableType(args[i], this.strictIntegers);\n          const type = argType === 'Integer' ? 'Number' : argType;\n          this.argumentTypes.push(type);\n          this.kernelArguments.push({\n            type\n          });\n        }\n      }\n    } else {\n      for (let i = 0; i < this.argumentTypes.length; i++) {\n        this.kernelArguments.push({\n          type: this.argumentTypes[i]\n        });\n      }\n    }\n\n    this.argumentSizes = new Array(args.length);\n    this.argumentBitRatios = new Int32Array(args.length);\n\n    for (let i = 0; i < args.length; i++) {\n      const arg = args[i];\n      this.argumentSizes[i] = arg.constructor === Input ? arg.size : null;\n      this.argumentBitRatios[i] = this.getBitRatio(arg);\n    }\n\n    if (this.argumentNames.length !== args.length) {\n      throw new Error(`arguments are miss-aligned`);\n    }\n  }\n\n  setupConstants() {\n    this.kernelConstants = [];\n    let needsConstantTypes = this.constantTypes === null;\n    if (needsConstantTypes) {\n      this.constantTypes = {};\n    }\n    this.constantBitRatios = {};\n    if (this.constants) {\n      for (let name in this.constants) {\n        if (needsConstantTypes) {\n          const type = utils.getVariableType(this.constants[name], this.strictIntegers);\n          this.constantTypes[name] = type;\n          this.kernelConstants.push({\n            name,\n            type\n          });\n        } else {\n          this.kernelConstants.push({\n            name,\n            type: this.constantTypes[name]\n          });\n        }\n        this.constantBitRatios[name] = this.getBitRatio(this.constants[name]);\n      }\n    }\n  }\n\n  setOptimizeFloatMemory(flag) {\n    this.optimizeFloatMemory = flag;\n    return this;\n  }\n\n  toKernelOutput(output) {\n    if (output.hasOwnProperty('x')) {\n      if (output.hasOwnProperty('y')) {\n        if (output.hasOwnProperty('z')) {\n          return [output.x, output.y, output.z];\n        } else {\n          return [output.x, output.y];\n        }\n      } else {\n        return [output.x];\n      }\n    } else {\n      return output;\n    }\n  }\n\n  setOutput(output) {\n    this.output = this.toKernelOutput(output);\n    return this;\n  }\n\n  setDebug(flag) {\n    this.debug = flag;\n    return this;\n  }\n\n  setGraphical(flag) {\n    this.graphical = flag;\n    this.precision = 'unsigned';\n    return this;\n  }\n\n  setLoopMaxIterations(max) {\n    this.loopMaxIterations = max;\n    return this;\n  }\n\n  setConstants(constants) {\n    this.constants = constants;\n    return this;\n  }\n\n  setConstantTypes(constantTypes) {\n    this.constantTypes = constantTypes;\n    return this;\n  }\n\n  setFunctions(functions) {\n    for (let i = 0; i < functions.length; i++) {\n      this.addFunction(functions[i]);\n    }\n    return this;\n  }\n\n  setNativeFunctions(nativeFunctions) {\n    for (let i = 0; i < nativeFunctions.length; i++) {\n      const settings = nativeFunctions[i];\n      const { name, source } = settings;\n      this.addNativeFunction(name, source, settings);\n    }\n    return this;\n  }\n\n  setInjectedNative(injectedNative) {\n    this.injectedNative = injectedNative;\n    return this;\n  }\n\n  setPipeline(flag) {\n    this.pipeline = flag;\n    return this;\n  }\n\n  setPrecision(flag) {\n    this.precision = flag;\n    return this;\n  }\n\n  setDimensions(flag) {\n    utils.warnDeprecated('method', 'setDimensions', 'setOutput');\n    this.output = flag;\n    return this;\n  }\n\n  setOutputToTexture(flag) {\n    utils.warnDeprecated('method', 'setOutputToTexture', 'setPipeline');\n    this.pipeline = flag;\n    return this;\n  }\n\n  setImmutable(flag) {\n    this.immutable = flag;\n    return this;\n  }\n\n  setCanvas(canvas) {\n    this.canvas = canvas;\n    return this;\n  }\n\n  setStrictIntegers(flag) {\n    this.strictIntegers = flag;\n    return this;\n  }\n\n  setDynamicOutput(flag) {\n    this.dynamicOutput = flag;\n    return this;\n  }\n\n  setHardcodeConstants(flag) {\n    utils.warnDeprecated('method', 'setHardcodeConstants');\n    this.setDynamicOutput(flag);\n    this.setDynamicArguments(flag);\n    return this;\n  }\n\n  setDynamicArguments(flag) {\n    this.dynamicArguments = flag;\n    return this;\n  }\n\n  setUseLegacyEncoder(flag) {\n    this.useLegacyEncoder = flag;\n    return this;\n  }\n\n  setWarnVarUsage(flag) {\n    utils.warnDeprecated('method', 'setWarnVarUsage');\n    return this;\n  }\n\n  getCanvas() {\n    utils.warnDeprecated('method', 'getCanvas');\n    return this.canvas;\n  }\n\n  getWebGl() {\n    utils.warnDeprecated('method', 'getWebGl');\n    return this.context;\n  }\n\n  setContext(context) {\n    this.context = context;\n    return this;\n  }\n\n  setArgumentTypes(argumentTypes) {\n    if (Array.isArray(argumentTypes)) {\n      this.argumentTypes = argumentTypes;\n    } else {\n      this.argumentTypes = [];\n      for (const p in argumentTypes) {\n        if (!argumentTypes.hasOwnProperty(p)) continue;\n        const argumentIndex = this.argumentNames.indexOf(p);\n        if (argumentIndex === -1) throw new Error(`unable to find argument ${ p }`);\n        this.argumentTypes[argumentIndex] = argumentTypes[p];\n      }\n    }\n    return this;\n  }\n\n  setTactic(tactic) {\n    this.tactic = tactic;\n    return this;\n  }\n\n  requestFallback(args) {\n    if (!this.onRequestFallback) {\n      throw new Error(`\"onRequestFallback\" not defined on ${ this.constructor.name }`);\n    }\n    this.fallbackRequested = true;\n    return this.onRequestFallback(args);\n  }\n\n  validateSettings() {\n    throw new Error(`\"validateSettings\" not defined on ${ this.constructor.name }`);\n  }\n\n  addSubKernel(subKernel) {\n    if (this.subKernels === null) {\n      this.subKernels = [];\n    }\n    if (!subKernel.source) throw new Error('subKernel missing \"source\" property');\n    if (!subKernel.property && isNaN(subKernel.property)) throw new Error('subKernel missing \"property\" property');\n    if (!subKernel.name) throw new Error('subKernel missing \"name\" property');\n    this.subKernels.push(subKernel);\n    return this;\n  }\n\n  destroy(removeCanvasReferences) {\n    throw new Error(`\"destroy\" called on ${ this.constructor.name }`);\n  }\n\n  getBitRatio(value) {\n    if (this.precision === 'single') {\n      return 4;\n    } else if (Array.isArray(value[0])) {\n      return this.getBitRatio(value[0]);\n    } else if (value.constructor === Input) {\n      return this.getBitRatio(value.value);\n    }\n    switch (value.constructor) {\n      case Uint8ClampedArray:\n      case Uint8Array:\n      case Int8Array:\n        return 1;\n      case Uint16Array:\n      case Int16Array:\n        return 2;\n      case Float32Array:\n      case Int32Array:\n      default:\n        return 4;\n    }\n  }\n\n  getPixels(flip) {\n    throw new Error(`\"getPixels\" called on ${ this.constructor.name }`);\n  }\n\n  checkOutput() {\n    if (!this.output || !utils.isArray(this.output)) throw new Error('kernel.output not an array');\n    if (this.output.length < 1) throw new Error('kernel.output is empty, needs at least 1 value');\n    for (let i = 0; i < this.output.length; i++) {\n      if (isNaN(this.output[i]) || this.output[i] < 1) {\n        throw new Error(`${ this.constructor.name }.output[${ i }] incorrectly defined as \\`${ this.output[i] }\\`, needs to be numeric, and greater than 0`);\n      }\n    }\n  }\n\n  prependString(value) {\n    throw new Error(`\"prependString\" called on ${ this.constructor.name }`);\n  }\n\n  hasPrependString(value) {\n    throw new Error(`\"hasPrependString\" called on ${ this.constructor.name }`);\n  }\n\n  toJSON() {\n    return {\n      settings: {\n        output: this.output,\n        pipeline: this.pipeline,\n        argumentNames: this.argumentNames,\n        argumentsTypes: this.argumentTypes,\n        constants: this.constants,\n        pluginNames: this.plugins ? this.plugins.map(plugin => plugin.name) : null,\n        returnType: this.returnType,\n      }\n    };\n  }\n\n  buildSignature(args) {\n    const Constructor = this.constructor;\n    this.signature = Constructor.getSignature(this, Constructor.getArgumentTypes(this, args));\n  }\n\n  static getArgumentTypes(kernel, args) {\n    const argumentTypes = new Array(args.length);\n    for (let i = 0; i < args.length; i++) {\n      const arg = args[i];\n      const type = kernel.argumentTypes[i];\n      if (arg.type) {\n        argumentTypes[i] = arg.type;\n      } else {\n        switch (type) {\n          case 'Number':\n          case 'Integer':\n          case 'Float':\n          case 'ArrayTexture(1)':\n            argumentTypes[i] = utils.getVariableType(arg);\n            break;\n          default:\n            argumentTypes[i] = type;\n        }\n      }\n    }\n    return argumentTypes;\n  }\n\n  static getSignature(kernel, argumentTypes) {\n    throw new Error(`\"getSignature\" not implemented on ${ this.name }`);\n  }\n\n  functionToIGPUFunction(source, settings = {}) {\n    if (typeof source !== 'string' && typeof source !== 'function') throw new Error('source not a string or function');\n    const sourceString = typeof source === 'string' ? source : source.toString();\n    let argumentTypes = [];\n\n    if (Array.isArray(settings.argumentTypes)) {\n      argumentTypes = settings.argumentTypes;\n    } else if (typeof settings.argumentTypes === 'object') {\n      argumentTypes = utils.getArgumentNamesFromString(sourceString)\n        .map(name => settings.argumentTypes[name]) || [];\n    } else {\n      argumentTypes = settings.argumentTypes || [];\n    }\n\n    return {\n      name: utils.getFunctionNameFromString(sourceString) || null,\n      source: sourceString,\n      argumentTypes,\n      returnType: settings.returnType || null,\n    };\n  }\n\n  onActivate(previousKernel) {}\n}\n\nfunction splitArgumentTypes(argumentTypesObject) {\n  const argumentNames = Object.keys(argumentTypesObject);\n  const argumentTypes = [];\n  for (let i = 0; i < argumentNames.length; i++) {\n    const argumentName = argumentNames[i];\n    argumentTypes.push(argumentTypesObject[argumentName]);\n  }\n  return { argumentTypes, argumentNames };\n}\n\nmodule.exports = {\n  Kernel\n};\n},{\"../input\":110,\"../utils\":114}],37:[function(require,module,exports){\nconst fragmentShader = `__HEADER__;\n__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n\nconst int LOOP_MAX = __LOOP_MAX__;\n\n__PLUGINS__;\n__CONSTANTS__;\n\nvarying vec2 vTexCoord;\n\nfloat acosh(float x) {\n  return log(x + sqrt(x * x - 1.0));\n}\n\nfloat sinh(float x) {\n  return (pow(${Math.E}, x) - pow(${Math.E}, -x)) / 2.0;\n}\n\nfloat asinh(float x) {\n  return log(x + sqrt(x * x + 1.0));\n}\n\nfloat atan2(float v1, float v2) {\n  if (v1 == 0.0 || v2 == 0.0) return 0.0;\n  return atan(v1 / v2);\n}\n\nfloat atanh(float x) {\n  x = (x + 1.0) / (x - 1.0);\n  if (x < 0.0) {\n    return 0.5 * log(-x);\n  }\n  return 0.5 * log(x);\n}\n\nfloat cbrt(float x) {\n  if (x >= 0.0) {\n    return pow(x, 1.0 / 3.0);\n  } else {\n    return -pow(x, 1.0 / 3.0);\n  }\n}\n\nfloat cosh(float x) {\n  return (pow(${Math.E}, x) + pow(${Math.E}, -x)) / 2.0; \n}\n\nfloat expm1(float x) {\n  return pow(${Math.E}, x) - 1.0; \n}\n\nfloat fround(highp float x) {\n  return x;\n}\n\nfloat imul(float v1, float v2) {\n  return float(int(v1) * int(v2));\n}\n\nfloat log10(float x) {\n  return log2(x) * (1.0 / log2(10.0));\n}\n\nfloat log1p(float x) {\n  return log(1.0 + x);\n}\n\nfloat _pow(float v1, float v2) {\n  if (v2 == 0.0) return 1.0;\n  return pow(v1, v2);\n}\n\nfloat tanh(float x) {\n  float e = exp(2.0 * x);\n  return (e - 1.0) / (e + 1.0);\n}\n\nfloat trunc(float x) {\n  if (x >= 0.0) {\n    return floor(x); \n  } else {\n    return ceil(x);\n  }\n}\n\nvec4 _round(vec4 x) {\n  return floor(x + 0.5);\n}\n\nfloat _round(float x) {\n  return floor(x + 0.5);\n}\n\nconst int BIT_COUNT = 32;\nint modi(int x, int y) {\n  return x - y * (x / y);\n}\n\nint bitwiseOr(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) || (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseXOR(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) != (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseAnd(int a, int b) {\n  int result = 0;\n  int n = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) && (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 && b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseNot(int a) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (modi(a, 2) == 0) {\n      result += n;    \n    }\n    a = a / 2;\n    n = n * 2;\n  }\n  return result;\n}\nint bitwiseZeroFillLeftShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n *= 2;\n  }\n\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nint bitwiseSignedRightShift(int num, int shifts) {\n  return int(floor(float(num) / pow(2.0, float(shifts))));\n}\n\nint bitwiseZeroFillRightShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n /= 2;\n  }\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nvec2 integerMod(vec2 x, float y) {\n  vec2 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec3 integerMod(vec3 x, float y) {\n  vec3 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec4 integerMod(vec4 x, vec4 y) {\n  vec4 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nfloat integerMod(float x, float y) {\n  float res = floor(mod(x, y));\n  return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);\n}\n\nint integerMod(int x, int y) {\n  return x - (y * int(x / y));\n}\n\n__DIVIDE_WITH_INTEGER_CHECK__;\n\n// Here be dragons!\n// DO NOT OPTIMIZE THIS CODE\n// YOU WILL BREAK SOMETHING ON SOMEBODY\\'S MACHINE\n// LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\nconst vec2 MAGIC_VEC = vec2(1.0, -256.0);\nconst vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);\nconst vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); // 1, 1/256, 1/65536\nfloat decode32(vec4 texel) {\n  __DECODE32_ENDIANNESS__;\n  texel *= 255.0;\n  vec2 gte128;\n  gte128.x = texel.b >= 128.0 ? 1.0 : 0.0;\n  gte128.y = texel.a >= 128.0 ? 1.0 : 0.0;\n  float exponent = 2.0 * texel.a - 127.0 + dot(gte128, MAGIC_VEC);\n  float res = exp2(_round(exponent));\n  texel.b = texel.b - 128.0 * gte128.x;\n  res = dot(texel, SCALE_FACTOR) * exp2(_round(exponent-23.0)) + res;\n  res *= gte128.y * -2.0 + 1.0;\n  return res;\n}\n\nfloat decode16(vec4 texel, int index) {\n  int channel = integerMod(index, 2);\n  if (channel == 0) return texel.r * 255.0 + texel.g * 65280.0;\n  if (channel == 1) return texel.b * 255.0 + texel.a * 65280.0;\n  return 0.0;\n}\n\nfloat decode8(vec4 texel, int index) {\n  int channel = integerMod(index, 4);\n  if (channel == 0) return texel.r * 255.0;\n  if (channel == 1) return texel.g * 255.0;\n  if (channel == 2) return texel.b * 255.0;\n  if (channel == 3) return texel.a * 255.0;\n  return 0.0;\n}\n\nvec4 legacyEncode32(float f) {\n  float F = abs(f);\n  float sign = f < 0.0 ? 1.0 : 0.0;\n  float exponent = floor(log2(F));\n  float mantissa = (exp2(-exponent) * F);\n  // exponent += floor(log2(mantissa));\n  vec4 texel = vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;\n  texel.rg = integerMod(texel.rg, 256.0);\n  texel.b = integerMod(texel.b, 128.0);\n  texel.a = exponent*0.5 + 63.5;\n  texel.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;\n  texel = floor(texel);\n  texel *= 0.003921569; // 1/255\n  __ENCODE32_ENDIANNESS__;\n  return texel;\n}\n\n// https://github.com/gpujs/gpu.js/wiki/Encoder-details\nvec4 encode32(float value) {\n  if (value == 0.0) return vec4(0, 0, 0, 0);\n\n  float exponent;\n  float mantissa;\n  vec4  result;\n  float sgn;\n\n  sgn = step(0.0, -value);\n  value = abs(value);\n\n  exponent = floor(log2(value));\n\n  mantissa = value*pow(2.0, -exponent)-1.0;\n  exponent = exponent+127.0;\n  result   = vec4(0,0,0,0);\n\n  result.a = floor(exponent/2.0);\n  exponent = exponent - result.a*2.0;\n  result.a = result.a + 128.0*sgn;\n\n  result.b = floor(mantissa * 128.0);\n  mantissa = mantissa - result.b / 128.0;\n  result.b = result.b + exponent*128.0;\n\n  result.g = floor(mantissa*32768.0);\n  mantissa = mantissa - result.g/32768.0;\n\n  result.r = floor(mantissa*8388608.0);\n  return result/255.0;\n}\n// Dragons end here\n\nint index;\nivec3 threadId;\n\nivec3 indexTo3D(int idx, ivec3 texDim) {\n  int z = int(idx / (texDim.x * texDim.y));\n  idx -= z * int(texDim.x * texDim.y);\n  int y = int(idx / texDim.x);\n  int x = int(integerMod(idx, texDim.x));\n  return ivec3(x, y, z);\n}\n\nfloat get32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  return decode32(texel);\n}\n\nfloat get16(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x * 2;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize.x * 2, texSize.y));\n  return decode16(texel, index);\n}\n\nfloat get8(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x * 4;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize.x * 4, texSize.y));\n  return decode8(texel, index);\n}\n\nfloat getMemoryOptimized32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 4);\n  index = index / 4;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  if (channel == 0) return texel.r;\n  if (channel == 1) return texel.g;\n  if (channel == 2) return texel.b;\n  if (channel == 3) return texel.a;\n  return 0.0;\n}\n\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  return texture2D(tex, st / vec2(texSize));\n}\n\nfloat getFloatFromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return result[0];\n}\n\nvec2 getVec2FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec2(result[0], result[1]);\n}\n\nvec2 getMemoryOptimizedVec2(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int channel = integerMod(index, 2);\n  index = index / 2;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  if (channel == 0) return vec2(texel.r, texel.g);\n  if (channel == 1) return vec2(texel.b, texel.a);\n  return vec2(0.0, 0.0);\n}\n\nvec3 getVec3FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec3(result[0], result[1], result[2]);\n}\n\nvec3 getMemoryOptimizedVec3(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int fieldIndex = 3 * (x + texDim.x * (y + texDim.y * z));\n  int vectorIndex = fieldIndex / 4;\n  int vectorOffset = fieldIndex - vectorIndex * 4;\n  int readY = vectorIndex / texSize.x;\n  int readX = vectorIndex - readY * texSize.x;\n  vec4 tex1 = texture2D(tex, (vec2(readX, readY) + 0.5) / vec2(texSize));\n  \n  if (vectorOffset == 0) {\n    return tex1.xyz;\n  } else if (vectorOffset == 1) {\n    return tex1.yzw;\n  } else {\n    readX++;\n    if (readX >= texSize.x) {\n      readX = 0;\n      readY++;\n    }\n    vec4 tex2 = texture2D(tex, vec2(readX, readY) / vec2(texSize));\n    if (vectorOffset == 2) {\n      return vec3(tex1.z, tex1.w, tex2.x);\n    } else {\n      return vec3(tex1.w, tex2.x, tex2.y);\n    }\n  }\n}\n\nvec4 getVec4FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  return getImage2D(tex, texSize, texDim, z, y, x);\n}\n\nvec4 getMemoryOptimizedVec4(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 2);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  return vec4(texel.r, texel.g, texel.b, texel.a);\n}\n\nvec4 actualColor;\nvoid color(float r, float g, float b, float a) {\n  actualColor = vec4(r,g,b,a);\n}\n\nvoid color(float r, float g, float b) {\n  color(r,g,b,1.0);\n}\n\nvoid color(sampler2D image) {\n  actualColor = texture2D(image, vTexCoord);\n}\n\nfloat modulo(float number, float divisor) {\n  if (number < 0.0) {\n    number = abs(number);\n    if (divisor < 0.0) {\n      divisor = abs(divisor);\n    }\n    return -mod(number, divisor);\n  }\n  if (divisor < 0.0) {\n    divisor = abs(divisor);\n  }\n  return mod(number, divisor);\n}\n\n__INJECTED_NATIVE__;\n__MAIN_CONSTANTS__;\n__MAIN_ARGUMENTS__;\n__KERNEL__;\n\nvoid main(void) {\n  index = int(vTexCoord.s * float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\n  __MAIN_RESULT__;\n}`;\n\nmodule.exports = {\n  fragmentShader\n};\n},{}],38:[function(require,module,exports){\nconst { utils } = require('../../utils');\nconst { FunctionNode } = require('../function-node');\n\nclass WebGLFunctionNode extends FunctionNode {\n  constructor(source, settings) {\n    super(source, settings);\n    if (settings && settings.hasOwnProperty('fixIntegerDivisionAccuracy')) {\n      this.fixIntegerDivisionAccuracy = settings.fixIntegerDivisionAccuracy;\n    }\n  }\n\n  astConditionalExpression(ast, retArr) {\n    if (ast.type !== 'ConditionalExpression') {\n      throw this.astErrorOutput('Not a conditional expression', ast);\n    }\n    const consequentType = this.getType(ast.consequent);\n    const alternateType = this.getType(ast.alternate);\n    if (consequentType === null && alternateType === null) {\n      retArr.push('if (');\n      this.astGeneric(ast.test, retArr);\n      retArr.push(') {');\n      this.astGeneric(ast.consequent, retArr);\n      retArr.push(';');\n      retArr.push('} else {');\n      this.astGeneric(ast.alternate, retArr);\n      retArr.push(';');\n      retArr.push('}');\n      return retArr;\n    }\n    retArr.push('(');\n    this.astGeneric(ast.test, retArr);\n    retArr.push('?');\n    this.astGeneric(ast.consequent, retArr);\n    retArr.push(':');\n    this.astGeneric(ast.alternate, retArr);\n    retArr.push(')');\n    return retArr;\n  }\n\n  astFunction(ast, retArr) {\n    if (this.isRootKernel) {\n      retArr.push('void');\n    } else {\n      if (!this.returnType) {\n        const lastReturn = this.findLastReturn();\n        if (lastReturn) {\n          this.returnType = this.getType(ast.body);\n          if (this.returnType === 'LiteralInteger') {\n            this.returnType = 'Number';\n          }\n        }\n      }\n\n      const { returnType } = this;\n      if (!returnType) {\n        retArr.push('void');\n      } else {\n        const type = typeMap[returnType];\n        if (!type) {\n          throw new Error(`unknown type ${returnType}`);\n        }\n        retArr.push(type);\n      }\n    }\n    retArr.push(' ');\n    retArr.push(this.name);\n    retArr.push('(');\n\n    if (!this.isRootKernel) {\n      for (let i = 0; i < this.argumentNames.length; ++i) {\n        const argumentName = this.argumentNames[i];\n\n        if (i > 0) {\n          retArr.push(', ');\n        }\n        let argumentType = this.argumentTypes[this.argumentNames.indexOf(argumentName)];\n        if (!argumentType) {\n          throw this.astErrorOutput(`Unknown argument ${argumentName} type`, ast);\n        }\n        if (argumentType === 'LiteralInteger') {\n          this.argumentTypes[i] = argumentType = 'Number';\n        }\n        const type = typeMap[argumentType];\n        if (!type) {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        const name = utils.sanitizeName(argumentName);\n        if (type === 'sampler2D' || type === 'sampler2DArray') {\n          retArr.push(`${type} user_${name},ivec2 user_${name}Size,ivec3 user_${name}Dim`);\n        } else {\n          retArr.push(`${type} user_${name}`);\n        }\n      }\n    }\n\n    retArr.push(') {\\n');\n\n    for (let i = 0; i < ast.body.body.length; ++i) {\n      this.astGeneric(ast.body.body[i], retArr);\n      retArr.push('\\n');\n    }\n\n    retArr.push('}\\n');\n    return retArr;\n  }\n\n  astReturnStatement(ast, retArr) {\n    if (!ast.argument) throw this.astErrorOutput('Unexpected return statement', ast);\n    this.pushState('skip-literal-correction');\n    const type = this.getType(ast.argument);\n    this.popState('skip-literal-correction');\n\n    const result = [];\n\n    if (!this.returnType) {\n      if (type === 'LiteralInteger' || type === 'Integer') {\n        this.returnType = 'Number';\n      } else {\n        this.returnType = type;\n      }\n    }\n\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Float':\n        switch (type) {\n          case 'Integer':\n            result.push('float(');\n            this.astGeneric(ast.argument, result);\n            result.push(')');\n            break;\n          case 'LiteralInteger':\n            this.castLiteralToFloat(ast.argument, result);\n\n            if (this.getType(ast) === 'Integer') {\n              result.unshift('float(');\n              result.push(')');\n            }\n            break;\n          default:\n            this.astGeneric(ast.argument, result);\n        }\n        break;\n      case 'Integer':\n        switch (type) {\n          case 'Float':\n          case 'Number':\n            this.castValueToInteger(ast.argument, result);\n            break;\n          case 'LiteralInteger':\n            this.castLiteralToInteger(ast.argument, result);\n            break;\n          default:\n            this.astGeneric(ast.argument, result);\n        }\n        break;\n      case 'Array(4)':\n      case 'Array(3)':\n      case 'Array(2)':\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n      case 'Input':\n        this.astGeneric(ast.argument, result);\n        break;\n      default:\n        throw this.astErrorOutput(`unhandled return type ${this.returnType}`, ast);\n    }\n\n    if (this.isRootKernel) {\n      retArr.push(`kernelResult = ${ result.join('') };`);\n      retArr.push('return;');\n    } else if (this.isSubKernel) {\n      retArr.push(`subKernelResult_${ this.name } = ${ result.join('') };`);\n      retArr.push(`return subKernelResult_${ this.name };`);\n    } else {\n      retArr.push(`return ${ result.join('') };`);\n    }\n    return retArr;\n  }\n\n  astLiteral(ast, retArr) {\n    if (isNaN(ast.value)) {\n      throw this.astErrorOutput(\n        'Non-numeric literal not supported : ' + ast.value,\n        ast\n      );\n    }\n\n    const key = this.astKey(ast);\n    if (Number.isInteger(ast.value)) {\n      if (this.isState('casting-to-integer') || this.isState('building-integer')) {\n        this.literalTypes[key] = 'Integer';\n        retArr.push(`${ast.value}`);\n      } else if (this.isState('casting-to-float') || this.isState('building-float')) {\n        this.literalTypes[key] = 'Number';\n        retArr.push(`${ast.value}.0`);\n      } else {\n        this.literalTypes[key] = 'Number';\n        retArr.push(`${ast.value}.0`);\n      }\n    } else if (this.isState('casting-to-integer') || this.isState('building-integer')) {\n      this.literalTypes[key] = 'Integer';\n      retArr.push(Math.round(ast.value));\n    } else {\n      this.literalTypes[key] = 'Number';\n      retArr.push(`${ast.value}`);\n    }\n    return retArr;\n  }\n\n  astBinaryExpression(ast, retArr) {\n    if (this.checkAndUpconvertOperator(ast, retArr)) {\n      return retArr;\n    }\n\n    if (this.fixIntegerDivisionAccuracy && ast.operator === '/') {\n      retArr.push('divWithIntCheck(');\n      this.pushState('building-float');\n      switch (this.getType(ast.left)) {\n        case 'Integer':\n          this.castValueToFloat(ast.left, retArr);\n          break;\n        case 'LiteralInteger':\n          this.castLiteralToFloat(ast.left, retArr);\n          break;\n        default:\n          this.astGeneric(ast.left, retArr);\n      }\n      retArr.push(', ');\n      switch (this.getType(ast.right)) {\n        case 'Integer':\n          this.castValueToFloat(ast.right, retArr);\n          break;\n        case 'LiteralInteger':\n          this.castLiteralToFloat(ast.right, retArr);\n          break;\n        default:\n          this.astGeneric(ast.right, retArr);\n      }\n      this.popState('building-float');\n      retArr.push(')');\n      return retArr;\n    }\n\n    retArr.push('(');\n    const leftType = this.getType(ast.left) || 'Number';\n    const rightType = this.getType(ast.right) || 'Number';\n    if (!leftType || !rightType) {\n      throw this.astErrorOutput(`Unhandled binary expression`, ast);\n    }\n    const key = leftType + ' & ' + rightType;\n    switch (key) {\n      case 'Integer & Integer':\n        this.pushState('building-integer');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-integer');\n        break;\n      case 'Number & Float':\n      case 'Float & Number':\n      case 'Float & Float':\n      case 'Number & Number':\n        this.pushState('building-float');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-float');\n        break;\n      case 'LiteralInteger & LiteralInteger':\n        if (this.isState('casting-to-integer') || this.isState('building-integer')) {\n          this.pushState('building-integer');\n          this.astGeneric(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.astGeneric(ast.right, retArr);\n          this.popState('building-integer');\n        } else {\n          this.pushState('building-float');\n          this.castLiteralToFloat(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.castLiteralToFloat(ast.right, retArr);\n          this.popState('building-float');\n        }\n        break;\n\n      case 'Integer & Float':\n      case 'Integer & Number':\n        if (ast.operator === '>' || ast.operator === '<' && ast.right.type === 'Literal') {\n          if (!Number.isInteger(ast.right.value)) {\n            this.pushState('building-float');\n            this.castValueToFloat(ast.left, retArr);\n            retArr.push(operatorMap[ast.operator] || ast.operator);\n            this.astGeneric(ast.right, retArr);\n            this.popState('building-float');\n            break;\n          }\n        }\n        this.pushState('building-integer');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.pushState('casting-to-integer');\n        if (ast.right.type === 'Literal') {\n          const literalResult = [];\n          this.astGeneric(ast.right, literalResult);\n          const literalType = this.getType(ast.right);\n          if (literalType === 'Integer') {\n            retArr.push(literalResult.join(''));\n          } else {\n            throw this.astErrorOutput(`Unhandled binary expression with literal`, ast);\n          }\n        } else {\n          retArr.push('int(');\n          this.astGeneric(ast.right, retArr);\n          retArr.push(')');\n        }\n        this.popState('casting-to-integer');\n        this.popState('building-integer');\n        break;\n      case 'Integer & LiteralInteger':\n        this.pushState('building-integer');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.castLiteralToInteger(ast.right, retArr);\n        this.popState('building-integer');\n        break;\n\n      case 'Number & Integer':\n        this.pushState('building-float');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.castValueToFloat(ast.right, retArr);\n        this.popState('building-float');\n        break;\n      case 'Float & LiteralInteger':\n      case 'Number & LiteralInteger':\n        this.pushState('building-float');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.castLiteralToFloat(ast.right, retArr);\n        this.popState('building-float');\n        break;\n      case 'LiteralInteger & Float':\n      case 'LiteralInteger & Number':\n        if (this.isState('casting-to-integer')) {\n          this.pushState('building-integer');\n          this.castLiteralToInteger(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.castValueToInteger(ast.right, retArr);\n          this.popState('building-integer');\n        } else {\n          this.pushState('building-float');\n          this.astGeneric(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.pushState('casting-to-float');\n          this.astGeneric(ast.right, retArr);\n          this.popState('casting-to-float');\n          this.popState('building-float');\n        }\n        break;\n      case 'LiteralInteger & Integer':\n        this.pushState('building-integer');\n        this.castLiteralToInteger(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-integer');\n        break;\n\n      case 'Boolean & Boolean':\n        this.pushState('building-boolean');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-boolean');\n        break;\n\n      case 'Float & Integer':\n        this.pushState('building-float');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.castValueToFloat(ast.right, retArr);\n        this.popState('building-float');\n        break;\n\n      default:\n        throw this.astErrorOutput(`Unhandled binary expression between ${key}`, ast);\n    }\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  checkAndUpconvertOperator(ast, retArr) {\n    const bitwiseResult = this.checkAndUpconvertBitwiseOperators(ast, retArr);\n    if (bitwiseResult) {\n      return bitwiseResult;\n    }\n    const upconvertableOperators = {\n      '%': this.fixIntegerDivisionAccuracy ? 'integerCorrectionModulo' : 'modulo',\n      '**': 'pow',\n    };\n    const foundOperator = upconvertableOperators[ast.operator];\n    if (!foundOperator) return null;\n    retArr.push(foundOperator);\n    retArr.push('(');\n    switch (this.getType(ast.left)) {\n      case 'Integer':\n        this.castValueToFloat(ast.left, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToFloat(ast.left, retArr);\n        break;\n      default:\n        this.astGeneric(ast.left, retArr);\n    }\n    retArr.push(',');\n    switch (this.getType(ast.right)) {\n      case 'Integer':\n        this.castValueToFloat(ast.right, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToFloat(ast.right, retArr);\n        break;\n      default:\n        this.astGeneric(ast.right, retArr);\n    }\n    retArr.push(')');\n    return retArr;\n  }\n\n  checkAndUpconvertBitwiseOperators(ast, retArr) {\n    const upconvertableOperators = {\n      '&': 'bitwiseAnd',\n      '|': 'bitwiseOr',\n      '^': 'bitwiseXOR',\n      '<<': 'bitwiseZeroFillLeftShift',\n      '>>': 'bitwiseSignedRightShift',\n      '>>>': 'bitwiseZeroFillRightShift',\n    };\n    const foundOperator = upconvertableOperators[ast.operator];\n    if (!foundOperator) return null;\n    retArr.push(foundOperator);\n    retArr.push('(');\n    const leftType = this.getType(ast.left);\n    switch (leftType) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(ast.left, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(ast.left, retArr);\n        break;\n      default:\n        this.astGeneric(ast.left, retArr);\n    }\n    retArr.push(',');\n    const rightType = this.getType(ast.right);\n    switch (rightType) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(ast.right, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(ast.right, retArr);\n        break;\n      default:\n        this.astGeneric(ast.right, retArr);\n    }\n    retArr.push(')');\n    return retArr;\n  }\n\n  checkAndUpconvertBitwiseUnary(ast, retArr) {\n    const upconvertableOperators = {\n      '~': 'bitwiseNot',\n    };\n    const foundOperator = upconvertableOperators[ast.operator];\n    if (!foundOperator) return null;\n    retArr.push(foundOperator);\n    retArr.push('(');\n    switch (this.getType(ast.argument)) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(ast.argument, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(ast.argument, retArr);\n        break;\n      default:\n        this.astGeneric(ast.argument, retArr);\n    }\n    retArr.push(')');\n    return retArr;\n  }\n\n  castLiteralToInteger(ast, retArr) {\n    this.pushState('casting-to-integer');\n    this.astGeneric(ast, retArr);\n    this.popState('casting-to-integer');\n    return retArr;\n  }\n\n  castLiteralToFloat(ast, retArr) {\n    this.pushState('casting-to-float');\n    this.astGeneric(ast, retArr);\n    this.popState('casting-to-float');\n    return retArr;\n  }\n\n  castValueToInteger(ast, retArr) {\n    this.pushState('casting-to-integer');\n    retArr.push('int(');\n    this.astGeneric(ast, retArr);\n    retArr.push(')');\n    this.popState('casting-to-integer');\n    return retArr;\n  }\n\n  castValueToFloat(ast, retArr) {\n    this.pushState('casting-to-float');\n    retArr.push('float(');\n    this.astGeneric(ast, retArr);\n    retArr.push(')');\n    this.popState('casting-to-float');\n    return retArr;\n  }\n\n  astIdentifierExpression(idtNode, retArr) {\n    if (idtNode.type !== 'Identifier') {\n      throw this.astErrorOutput('IdentifierExpression - not an Identifier', idtNode);\n    }\n\n    const type = this.getType(idtNode);\n\n    const name = utils.sanitizeName(idtNode.name);\n    if (idtNode.name === 'Infinity') {\n      retArr.push('3.402823466e+38');\n    } else if (type === 'Boolean') {\n      if (this.argumentNames.indexOf(name) > -1) {\n        retArr.push(`bool(user_${name})`);\n      } else {\n        retArr.push(`user_${name}`);\n      }\n    } else {\n      retArr.push(`user_${name}`);\n    }\n\n    return retArr;\n  }\n\n  astForStatement(forNode, retArr) {\n    if (forNode.type !== 'ForStatement') {\n      throw this.astErrorOutput('Invalid for statement', forNode);\n    }\n\n    const initArr = [];\n    const testArr = [];\n    const updateArr = [];\n    const bodyArr = [];\n    let isSafe = null;\n\n    if (forNode.init) {\n      const { declarations } = forNode.init;\n      if (declarations.length > 1) {\n        isSafe = false;\n      }\n      this.astGeneric(forNode.init, initArr);\n      for (let i = 0; i < declarations.length; i++) {\n        if (declarations[i].init && declarations[i].init.type !== 'Literal') {\n          isSafe = false;\n        }\n      }\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.test) {\n      this.astGeneric(forNode.test, testArr);\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.update) {\n      this.astGeneric(forNode.update, updateArr);\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.body) {\n      this.pushState('loop-body');\n      this.astGeneric(forNode.body, bodyArr);\n      this.popState('loop-body');\n    }\n\n    if (isSafe === null) {\n      isSafe = this.isSafe(forNode.init) && this.isSafe(forNode.test);\n    }\n\n    if (isSafe) {\n      const initString = initArr.join('');\n      const initNeedsSemiColon = initString[initString.length - 1] !== ';';\n      retArr.push(`for (${initString}${initNeedsSemiColon ? ';' : ''}${testArr.join('')};${updateArr.join('')}){\\n`);\n      retArr.push(bodyArr.join(''));\n      retArr.push('}\\n');\n    } else {\n      const iVariableName = this.getInternalVariableName('safeI');\n      if (initArr.length > 0) {\n        retArr.push(initArr.join(''), '\\n');\n      }\n      retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n      if (testArr.length > 0) {\n        retArr.push(`if (!${testArr.join('')}) break;\\n`);\n      }\n      retArr.push(bodyArr.join(''));\n      retArr.push(`\\n${updateArr.join('')};`);\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astWhileStatement(whileNode, retArr) {\n    if (whileNode.type !== 'WhileStatement') {\n      throw this.astErrorOutput('Invalid while statement', whileNode);\n    }\n\n    const iVariableName = this.getInternalVariableName('safeI');\n    retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n    retArr.push('if (!');\n    this.astGeneric(whileNode.test, retArr);\n    retArr.push(') break;\\n');\n    this.astGeneric(whileNode.body, retArr);\n    retArr.push('}\\n');\n\n    return retArr;\n  }\n\n  astDoWhileStatement(doWhileNode, retArr) {\n    if (doWhileNode.type !== 'DoWhileStatement') {\n      throw this.astErrorOutput('Invalid while statement', doWhileNode);\n    }\n\n    const iVariableName = this.getInternalVariableName('safeI');\n    retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n    this.astGeneric(doWhileNode.body, retArr);\n    retArr.push('if (!');\n    this.astGeneric(doWhileNode.test, retArr);\n    retArr.push(') break;\\n');\n    retArr.push('}\\n');\n\n    return retArr;\n  }\n\n\n  astAssignmentExpression(assNode, retArr) {\n    if (assNode.operator === '%=') {\n      this.astGeneric(assNode.left, retArr);\n      retArr.push('=');\n      retArr.push('mod(');\n      this.astGeneric(assNode.left, retArr);\n      retArr.push(',');\n      this.astGeneric(assNode.right, retArr);\n      retArr.push(')');\n    } else if (assNode.operator === '**=') {\n      this.astGeneric(assNode.left, retArr);\n      retArr.push('=');\n      retArr.push('pow(');\n      this.astGeneric(assNode.left, retArr);\n      retArr.push(',');\n      this.astGeneric(assNode.right, retArr);\n      retArr.push(')');\n    } else {\n      const leftType = this.getType(assNode.left);\n      const rightType = this.getType(assNode.right);\n      this.astGeneric(assNode.left, retArr);\n      retArr.push(assNode.operator);\n      if (leftType !== 'Integer' && rightType === 'Integer') {\n        retArr.push('float(');\n        this.astGeneric(assNode.right, retArr);\n        retArr.push(')');\n      } else {\n        this.astGeneric(assNode.right, retArr);\n      }\n      return retArr;\n    }\n  }\n\n  astBlockStatement(bNode, retArr) {\n    if (this.isState('loop-body')) {\n      this.pushState('block-body'); \n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      this.popState('block-body');\n    } else {\n      retArr.push('{\\n');\n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astVariableDeclaration(varDecNode, retArr) {\n    const declarations = varDecNode.declarations;\n    if (!declarations || !declarations[0] || !declarations[0].init) {\n      throw this.astErrorOutput('Unexpected expression', varDecNode);\n    }\n    const result = [];\n    let lastType = null;\n    const declarationSets = [];\n    let declarationSet = [];\n    for (let i = 0; i < declarations.length; i++) {\n      const declaration = declarations[i];\n      const init = declaration.init;\n      const info = this.getDeclaration(declaration.id);\n      const actualType = this.getType(declaration.init);\n      let type = actualType;\n      if (type === 'LiteralInteger') {\n        if (info.suggestedType === 'Integer') {\n          type = 'Integer';\n        } else {\n          type = 'Number';\n        }\n      }\n      const markupType = typeMap[type];\n      if (!markupType) {\n        throw this.astErrorOutput(`Markup type ${ type } not handled`, varDecNode);\n      }\n      const declarationResult = [];\n      if (actualType === 'Integer' && type === 'Integer') {\n        info.valueType = 'Number';\n        if (i === 0 || lastType === null) {\n          declarationResult.push('float ');\n        } else if (type !== lastType) {\n          throw new Error('Unhandled declaration');\n        }\n        lastType = type;\n        declarationResult.push(`user_${utils.sanitizeName(declaration.id.name)}=`);\n        declarationResult.push('float(');\n        this.astGeneric(init, declarationResult);\n        declarationResult.push(')');\n      } else {\n        info.valueType = type;\n        if (i === 0 || lastType === null) {\n          declarationResult.push(`${markupType} `);\n        } else if (type !== lastType) {\n          declarationSets.push(declarationSet.join(','));\n          declarationSet = [];\n          declarationResult.push(`${markupType} `);\n        }\n        lastType = type;\n        declarationResult.push(`user_${utils.sanitizeName(declaration.id.name)}=`);\n        if (actualType === 'Number' && type === 'Integer') {\n          if (init.left && init.left.type === 'Literal') {\n            this.astGeneric(init, declarationResult);\n          } else {\n            declarationResult.push('int(');\n            this.astGeneric(init, declarationResult);\n            declarationResult.push(')');\n          }\n        } else if (actualType === 'LiteralInteger' && type === 'Integer') {\n          this.castLiteralToInteger(init, declarationResult);\n        } else {\n          this.astGeneric(init, declarationResult);\n        }\n      }\n      declarationSet.push(declarationResult.join(''));\n    }\n\n    if (declarationSet.length > 0) {\n      declarationSets.push(declarationSet.join(','));\n    }\n\n    result.push(declarationSets.join(';'));\n\n    retArr.push(result.join(''));\n    retArr.push(';');\n    return retArr;\n  }\n\n  astIfStatement(ifNode, retArr) {\n    retArr.push('if (');\n    this.astGeneric(ifNode.test, retArr);\n    retArr.push(')');\n    if (ifNode.consequent.type === 'BlockStatement') {\n      this.astGeneric(ifNode.consequent, retArr);\n    } else {\n      retArr.push(' {\\n');\n      this.astGeneric(ifNode.consequent, retArr);\n      retArr.push('\\n}\\n');\n    }\n\n    if (ifNode.alternate) {\n      retArr.push('else ');\n      if (ifNode.alternate.type === 'BlockStatement' || ifNode.alternate.type === 'IfStatement') {\n        this.astGeneric(ifNode.alternate, retArr);\n      } else {\n        retArr.push(' {\\n');\n        this.astGeneric(ifNode.alternate, retArr);\n        retArr.push('\\n}\\n');\n      }\n    }\n    return retArr;\n  }\n\n  astSwitchStatement(ast, retArr) {\n    if (ast.type !== 'SwitchStatement') {\n      throw this.astErrorOutput('Invalid switch statement', ast);\n    }\n    const { discriminant, cases } = ast;\n    const type = this.getType(discriminant);\n    const varName = `switchDiscriminant${this.astKey(ast, '_')}`;\n    switch (type) {\n      case 'Float':\n      case 'Number':\n        retArr.push(`float ${varName} = `);\n        this.astGeneric(discriminant, retArr);\n        retArr.push(';\\n');\n        break;\n      case 'Integer':\n        retArr.push(`int ${varName} = `);\n        this.astGeneric(discriminant, retArr);\n        retArr.push(';\\n');\n        break;\n    }\n    if (cases.length === 1 && !cases[0].test) {\n      this.astGeneric(cases[0].consequent, retArr);\n      return retArr;\n    }\n\n    let fallingThrough = false;\n    let defaultResult = [];\n    let movingDefaultToEnd = false;\n    let pastFirstIf = false;\n    for (let i = 0; i < cases.length; i++) {\n      if (!cases[i].test) {\n        if (cases.length > i + 1) {\n          movingDefaultToEnd = true;\n          this.astGeneric(cases[i].consequent, defaultResult);\n          continue;\n        } else {\n          retArr.push(' else {\\n');\n        }\n      } else {\n        if (i === 0 || !pastFirstIf) {\n          pastFirstIf = true;\n          retArr.push(`if (${varName} == `);\n        } else {\n          if (fallingThrough) {\n            retArr.push(`${varName} == `);\n            fallingThrough = false;\n          } else {\n            retArr.push(` else if (${varName} == `);\n          }\n        }\n        if (type === 'Integer') {\n          const testType = this.getType(cases[i].test);\n          switch (testType) {\n            case 'Number':\n            case 'Float':\n              this.castValueToInteger(cases[i].test, retArr);\n              break;\n            case 'LiteralInteger':\n              this.castLiteralToInteger(cases[i].test, retArr);\n              break;\n          }\n        } else if (type === 'Float') {\n          const testType = this.getType(cases[i].test);\n          switch (testType) {\n            case 'LiteralInteger':\n              this.castLiteralToFloat(cases[i].test, retArr);\n              break;\n            case 'Integer':\n              this.castValueToFloat(cases[i].test, retArr);\n              break;\n          }\n        } else {\n          throw new Error('unhanlded');\n        }\n        if (!cases[i].consequent || cases[i].consequent.length === 0) {\n          fallingThrough = true;\n          retArr.push(' || ');\n          continue;\n        }\n        retArr.push(`) {\\n`);\n      }\n      this.astGeneric(cases[i].consequent, retArr);\n      retArr.push('\\n}');\n    }\n    if (movingDefaultToEnd) {\n      retArr.push(' else {');\n      retArr.push(defaultResult.join(''));\n      retArr.push('}');\n    }\n    return retArr;\n  }\n\n  astThisExpression(tNode, retArr) {\n    retArr.push('this');\n    return retArr;\n  }\n\n  astMemberExpression(mNode, retArr) {\n    const {\n      property,\n      name,\n      signature,\n      origin,\n      type,\n      xProperty,\n      yProperty,\n      zProperty\n    } = this.getMemberExpressionDetails(mNode);\n    switch (signature) {\n      case 'value.thread.value':\n      case 'this.thread.value':\n        if (name !== 'x' && name !== 'y' && name !== 'z') {\n          throw this.astErrorOutput('Unexpected expression, expected `this.thread.x`, `this.thread.y`, or `this.thread.z`', mNode);\n        }\n        retArr.push(`threadId.${name}`);\n        return retArr;\n      case 'this.output.value':\n        if (this.dynamicOutput) {\n          switch (name) {\n            case 'x':\n              if (this.isState('casting-to-float')) {\n                retArr.push('float(uOutputDim.x)');\n              } else {\n                retArr.push('uOutputDim.x');\n              }\n              break;\n            case 'y':\n              if (this.isState('casting-to-float')) {\n                retArr.push('float(uOutputDim.y)');\n              } else {\n                retArr.push('uOutputDim.y');\n              }\n              break;\n            case 'z':\n              if (this.isState('casting-to-float')) {\n                retArr.push('float(uOutputDim.z)');\n              } else {\n                retArr.push('uOutputDim.z');\n              }\n              break;\n            default:\n              throw this.astErrorOutput('Unexpected expression', mNode);\n          }\n        } else {\n          switch (name) {\n            case 'x':\n              if (this.isState('casting-to-integer')) {\n                retArr.push(this.output[0]);\n              } else {\n                retArr.push(this.output[0], '.0');\n              }\n              break;\n            case 'y':\n              if (this.isState('casting-to-integer')) {\n                retArr.push(this.output[1]);\n              } else {\n                retArr.push(this.output[1], '.0');\n              }\n              break;\n            case 'z':\n              if (this.isState('casting-to-integer')) {\n                retArr.push(this.output[2]);\n              } else {\n                retArr.push(this.output[2], '.0');\n              }\n              break;\n            default:\n              throw this.astErrorOutput('Unexpected expression', mNode);\n          }\n        }\n        return retArr;\n      case 'value':\n        throw this.astErrorOutput('Unexpected expression', mNode);\n      case 'value[]':\n      case 'value[][]':\n      case 'value[][][]':\n      case 'value[][][][]':\n      case 'value.value':\n        if (origin === 'Math') {\n          retArr.push(Math[name]);\n          return retArr;\n        }\n        const cleanName = utils.sanitizeName(name);\n        switch (property) {\n          case 'r':\n            retArr.push(`user_${ cleanName }.r`);\n            return retArr;\n          case 'g':\n            retArr.push(`user_${ cleanName }.g`);\n            return retArr;\n          case 'b':\n            retArr.push(`user_${ cleanName }.b`);\n            return retArr;\n          case 'a':\n            retArr.push(`user_${ cleanName }.a`);\n            return retArr;\n        }\n        break;\n      case 'this.constants.value':\n        if (typeof xProperty === 'undefined') {\n          switch (type) {\n            case 'Array(2)':\n            case 'Array(3)':\n            case 'Array(4)':\n              retArr.push(`constants_${ utils.sanitizeName(name) }`);\n              return retArr;\n          }\n        }\n        case 'this.constants.value[]':\n        case 'this.constants.value[][]':\n        case 'this.constants.value[][][]':\n        case 'this.constants.value[][][][]':\n          break;\n        case 'fn()[]':\n          this.astCallExpression(mNode.object, retArr);\n          retArr.push('[');\n          retArr.push(this.memberExpressionPropertyMarkup(property));\n          retArr.push(']');\n          return retArr;\n        case 'fn()[][]':\n          this.astCallExpression(mNode.object.object, retArr);\n          retArr.push('[');\n          retArr.push(this.memberExpressionPropertyMarkup(mNode.object.property));\n          retArr.push(']');\n          retArr.push('[');\n          retArr.push(this.memberExpressionPropertyMarkup(mNode.property));\n          retArr.push(']');\n          return retArr;\n        case '[][]':\n          this.astArrayExpression(mNode.object, retArr);\n          retArr.push('[');\n          retArr.push(this.memberExpressionPropertyMarkup(property));\n          retArr.push(']');\n          return retArr;\n        default:\n          throw this.astErrorOutput('Unexpected expression', mNode);\n    }\n\n    if (mNode.computed === false) {\n      switch (type) {\n        case 'Number':\n        case 'Integer':\n        case 'Float':\n        case 'Boolean':\n          retArr.push(`${origin}_${utils.sanitizeName(name)}`);\n          return retArr;\n      }\n    }\n\n    const markupName = `${origin}_${utils.sanitizeName(name)}`;\n\n    switch (type) {\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n        this.astGeneric(mNode.object, retArr);\n        retArr.push('[');\n        retArr.push(this.memberExpressionPropertyMarkup(xProperty));\n        retArr.push(']');\n        break;\n      case 'HTMLImageArray':\n        retArr.push(`getImage3D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(1)':\n        retArr.push(`getFloatFromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'Array1D(2)':\n      case 'Array2D(2)':\n      case 'Array3D(2)':\n        retArr.push(`getMemoryOptimizedVec2(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(2)':\n        retArr.push(`getVec2FromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'Array1D(3)':\n      case 'Array2D(3)':\n      case 'Array3D(3)':\n        retArr.push(`getMemoryOptimizedVec3(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(3)':\n        retArr.push(`getVec3FromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'Array1D(4)':\n      case 'Array2D(4)':\n      case 'Array3D(4)':\n        retArr.push(`getMemoryOptimizedVec4(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(4)':\n      case 'HTMLCanvas':\n      case 'OffscreenCanvas':\n      case 'HTMLImage':\n      case 'ImageBitmap':\n      case 'ImageData':\n      case 'HTMLVideo':\n        retArr.push(`getVec4FromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'NumberTexture':\n      case 'Array':\n      case 'Array2D':\n      case 'Array3D':\n      case 'Array4D':\n      case 'Input':\n      case 'Number':\n      case 'Float':\n      case 'Integer':\n        if (this.precision === 'single') {\n          retArr.push(`getMemoryOptimized32(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n          this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n          retArr.push(')');\n        } else {\n          const bitRatio = (origin === 'user' ?\n            this.lookupFunctionArgumentBitRatio(this.name, name) :\n            this.constantBitRatios[name]\n          );\n          switch (bitRatio) {\n            case 1:\n              retArr.push(`get8(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n              break;\n            case 2:\n              retArr.push(`get16(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n              break;\n            case 4:\n            case 0:\n              retArr.push(`get32(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n              break;\n            default:\n              throw new Error(`unhandled bit ratio of ${bitRatio}`);\n          }\n          this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n          retArr.push(')');\n        }\n        break;\n      case 'MemoryOptimizedNumberTexture':\n        retArr.push(`getMemoryOptimized32(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n        retArr.push(`${markupName}[${this.memberExpressionPropertyMarkup(yProperty)}]`);\n        if (yProperty) {\n          retArr.push(`[${this.memberExpressionPropertyMarkup(xProperty)}]`);\n        }\n        break;\n      default:\n        throw new Error(`unhandled member expression \"${ type }\"`);\n    }\n    return retArr;\n  }\n\n  astCallExpression(ast, retArr) {\n    if (!ast.callee) {\n      throw this.astErrorOutput('Unknown CallExpression', ast);\n    }\n\n    let functionName = null;\n    const isMathFunction = this.isAstMathFunction(ast);\n\n    if (isMathFunction || (ast.callee.object && ast.callee.object.type === 'ThisExpression')) {\n      functionName = ast.callee.property.name;\n    }\n    else if (ast.callee.type === 'SequenceExpression' && ast.callee.expressions[0].type === 'Literal' && !isNaN(ast.callee.expressions[0].raw)) {\n      functionName = ast.callee.expressions[1].property.name;\n    } else {\n      functionName = ast.callee.name;\n    }\n\n    if (!functionName) {\n      throw this.astErrorOutput(`Unhandled function, couldn't find name`, ast);\n    }\n\n    switch (functionName) {\n      case 'pow':\n        functionName = '_pow';\n        break;\n      case 'round':\n        functionName = '_round';\n        break;\n    }\n\n    if (this.calledFunctions.indexOf(functionName) < 0) {\n      this.calledFunctions.push(functionName);\n    }\n\n    if (functionName === 'random' && this.plugins && this.plugins.length > 0) {\n      for (let i = 0; i < this.plugins.length; i++) {\n        const plugin = this.plugins[i];\n        if (plugin.functionMatch === 'Math.random()' && plugin.functionReplace) {\n          retArr.push(plugin.functionReplace);\n          return retArr;\n        }\n      }\n    }\n\n    if (this.onFunctionCall) {\n      this.onFunctionCall(this.name, functionName, ast.arguments);\n    }\n\n    retArr.push(functionName);\n\n    retArr.push('(');\n\n    if (isMathFunction) {\n      for (let i = 0; i < ast.arguments.length; ++i) {\n        const argument = ast.arguments[i];\n        const argumentType = this.getType(argument);\n        if (i > 0) {\n          retArr.push(', ');\n        }\n\n        switch (argumentType) {\n          case 'Integer':\n            this.castValueToFloat(argument, retArr);\n            break;\n          default:\n            this.astGeneric(argument, retArr);\n            break;\n        }\n      }\n    } else {\n      const targetTypes = this.lookupFunctionArgumentTypes(functionName) || [];\n      for (let i = 0; i < ast.arguments.length; ++i) {\n        const argument = ast.arguments[i];\n        let targetType = targetTypes[i];\n        if (i > 0) {\n          retArr.push(', ');\n        }\n        const argumentType = this.getType(argument);\n        if (!targetType) {\n          this.triggerImplyArgumentType(functionName, i, argumentType, this);\n          targetType = argumentType;\n        }\n        switch (argumentType) {\n          case 'Boolean':\n            this.astGeneric(argument, retArr);\n            continue;\n          case 'Number':\n          case 'Float':\n            if (targetType === 'Integer') {\n              retArr.push('int(');\n              this.astGeneric(argument, retArr);\n              retArr.push(')');\n              continue;\n            } else if (targetType === 'Number' || targetType === 'Float') {\n              this.astGeneric(argument, retArr);\n              continue;\n            } else if (targetType === 'LiteralInteger') {\n              this.castLiteralToFloat(argument, retArr);\n              continue;\n            }\n            break;\n          case 'Integer':\n            if (targetType === 'Number' || targetType === 'Float') {\n              retArr.push('float(');\n              this.astGeneric(argument, retArr);\n              retArr.push(')');\n              continue;\n            } else if (targetType === 'Integer') {\n              this.astGeneric(argument, retArr);\n              continue;\n            }\n            break;\n          case 'LiteralInteger':\n            if (targetType === 'Integer') {\n              this.castLiteralToInteger(argument, retArr);\n              continue;\n            } else if (targetType === 'Number' || targetType === 'Float') {\n              this.castLiteralToFloat(argument, retArr);\n              continue;\n            } else if (targetType === 'LiteralInteger') {\n              this.astGeneric(argument, retArr);\n              continue;\n            }\n            break;\n          case 'Array(2)':\n          case 'Array(3)':\n          case 'Array(4)':\n            if (targetType === argumentType) {\n              if (argument.type === 'Identifier') {\n                retArr.push(`user_${utils.sanitizeName(argument.name)}`);\n              } else if (argument.type === 'ArrayExpression' || argument.type === 'MemberExpression' || argument.type === 'CallExpression') {\n                this.astGeneric(argument, retArr);\n              } else {\n                throw this.astErrorOutput(`Unhandled argument type ${ argument.type }`, ast);\n              }\n              continue;\n            }\n            break;\n          case 'HTMLCanvas':\n          case 'OffscreenCanvas':\n          case 'HTMLImage':\n          case 'ImageBitmap':\n          case 'ImageData':\n          case 'HTMLImageArray':\n          case 'HTMLVideo':\n          case 'ArrayTexture(1)':\n          case 'ArrayTexture(2)':\n          case 'ArrayTexture(3)':\n          case 'ArrayTexture(4)':\n          case 'Array':\n          case 'Input':\n            if (targetType === argumentType) {\n              if (argument.type !== 'Identifier') throw this.astErrorOutput(`Unhandled argument type ${ argument.type }`, ast);\n              this.triggerImplyArgumentBitRatio(this.name, argument.name, functionName, i);\n              const name = utils.sanitizeName(argument.name);\n              retArr.push(`user_${name},user_${name}Size,user_${name}Dim`);\n              continue;\n            }\n            break;\n        }\n        throw this.astErrorOutput(`Unhandled argument combination of ${ argumentType } and ${ targetType } for argument named \"${ argument.name }\"`, ast);\n      }\n    }\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  astArrayExpression(arrNode, retArr) {\n    const returnType = this.getType(arrNode);\n\n    const arrLen = arrNode.elements.length;\n\n    switch (returnType) {\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n        retArr.push(`mat${arrLen}(`);\n        break;\n      default:\n        retArr.push(`vec${arrLen}(`);\n    }\n    for (let i = 0; i < arrLen; ++i) {\n      if (i > 0) {\n        retArr.push(', ');\n      }\n      const subNode = arrNode.elements[i];\n      this.astGeneric(subNode, retArr)\n    }\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  memberExpressionXYZ(x, y, z, retArr) {\n    if (z) {\n      retArr.push(this.memberExpressionPropertyMarkup(z), ', ');\n    } else {\n      retArr.push('0, ');\n    }\n    if (y) {\n      retArr.push(this.memberExpressionPropertyMarkup(y), ', ');\n    } else {\n      retArr.push('0, ');\n    }\n    retArr.push(this.memberExpressionPropertyMarkup(x));\n    return retArr;\n  }\n\n  memberExpressionPropertyMarkup(property) {\n    if (!property) {\n      throw new Error('Property not set');\n    }\n    const type = this.getType(property);\n    const result = [];\n    switch (type) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(property, result);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(property, result);\n        break;\n      default:\n        this.astGeneric(property, result);\n    }\n    return result.join('');\n  }\n}\n\nconst typeMap = {\n  'Array': 'sampler2D',\n  'Array(2)': 'vec2',\n  'Array(3)': 'vec3',\n  'Array(4)': 'vec4',\n  'Matrix(2)': 'mat2',\n  'Matrix(3)': 'mat3',\n  'Matrix(4)': 'mat4',\n  'Array2D': 'sampler2D',\n  'Array3D': 'sampler2D',\n  'Boolean': 'bool',\n  'Float': 'float',\n  'Input': 'sampler2D',\n  'Integer': 'int',\n  'Number': 'float',\n  'LiteralInteger': 'float',\n  'NumberTexture': 'sampler2D',\n  'MemoryOptimizedNumberTexture': 'sampler2D',\n  'ArrayTexture(1)': 'sampler2D',\n  'ArrayTexture(2)': 'sampler2D',\n  'ArrayTexture(3)': 'sampler2D',\n  'ArrayTexture(4)': 'sampler2D',\n  'HTMLVideo': 'sampler2D',\n  'HTMLCanvas': 'sampler2D',\n  'OffscreenCanvas': 'sampler2D',\n  'HTMLImage': 'sampler2D',\n  'ImageBitmap': 'sampler2D',\n  'ImageData': 'sampler2D',\n  'HTMLImageArray': 'sampler2DArray',\n};\n\nconst operatorMap = {\n  '===': '==',\n  '!==': '!='\n};\n\nmodule.exports = {\n  WebGLFunctionNode\n};\n},{\"../../utils\":114,\"../function-node\":10}],39:[function(require,module,exports){\nconst { WebGLKernelValueBoolean } = require('./kernel-value/boolean');\nconst { WebGLKernelValueFloat } = require('./kernel-value/float');\nconst { WebGLKernelValueInteger } = require('./kernel-value/integer');\n\nconst { WebGLKernelValueHTMLImage } = require('./kernel-value/html-image');\nconst { WebGLKernelValueDynamicHTMLImage } = require('./kernel-value/dynamic-html-image');\n\nconst { WebGLKernelValueHTMLVideo } = require('./kernel-value/html-video');\nconst { WebGLKernelValueDynamicHTMLVideo } = require('./kernel-value/dynamic-html-video');\n\nconst { WebGLKernelValueSingleInput } = require('./kernel-value/single-input');\nconst { WebGLKernelValueDynamicSingleInput } = require('./kernel-value/dynamic-single-input');\n\nconst { WebGLKernelValueUnsignedInput } = require('./kernel-value/unsigned-input');\nconst { WebGLKernelValueDynamicUnsignedInput } = require('./kernel-value/dynamic-unsigned-input');\n\nconst { WebGLKernelValueMemoryOptimizedNumberTexture } = require('./kernel-value/memory-optimized-number-texture');\nconst { WebGLKernelValueDynamicMemoryOptimizedNumberTexture } = require('./kernel-value/dynamic-memory-optimized-number-texture');\n\nconst { WebGLKernelValueNumberTexture } = require('./kernel-value/number-texture');\nconst { WebGLKernelValueDynamicNumberTexture } = require('./kernel-value/dynamic-number-texture');\n\nconst { WebGLKernelValueSingleArray } = require('./kernel-value/single-array');\nconst { WebGLKernelValueDynamicSingleArray } = require('./kernel-value/dynamic-single-array');\n\nconst { WebGLKernelValueSingleArray1DI } = require('./kernel-value/single-array1d-i');\nconst { WebGLKernelValueDynamicSingleArray1DI } = require('./kernel-value/dynamic-single-array1d-i');\n\nconst { WebGLKernelValueSingleArray2DI } = require('./kernel-value/single-array2d-i');\nconst { WebGLKernelValueDynamicSingleArray2DI } = require('./kernel-value/dynamic-single-array2d-i');\n\nconst { WebGLKernelValueSingleArray3DI } = require('./kernel-value/single-array3d-i');\nconst { WebGLKernelValueDynamicSingleArray3DI } = require('./kernel-value/dynamic-single-array3d-i');\n\nconst { WebGLKernelValueArray2 } = require('./kernel-value/array2');\nconst { WebGLKernelValueArray3 } = require('./kernel-value/array3');\nconst { WebGLKernelValueArray4 } = require('./kernel-value/array4');\n\nconst { WebGLKernelValueUnsignedArray } = require('./kernel-value/unsigned-array');\nconst { WebGLKernelValueDynamicUnsignedArray } = require('./kernel-value/dynamic-unsigned-array');\n\nconst kernelValueMaps = {\n  unsigned: {\n    dynamic: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Integer': WebGLKernelValueInteger,\n      'Float': WebGLKernelValueFloat,\n      'Array': WebGLKernelValueDynamicUnsignedArray,\n      'Array(2)': WebGLKernelValueArray2,\n      'Array(3)': WebGLKernelValueArray3,\n      'Array(4)': WebGLKernelValueArray4,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGLKernelValueDynamicUnsignedInput,\n      'NumberTexture': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGLKernelValueDynamicHTMLImage,\n      'OffscreenCanvas': WebGLKernelValueDynamicHTMLImage,\n      'HTMLImage': WebGLKernelValueDynamicHTMLImage,\n      'ImageBitmap': WebGLKernelValueDynamicHTMLImage,\n      'ImageData': WebGLKernelValueDynamicHTMLImage,\n      'HTMLImageArray': false,\n      'HTMLVideo': WebGLKernelValueDynamicHTMLVideo,\n    },\n    static: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Float': WebGLKernelValueFloat,\n      'Integer': WebGLKernelValueInteger,\n      'Array': WebGLKernelValueUnsignedArray,\n      'Array(2)': WebGLKernelValueArray2,\n      'Array(3)': WebGLKernelValueArray3,\n      'Array(4)': WebGLKernelValueArray4,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGLKernelValueUnsignedInput,\n      'NumberTexture': WebGLKernelValueNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGLKernelValueHTMLImage,\n      'OffscreenCanvas': WebGLKernelValueHTMLImage,\n      'HTMLImage': WebGLKernelValueHTMLImage,\n      'ImageBitmap': WebGLKernelValueHTMLImage,\n      'ImageData': WebGLKernelValueHTMLImage,\n      'HTMLImageArray': false,\n      'HTMLVideo': WebGLKernelValueHTMLVideo,\n    }\n  },\n  single: {\n    dynamic: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Integer': WebGLKernelValueInteger,\n      'Float': WebGLKernelValueFloat,\n      'Array': WebGLKernelValueDynamicSingleArray,\n      'Array(2)': WebGLKernelValueArray2,\n      'Array(3)': WebGLKernelValueArray3,\n      'Array(4)': WebGLKernelValueArray4,\n      'Array1D(2)': WebGLKernelValueDynamicSingleArray1DI,\n      'Array1D(3)': WebGLKernelValueDynamicSingleArray1DI,\n      'Array1D(4)': WebGLKernelValueDynamicSingleArray1DI,\n      'Array2D(2)': WebGLKernelValueDynamicSingleArray2DI,\n      'Array2D(3)': WebGLKernelValueDynamicSingleArray2DI,\n      'Array2D(4)': WebGLKernelValueDynamicSingleArray2DI,\n      'Array3D(2)': WebGLKernelValueDynamicSingleArray3DI,\n      'Array3D(3)': WebGLKernelValueDynamicSingleArray3DI,\n      'Array3D(4)': WebGLKernelValueDynamicSingleArray3DI,\n      'Input': WebGLKernelValueDynamicSingleInput,\n      'NumberTexture': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGLKernelValueDynamicHTMLImage,\n      'OffscreenCanvas': WebGLKernelValueDynamicHTMLImage,\n      'HTMLImage': WebGLKernelValueDynamicHTMLImage,\n      'ImageBitmap': WebGLKernelValueDynamicHTMLImage,\n      'ImageData': WebGLKernelValueDynamicHTMLImage,\n      'HTMLImageArray': false,\n      'HTMLVideo': WebGLKernelValueDynamicHTMLVideo,\n    },\n    static: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Float': WebGLKernelValueFloat,\n      'Integer': WebGLKernelValueInteger,\n      'Array': WebGLKernelValueSingleArray,\n      'Array(2)': WebGLKernelValueArray2,\n      'Array(3)': WebGLKernelValueArray3,\n      'Array(4)': WebGLKernelValueArray4,\n      'Array1D(2)': WebGLKernelValueSingleArray1DI,\n      'Array1D(3)': WebGLKernelValueSingleArray1DI,\n      'Array1D(4)': WebGLKernelValueSingleArray1DI,\n      'Array2D(2)': WebGLKernelValueSingleArray2DI,\n      'Array2D(3)': WebGLKernelValueSingleArray2DI,\n      'Array2D(4)': WebGLKernelValueSingleArray2DI,\n      'Array3D(2)': WebGLKernelValueSingleArray3DI,\n      'Array3D(3)': WebGLKernelValueSingleArray3DI,\n      'Array3D(4)': WebGLKernelValueSingleArray3DI,\n      'Input': WebGLKernelValueSingleInput,\n      'NumberTexture': WebGLKernelValueNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGLKernelValueHTMLImage,\n      'OffscreenCanvas': WebGLKernelValueHTMLImage,\n      'HTMLImage': WebGLKernelValueHTMLImage,\n      'ImageBitmap': WebGLKernelValueHTMLImage,\n      'ImageData': WebGLKernelValueHTMLImage,\n      'HTMLImageArray': false,\n      'HTMLVideo': WebGLKernelValueHTMLVideo,\n    }\n  },\n};\n\nfunction lookupKernelValueType(type, dynamic, precision, value) {\n  if (!type) {\n    throw new Error('type missing');\n  }\n  if (!dynamic) {\n    throw new Error('dynamic missing');\n  }\n  if (!precision) {\n    throw new Error('precision missing');\n  }\n  if (value.type) {\n    type = value.type;\n  }\n  const types = kernelValueMaps[precision][dynamic];\n  if (types[type] === false) {\n    return null;\n  } else if (types[type] === undefined) {\n    throw new Error(`Could not find a KernelValue for ${ type }`);\n  }\n  return types[type];\n}\n\nmodule.exports = {\n  lookupKernelValueType,\n  kernelValueMaps,\n};\n},{\"./kernel-value/array2\":41,\"./kernel-value/array3\":42,\"./kernel-value/array4\":43,\"./kernel-value/boolean\":44,\"./kernel-value/dynamic-html-image\":45,\"./kernel-value/dynamic-html-video\":46,\"./kernel-value/dynamic-memory-optimized-number-texture\":47,\"./kernel-value/dynamic-number-texture\":48,\"./kernel-value/dynamic-single-array\":49,\"./kernel-value/dynamic-single-array1d-i\":50,\"./kernel-value/dynamic-single-array2d-i\":51,\"./kernel-value/dynamic-single-array3d-i\":52,\"./kernel-value/dynamic-single-input\":53,\"./kernel-value/dynamic-unsigned-array\":54,\"./kernel-value/dynamic-unsigned-input\":55,\"./kernel-value/float\":56,\"./kernel-value/html-image\":57,\"./kernel-value/html-video\":58,\"./kernel-value/integer\":60,\"./kernel-value/memory-optimized-number-texture\":61,\"./kernel-value/number-texture\":62,\"./kernel-value/single-array\":63,\"./kernel-value/single-array1d-i\":64,\"./kernel-value/single-array2d-i\":65,\"./kernel-value/single-array3d-i\":66,\"./kernel-value/single-input\":67,\"./kernel-value/unsigned-array\":68,\"./kernel-value/unsigned-input\":69}],40:[function(require,module,exports){\nconst { WebGLKernelValue } = require('./index');\nconst { Input } = require('../../../input');\n\nclass WebGLKernelArray extends WebGLKernelValue {\n  checkSize(width, height) {\n    if (!this.kernel.validate) return;\n    const { maxTextureSize } = this.kernel.constructor.features;\n    if (width > maxTextureSize || height > maxTextureSize) {\n      if (width > height) {\n        throw new Error(`Argument texture width of ${width} larger than maximum size of ${maxTextureSize} for your GPU`);\n      } else if (width < height) {\n        throw new Error(`Argument texture height of ${height} larger than maximum size of ${maxTextureSize} for your GPU`);\n      } else {\n        throw new Error(`Argument texture height and width of ${height} larger than maximum size of ${maxTextureSize} for your GPU`);\n      }\n    }\n  }\n\n  setup() {\n    this.requestTexture();\n    this.setupTexture();\n    this.defineTexture();\n  }\n\n  requestTexture() {\n    this.texture = this.onRequestTexture();\n  }\n\n  defineTexture() {\n    const { context: gl } = this;\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n  }\n\n  setupTexture() {\n    this.contextHandle = this.onRequestContextHandle();\n    this.index = this.onRequestIndex();\n    this.dimensionsId = this.id + 'Dim';\n    this.sizeId = this.id + 'Size';\n  }\n\n  getBitRatio(value) {\n    if (Array.isArray(value[0])) {\n      return this.getBitRatio(value[0]);\n    } else if (value.constructor === Input) {\n      return this.getBitRatio(value.value);\n    }\n    switch (value.constructor) {\n      case Uint8ClampedArray:\n      case Uint8Array:\n      case Int8Array:\n        return 1;\n      case Uint16Array:\n      case Int16Array:\n        return 2;\n      case Float32Array:\n      case Int32Array:\n      default:\n        return 4;\n    }\n  }\n\n  destroy() {\n    if (this.prevArg) {\n      this.prevArg.delete();\n    }\n    this.context.deleteTexture(this.texture);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelArray\n};\n},{\"../../../input\":110,\"./index\":59}],41:[function(require,module,exports){\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueArray2 extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const vec2 ${this.id} = vec2(${value[0]},${value[1]});\\n`;\n    }\n    return `uniform vec2 ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    if (this.origin === 'constants') return '';\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform2fv(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueArray2\n};\n},{\"./index\":59}],42:[function(require,module,exports){\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueArray3 extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const vec3 ${this.id} = vec3(${value[0]},${value[1]},${value[2]});\\n`;\n    }\n    return `uniform vec3 ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    if (this.origin === 'constants') return '';\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform3fv(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueArray3\n};\n},{\"./index\":59}],43:[function(require,module,exports){\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueArray4 extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const vec4 ${this.id} = vec4(${value[0]},${value[1]},${value[2]},${value[3]});\\n`;\n    }\n    return `uniform vec4 ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    if (this.origin === 'constants') return '';\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform4fv(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueArray4\n};\n},{\"./index\":59}],44:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueBoolean extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const bool ${this.id} = ${value};\\n`;\n    }\n    return `uniform bool ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1i(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueBoolean\n};\n},{\"../../../utils\":114,\"./index\":59}],45:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueHTMLImage } = require('./html-image');\n\nclass WebGLKernelValueDynamicHTMLImage extends WebGLKernelValueHTMLImage {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    const { width, height } = value;\n    this.checkSize(width, height);\n    this.dimensions = [width, height, 1];\n    this.textureSize = [width, height];\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicHTMLImage\n};\n},{\"../../../utils\":114,\"./html-image\":57}],46:[function(require,module,exports){\nconst { WebGLKernelValueDynamicHTMLImage } = require('./dynamic-html-image');\n\nclass WebGLKernelValueDynamicHTMLVideo extends WebGLKernelValueDynamicHTMLImage {}\n\nmodule.exports = {\n  WebGLKernelValueDynamicHTMLVideo\n};\n},{\"./dynamic-html-image\":45}],47:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueMemoryOptimizedNumberTexture } = require('./memory-optimized-number-texture');\n\nclass WebGLKernelValueDynamicMemoryOptimizedNumberTexture extends WebGLKernelValueMemoryOptimizedNumberTexture {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(inputTexture) {\n    this.dimensions = inputTexture.dimensions;\n    this.checkSize(inputTexture.size[0], inputTexture.size[1]);\n    this.textureSize = inputTexture.size;\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(inputTexture);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicMemoryOptimizedNumberTexture\n};\n},{\"../../../utils\":114,\"./memory-optimized-number-texture\":61}],48:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueNumberTexture } = require('./number-texture');\n\nclass WebGLKernelValueDynamicNumberTexture extends WebGLKernelValueNumberTexture {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = value.dimensions;\n    this.checkSize(value.size[0], value.size[1]);\n    this.textureSize = value.size;\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicNumberTexture\n};\n},{\"../../../utils\":114,\"./number-texture\":62}],49:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray } = require('./single-array');\n\nclass WebGLKernelValueDynamicSingleArray extends WebGLKernelValueSingleArray {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray\n};\n},{\"../../../utils\":114,\"./single-array\":63}],50:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray1DI } = require('./single-array1d-i');\n\nclass WebGLKernelValueDynamicSingleArray1DI extends WebGLKernelValueSingleArray1DI {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray1DI\n};\n},{\"../../../utils\":114,\"./single-array1d-i\":64}],51:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray2DI } = require('./single-array2d-i');\n\nclass WebGLKernelValueDynamicSingleArray2DI extends WebGLKernelValueSingleArray2DI {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray2DI\n};\n},{\"../../../utils\":114,\"./single-array2d-i\":65}],52:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray3DI } = require('./single-array3d-i');\n\nclass WebGLKernelValueDynamicSingleArray3DI extends WebGLKernelValueSingleArray3DI {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray3DI\n};\n},{\"../../../utils\":114,\"./single-array3d-i\":66}],53:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleInput } = require('./single-input');\n\nclass WebGLKernelValueDynamicSingleInput extends WebGLKernelValueSingleInput {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleInput\n};\n},{\"../../../utils\":114,\"./single-input\":67}],54:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedArray } = require('./unsigned-array');\n\nclass WebGLKernelValueDynamicUnsignedArray extends WebGLKernelValueUnsignedArray {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    const Type = this.getTransferArrayType(value);\n    this.preUploadValue = new Type(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicUnsignedArray\n};\n},{\"../../../utils\":114,\"./unsigned-array\":68}],55:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedInput } = require('./unsigned-input');\n\nclass WebGLKernelValueDynamicUnsignedInput extends WebGLKernelValueUnsignedInput {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    const Type = this.getTransferArrayType(value.value);\n    this.preUploadValue = new Type(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicUnsignedInput\n};\n},{\"../../../utils\":114,\"./unsigned-input\":69}],56:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueFloat extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      if (Number.isInteger(value)) {\n        return `const float ${this.id} = ${value}.0;\\n`;\n      }\n      return `const float ${this.id} = ${value};\\n`;\n    }\n    return `uniform float ${this.id};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1f(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueFloat\n};\n},{\"../../../utils\":114,\"./index\":59}],57:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueHTMLImage extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    const { width, height } = value;\n    this.checkSize(width, height);\n    this.dimensions = [width, height, 1];\n    this.textureSize = [width, height];\n    this.uploadValue = value;\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(inputImage) {\n    if (inputImage.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(inputImage.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue = inputImage);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueHTMLImage\n};\n},{\"../../../utils\":114,\"./array\":40}],58:[function(require,module,exports){\nconst { WebGLKernelValueHTMLImage } = require('./html-image');\n\nclass WebGLKernelValueHTMLVideo extends WebGLKernelValueHTMLImage {}\n\nmodule.exports = {\n  WebGLKernelValueHTMLVideo\n};\n},{\"./html-image\":57}],59:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { KernelValue } = require('../../kernel-value');\n\nclass WebGLKernelValue extends KernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.dimensionsId = null;\n    this.sizeId = null;\n    this.initialValueConstructor = value.constructor;\n    this.onRequestTexture = settings.onRequestTexture;\n    this.onRequestIndex = settings.onRequestIndex;\n    this.uploadValue = null;\n    this.textureSize = null;\n    this.bitRatio = null;\n    this.prevArg = null;\n  }\n\n  get id() {\n    return `${this.origin}_${utils.sanitizeName(this.name)}`;\n  }\n\n  setup() {}\n\n  getTransferArrayType(value) {\n    if (Array.isArray(value[0])) {\n      return this.getTransferArrayType(value[0]);\n    }\n    switch (value.constructor) {\n      case Array:\n      case Int32Array:\n      case Int16Array:\n      case Int8Array:\n        return Float32Array;\n      case Uint8ClampedArray:\n      case Uint8Array:\n      case Uint16Array:\n      case Uint32Array:\n      case Float32Array:\n      case Float64Array:\n        return value.constructor;\n    }\n    console.warn('Unfamiliar constructor type.  Will go ahead and use, but likley this may result in a transfer of zeros');\n    return value.constructor;\n  }\n\n  getStringValueHandler() {\n    throw new Error(`\"getStringValueHandler\" not implemented on ${this.constructor.name}`);\n  }\n\n  getVariablePrecisionString() {\n    return this.kernel.getVariablePrecisionString(this.textureSize || undefined, this.tactic || undefined);\n  }\n\n  destroy() {}\n}\n\nmodule.exports = {\n  WebGLKernelValue\n};\n},{\"../../../utils\":114,\"../../kernel-value\":35}],60:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueInteger extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const int ${this.id} = ${ parseInt(value) };\\n`;\n    }\n    return `uniform int ${this.id};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1i(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueInteger\n};\n},{\"../../../utils\":114,\"./index\":59}],61:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nconst sameError = `Source and destination textures are the same.  Use immutable = true and manually cleanup kernel output texture memory with texture.delete()`;\n\nclass WebGLKernelValueMemoryOptimizedNumberTexture extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    const [width, height] = value.size;\n    this.checkSize(width, height);\n    this.dimensions = value.dimensions;\n    this.textureSize = value.size;\n    this.uploadValue = value.texture;\n    this.forceUploadEachRun = true;\n  }\n\n  setup() {\n    this.setupTexture();\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName}.texture;\\n`;\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(inputTexture) {\n    if (inputTexture.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(inputTexture.constructor);\n      return;\n    }\n    if (this.checkContext && inputTexture.context !== this.context) {\n      throw new Error(`Value ${this.name} (${this.type}) must be from same context`);\n    }\n\n    const { kernel, context: gl } = this;\n    if (kernel.pipeline) {\n      if (kernel.immutable) {\n        kernel.updateTextureArgumentRefs(this, inputTexture);\n      } else {\n        if (kernel.texture && kernel.texture.texture === inputTexture.texture) {\n          throw new Error(sameError);\n        } else if (kernel.mappedTextures) {\n          const { mappedTextures } = kernel;\n          for (let i = 0; i < mappedTextures.length; i++) {\n            if (mappedTextures[i].texture === inputTexture.texture) {\n              throw new Error(sameError);\n            }\n          }\n        }\n      }\n    }\n\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.uploadValue = inputTexture.texture);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueMemoryOptimizedNumberTexture,\n  sameError\n};\n},{\"../../../utils\":114,\"./array\":40}],62:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\nconst { sameError } = require('./memory-optimized-number-texture');\n\nclass WebGLKernelValueNumberTexture extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    const [width, height] = value.size;\n    this.checkSize(width, height);\n    const { size: textureSize, dimensions } = value;\n    this.bitRatio = this.getBitRatio(value);\n    this.dimensions = dimensions;\n    this.textureSize = textureSize;\n    this.uploadValue = value.texture;\n    this.forceUploadEachRun = true;\n  }\n\n  setup() {\n    this.setupTexture();\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName}.texture;\\n`;\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(inputTexture) {\n    if (inputTexture.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(inputTexture.constructor);\n      return;\n    }\n    if (this.checkContext && inputTexture.context !== this.context) {\n      throw new Error(`Value ${this.name} (${this.type}) must be from same context`);\n    }\n\n    const { kernel, context: gl } = this;\n    if (kernel.pipeline) {\n      if (kernel.immutable) {\n        kernel.updateTextureArgumentRefs(this, inputTexture);\n      } else {\n        if (kernel.texture && kernel.texture.texture === inputTexture.texture) {\n          throw new Error(sameError);\n        } else if (kernel.mappedTextures) {\n          const { mappedTextures } = kernel;\n          for (let i = 0; i < mappedTextures.length; i++) {\n            if (mappedTextures[i].texture === inputTexture.texture) {\n              throw new Error(sameError);\n            }\n          }\n        }\n      }\n    }\n\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.uploadValue = inputTexture.texture);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueNumberTexture\n};\n},{\"../../../utils\":114,\"./array\":40,\"./memory-optimized-number-texture\":61}],63:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueSingleArray extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = 4;\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray\n};\n},{\"../../../utils\":114,\"./array\":40}],64:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueSingleArray1DI extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = 4;\n    this.setShape(value);\n  }\n\n  setShape(value) {\n    const valueDimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\n    this.dimensions = new Int32Array([valueDimensions[1], 1, 1]);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flatten2dArrayTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray1DI\n};\n},{\"../../../utils\":114,\"./array\":40}],65:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueSingleArray2DI extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = 4;\n    this.setShape(value);\n  }\n\n  setShape(value) {\n    const valueDimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\n    this.dimensions = new Int32Array([valueDimensions[1], valueDimensions[2], 1]);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flatten3dArrayTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray2DI\n};\n},{\"../../../utils\":114,\"./array\":40}],66:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueSingleArray3DI extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = 4;\n    this.setShape(value);\n  }\n\n  setShape(value) {\n    const valueDimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\n    this.dimensions = new Int32Array([valueDimensions[1], valueDimensions[2], valueDimensions[3]]);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flatten4dArrayTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray3DI\n};\n},{\"../../../utils\":114,\"./array\":40}],67:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueSingleInput extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = 4;\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}.value, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(input) {\n    if (input.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(input.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(input.value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleInput\n};\n},{\"../../../utils\":114,\"./array\":40}],68:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueUnsignedArray extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = this.getBitRatio(value);\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.TranserArrayType = this.getTransferArrayType(value);\n    this.preUploadValue = new this.TranserArrayType(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const preUploadValue_${this.name} = new ${this.TranserArrayType.name}(${this.uploadArrayLength})`,\n      `const uploadValue_${this.name} = new Uint8Array(preUploadValue_${this.name}.buffer)`,\n      `flattenTo(${this.varName}, preUploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.preUploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueUnsignedArray\n};\n},{\"../../../utils\":114,\"./array\":40}],69:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueUnsignedInput extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = this.getBitRatio(value);\n    const [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.TranserArrayType = this.getTransferArrayType(value.value);\n    this.preUploadValue = new this.TranserArrayType(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const preUploadValue_${this.name} = new ${this.TranserArrayType.name}(${this.uploadArrayLength})`,\n      `const uploadValue_${this.name} = new Uint8Array(preUploadValue_${this.name}.buffer)`,\n      `flattenTo(${this.varName}.value, preUploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(input) {\n    if (input.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(input.value, this.preUploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueUnsignedInput\n};\n},{\"../../../utils\":114,\"./array\":40}],70:[function(require,module,exports){\nconst { GLKernel } = require('../gl/kernel');\nconst { FunctionBuilder } = require('../function-builder');\nconst { WebGLFunctionNode } = require('./function-node');\nconst { utils } = require('../../utils');\nconst mrud = require('../../plugins/math-random-uniformly-distributed');\nconst { fragmentShader } = require('./fragment-shader');\nconst { vertexShader } = require('./vertex-shader');\nconst { glKernelString } = require('../gl/kernel-string');\nconst { lookupKernelValueType } = require('./kernel-value-maps');\n\nlet isSupported = null;\nlet testCanvas = null;\nlet testContext = null;\nlet testExtensions = null;\nlet features = null;\n\nconst plugins = [mrud];\nconst canvases = [];\nconst maxTexSizes = {};\n\n\nclass WebGLKernel extends GLKernel {\n  static get isSupported() {\n    if (isSupported !== null) {\n      return isSupported;\n    }\n    this.setupFeatureChecks();\n    isSupported = this.isContextMatch(testContext);\n    return isSupported;\n  }\n\n  static setupFeatureChecks() {\n    if (typeof document !== 'undefined') {\n      testCanvas = document.createElement('canvas');\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      testCanvas = new OffscreenCanvas(0, 0);\n    }\n    if (!testCanvas) return;\n    testContext = testCanvas.getContext('webgl') || testCanvas.getContext('experimental-webgl');\n    if (!testContext || !testContext.getExtension) return;\n    testExtensions = {\n      OES_texture_float: testContext.getExtension('OES_texture_float'),\n      OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear'),\n      OES_element_index_uint: testContext.getExtension('OES_element_index_uint'),\n      WEBGL_draw_buffers: testContext.getExtension('WEBGL_draw_buffers'),\n    };\n    features = this.getFeatures();\n  }\n\n  static isContextMatch(context) {\n    if (typeof WebGLRenderingContext !== 'undefined') {\n      return context instanceof WebGLRenderingContext;\n    }\n    return false;\n  }\n\n  static getIsTextureFloat() {\n    return Boolean(testExtensions.OES_texture_float);\n  }\n\n  static getIsDrawBuffers() {\n    return Boolean(testExtensions.WEBGL_draw_buffers);\n  }\n\n  static getChannelCount() {\n    return testExtensions.WEBGL_draw_buffers ?\n      testContext.getParameter(testExtensions.WEBGL_draw_buffers.MAX_DRAW_BUFFERS_WEBGL) :\n      1;\n  }\n\n  static getMaxTextureSize() {\n    return testContext.getParameter(testContext.MAX_TEXTURE_SIZE);\n  }\n\n  static lookupKernelValueType(type, dynamic, precision, value) {\n    return lookupKernelValueType(type, dynamic, precision, value);\n  }\n\n  static get testCanvas() {\n    return testCanvas;\n  }\n\n  static get testContext() {\n    return testContext;\n  }\n\n  static get features() {\n    return features;\n  }\n\n  static get fragmentShader() {\n    return fragmentShader;\n  }\n\n  static get vertexShader() {\n    return vertexShader;\n  }\n\n  constructor(source, settings) {\n    super(source, settings);\n    this.program = null;\n    this.pipeline = settings.pipeline;\n    this.endianness = utils.systemEndianness();\n    this.extensions = {};\n    this.argumentTextureCount = 0;\n    this.constantTextureCount = 0;\n    this.fragShader = null;\n    this.vertShader = null;\n    this.drawBuffersMap = null;\n\n    this.maxTexSize = null;\n    this.onRequestSwitchKernel = null;\n\n    this.texture = null;\n    this.mappedTextures = null;\n    this.mergeSettings(source.settings || settings);\n\n    this.threadDim = null;\n    this.framebuffer = null;\n    this.buffer = null;\n\n    this.textureCache = [];\n    this.programUniformLocationCache = {};\n    this.uniform1fCache = {};\n    this.uniform1iCache = {};\n    this.uniform2fCache = {};\n    this.uniform2fvCache = {};\n    this.uniform2ivCache = {};\n    this.uniform3fvCache = {};\n    this.uniform3ivCache = {};\n    this.uniform4fvCache = {};\n    this.uniform4ivCache = {};\n  }\n\n  initCanvas() {\n    if (typeof document !== 'undefined') {\n      const canvas = document.createElement('canvas');\n      canvas.width = 2;\n      canvas.height = 2;\n      return canvas;\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      return new OffscreenCanvas(0, 0);\n    }\n  }\n\n  initContext() {\n    const settings = {\n      alpha: false,\n      depth: false,\n      antialias: false\n    };\n    return this.canvas.getContext('webgl', settings) || this.canvas.getContext('experimental-webgl', settings);\n  }\n\n  initPlugins(settings) {\n    const pluginsToUse = [];\n    const { source } = this;\n    if (typeof source === 'string') {\n      for (let i = 0; i < plugins.length; i++) {\n        const plugin = plugins[i];\n        if (source.match(plugin.functionMatch)) {\n          pluginsToUse.push(plugin);\n        }\n      }\n    } else if (typeof source === 'object') {\n      if (settings.pluginNames) { \n        for (let i = 0; i < plugins.length; i++) {\n          const plugin = plugins[i];\n          const usePlugin = settings.pluginNames.some(pluginName => pluginName === plugin.name);\n          if (usePlugin) {\n            pluginsToUse.push(plugin);\n          }\n        }\n      }\n    }\n    return pluginsToUse;\n  }\n\n  initExtensions() {\n    this.extensions = {\n      OES_texture_float: this.context.getExtension('OES_texture_float'),\n      OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear'),\n      OES_element_index_uint: this.context.getExtension('OES_element_index_uint'),\n      WEBGL_draw_buffers: this.context.getExtension('WEBGL_draw_buffers'),\n      WEBGL_color_buffer_float: this.context.getExtension('WEBGL_color_buffer_float'),\n    };\n  }\n\n  validateSettings(args) {\n    if (!this.validate) {\n      this.texSize = utils.getKernelTextureSize({\n        optimizeFloatMemory: this.optimizeFloatMemory,\n        precision: this.precision,\n      }, this.output);\n      return;\n    }\n\n    const { features } = this.constructor;\n\n    if (this.optimizeFloatMemory === true && !features.isTextureFloat) {\n      throw new Error('Float textures are not supported');\n    } else if (this.precision === 'single' && !features.isFloatRead) {\n      throw new Error('Single precision not supported');\n    } else if (!this.graphical && this.precision === null && features.isTextureFloat) {\n      this.precision = features.isFloatRead ? 'single' : 'unsigned';\n    }\n\n    if (this.subKernels && this.subKernels.length > 0 && !this.extensions.WEBGL_draw_buffers) {\n      throw new Error('could not instantiate draw buffers extension');\n    }\n\n    if (this.fixIntegerDivisionAccuracy === null) {\n      this.fixIntegerDivisionAccuracy = !features.isIntegerDivisionAccurate;\n    } else if (this.fixIntegerDivisionAccuracy && features.isIntegerDivisionAccurate) {\n      this.fixIntegerDivisionAccuracy = false;\n    }\n\n    this.checkOutput();\n\n    if (!this.output || this.output.length === 0) {\n      if (args.length !== 1) {\n        throw new Error('Auto output only supported for kernels with only one input');\n      }\n\n      const argType = utils.getVariableType(args[0], this.strictIntegers);\n      switch (argType) {\n        case 'Array':\n          this.output = utils.getDimensions(argType);\n          break;\n        case 'NumberTexture':\n        case 'MemoryOptimizedNumberTexture':\n        case 'ArrayTexture(1)':\n        case 'ArrayTexture(2)':\n        case 'ArrayTexture(3)':\n        case 'ArrayTexture(4)':\n          this.output = args[0].output;\n          break;\n        default:\n          throw new Error('Auto output not supported for input type: ' + argType);\n      }\n    }\n\n    if (this.graphical) {\n      if (this.output.length !== 2) {\n        throw new Error('Output must have 2 dimensions on graphical mode');\n      }\n\n      if (this.precision === 'precision') {\n        this.precision = 'unsigned';\n        console.warn('Cannot use graphical mode and single precision at the same time');\n      }\n\n      this.texSize = utils.clone(this.output);\n      return;\n    } else if (this.precision === null && features.isTextureFloat) {\n      this.precision = 'single';\n    }\n\n    this.texSize = utils.getKernelTextureSize({\n      optimizeFloatMemory: this.optimizeFloatMemory,\n      precision: this.precision,\n    }, this.output);\n\n    this.checkTextureSize();\n  }\n\n  updateMaxTexSize() {\n    const { texSize, canvas } = this;\n    if (this.maxTexSize === null) {\n      let canvasIndex = canvases.indexOf(canvas);\n      if (canvasIndex === -1) {\n        canvasIndex = canvases.length;\n        canvases.push(canvas);\n        maxTexSizes[canvasIndex] = [texSize[0], texSize[1]];\n      }\n      this.maxTexSize = maxTexSizes[canvasIndex];\n    }\n    if (this.maxTexSize[0] < texSize[0]) {\n      this.maxTexSize[0] = texSize[0];\n    }\n    if (this.maxTexSize[1] < texSize[1]) {\n      this.maxTexSize[1] = texSize[1];\n    }\n  }\n\n  setupArguments(args) {\n    this.kernelArguments = [];\n    this.argumentTextureCount = 0;\n    const needsArgumentTypes = this.argumentTypes === null;\n    if (needsArgumentTypes) {\n      this.argumentTypes = [];\n    }\n    this.argumentSizes = [];\n    this.argumentBitRatios = [];\n\n    if (args.length < this.argumentNames.length) {\n      throw new Error('not enough arguments for kernel');\n    } else if (args.length > this.argumentNames.length) {\n      throw new Error('too many arguments for kernel');\n    }\n\n    const { context: gl } = this;\n    let textureIndexes = 0;\n\n    const onRequestTexture = () => {\n      return this.createTexture();\n    };\n    const onRequestIndex = () => {\n      return this.constantTextureCount + textureIndexes++;\n    };\n    const onUpdateValueMismatch = (constructor) => {\n      this.switchKernels({\n        type: 'argumentMismatch',\n        needed: constructor\n      });\n    };\n    const onRequestContextHandle = () => {\n      return gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount++;\n    };\n\n    for (let index = 0; index < args.length; index++) {\n      const value = args[index];\n      const name = this.argumentNames[index];\n      let type;\n      if (needsArgumentTypes) {\n        type = utils.getVariableType(value, this.strictIntegers);\n        this.argumentTypes.push(type);\n      } else {\n        type = this.argumentTypes[index];\n      }\n      const KernelValue = this.constructor.lookupKernelValueType(type, this.dynamicArguments ? 'dynamic' : 'static', this.precision, args[index]);\n      if (KernelValue === null) {\n        return this.requestFallback(args);\n      }\n      const kernelArgument = new KernelValue(value, {\n        name,\n        type,\n        tactic: this.tactic,\n        origin: 'user',\n        context: gl,\n        checkContext: this.checkContext,\n        kernel: this,\n        strictIntegers: this.strictIntegers,\n        onRequestTexture,\n        onRequestIndex,\n        onUpdateValueMismatch,\n        onRequestContextHandle,\n      });\n      this.kernelArguments.push(kernelArgument);\n      kernelArgument.setup();\n      this.argumentSizes.push(kernelArgument.textureSize);\n      this.argumentBitRatios[index] = kernelArgument.bitRatio;\n    }\n  }\n\n  createTexture() {\n    const texture = this.context.createTexture();\n    this.textureCache.push(texture);\n    return texture;\n  }\n\n  setupConstants(args) {\n    const { context: gl } = this;\n    this.kernelConstants = [];\n    this.forceUploadKernelConstants = [];\n    let needsConstantTypes = this.constantTypes === null;\n    if (needsConstantTypes) {\n      this.constantTypes = {};\n    }\n    this.constantBitRatios = {};\n    let textureIndexes = 0;\n    for (const name in this.constants) {\n      const value = this.constants[name];\n      let type;\n      if (needsConstantTypes) {\n        type = utils.getVariableType(value, this.strictIntegers);\n        this.constantTypes[name] = type;\n      } else {\n        type = this.constantTypes[name];\n      }\n      const KernelValue = this.constructor.lookupKernelValueType(type, 'static', this.precision, value);\n      if (KernelValue === null) {\n        return this.requestFallback(args);\n      }\n      const kernelValue = new KernelValue(value, {\n        name,\n        type,\n        tactic: this.tactic,\n        origin: 'constants',\n        context: this.context,\n        checkContext: this.checkContext,\n        kernel: this,\n        strictIntegers: this.strictIntegers,\n        onRequestTexture: () => {\n          return this.createTexture();\n        },\n        onRequestIndex: () => {\n          return textureIndexes++;\n        },\n        onRequestContextHandle: () => {\n          return gl.TEXTURE0 + this.constantTextureCount++;\n        }\n      });\n      this.constantBitRatios[name] = kernelValue.bitRatio;\n      this.kernelConstants.push(kernelValue);\n      kernelValue.setup();\n      if (kernelValue.forceUploadEachRun) {\n        this.forceUploadKernelConstants.push(kernelValue);\n      }\n    }\n  }\n\n  build() {\n    if (this.built) return;\n    this.initExtensions();\n    this.validateSettings(arguments);\n    this.setupConstants(arguments);\n    if (this.fallbackRequested) return;\n    this.setupArguments(arguments);\n    if (this.fallbackRequested) return;\n    this.updateMaxTexSize();\n    this.translateSource();\n    const failureResult = this.pickRenderStrategy(arguments);\n    if (failureResult) {\n      return failureResult;\n    }\n    const { texSize, context: gl, canvas } = this;\n    gl.enable(gl.SCISSOR_TEST);\n    if (this.pipeline && this.precision === 'single') {\n      gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\n      canvas.width = this.maxTexSize[0];\n      canvas.height = this.maxTexSize[1];\n    } else {\n      gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\n      canvas.width = this.maxTexSize[0];\n      canvas.height = this.maxTexSize[1];\n    }\n    const threadDim = this.threadDim = Array.from(this.output);\n    while (threadDim.length < 3) {\n      threadDim.push(1);\n    }\n\n    const compiledVertexShader = this.getVertexShader(arguments);\n    const vertShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vertShader, compiledVertexShader);\n    gl.compileShader(vertShader);\n    this.vertShader = vertShader;\n\n    const compiledFragmentShader = this.getFragmentShader(arguments);\n    const fragShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragShader, compiledFragmentShader);\n    gl.compileShader(fragShader);\n    this.fragShader = fragShader;\n\n    if (this.debug) {\n      console.log('GLSL Shader Output:');\n      console.log(compiledFragmentShader);\n    }\n\n    if (!gl.getShaderParameter(vertShader, gl.COMPILE_STATUS)) {\n      throw new Error('Error compiling vertex shader: ' + gl.getShaderInfoLog(vertShader));\n    }\n    if (!gl.getShaderParameter(fragShader, gl.COMPILE_STATUS)) {\n      throw new Error('Error compiling fragment shader: ' + gl.getShaderInfoLog(fragShader));\n    }\n\n    const program = this.program = gl.createProgram();\n    gl.attachShader(program, vertShader);\n    gl.attachShader(program, fragShader);\n    gl.linkProgram(program);\n    this.framebuffer = gl.createFramebuffer();\n    this.framebuffer.width = texSize[0];\n    this.framebuffer.height = texSize[1];\n    this.rawValueFramebuffers = {};\n\n    const vertices = new Float32Array([-1, -1,\n      1, -1, -1, 1,\n      1, 1\n    ]);\n    const texCoords = new Float32Array([\n      0, 0,\n      1, 0,\n      0, 1,\n      1, 1\n    ]);\n\n    const texCoordOffset = vertices.byteLength;\n\n    let buffer = this.buffer;\n    if (!buffer) {\n      buffer = this.buffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n      gl.bufferData(gl.ARRAY_BUFFER, vertices.byteLength + texCoords.byteLength, gl.STATIC_DRAW);\n    } else {\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    }\n\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, vertices);\n    gl.bufferSubData(gl.ARRAY_BUFFER, texCoordOffset, texCoords);\n\n    const aPosLoc = gl.getAttribLocation(this.program, 'aPos');\n    gl.enableVertexAttribArray(aPosLoc);\n    gl.vertexAttribPointer(aPosLoc, 2, gl.FLOAT, false, 0, 0);\n    const aTexCoordLoc = gl.getAttribLocation(this.program, 'aTexCoord');\n    gl.enableVertexAttribArray(aTexCoordLoc);\n    gl.vertexAttribPointer(aTexCoordLoc, 2, gl.FLOAT, false, 0, texCoordOffset);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n\n    let i = 0;\n    gl.useProgram(this.program);\n    for (let p in this.constants) {\n      this.kernelConstants[i++].updateValue(this.constants[p]);\n    }\n\n    this._setupOutputTexture();\n    if (\n      this.subKernels !== null &&\n      this.subKernels.length > 0\n    ) {\n      this._mappedTextureSwitched = {};\n      this._setupSubOutputTextures();\n    }\n    this.buildSignature(arguments);\n    this.built = true;\n  }\n\n  translateSource() {\n    const functionBuilder = FunctionBuilder.fromKernel(this, WebGLFunctionNode, {\n      fixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy\n    });\n    this.translatedSource = functionBuilder.getPrototypeString('kernel');\n    this.setupReturnTypes(functionBuilder);\n  }\n\n  setupReturnTypes(functionBuilder) {\n    if (!this.graphical && !this.returnType) {\n      this.returnType = functionBuilder.getKernelResultType();\n    }\n\n    if (this.subKernels && this.subKernels.length > 0) {\n      for (let i = 0; i < this.subKernels.length; i++) {\n        const subKernel = this.subKernels[i];\n        if (!subKernel.returnType) {\n          subKernel.returnType = functionBuilder.getSubKernelResultType(i);\n        }\n      }\n    }\n  }\n\n  run() {\n    const { kernelArguments, texSize, forceUploadKernelConstants, context: gl } = this;\n\n    gl.useProgram(this.program);\n    gl.scissor(0, 0, texSize[0], texSize[1]);\n    if (this.dynamicOutput) {\n      this.setUniform3iv('uOutputDim', new Int32Array(this.threadDim));\n      this.setUniform2iv('uTexSize', texSize);\n    }\n\n    this.setUniform2f('ratio', texSize[0] / this.maxTexSize[0], texSize[1] / this.maxTexSize[1]);\n\n    for (let i = 0; i < forceUploadKernelConstants.length; i++) {\n      const constant = forceUploadKernelConstants[i];\n      constant.updateValue(this.constants[constant.name]);\n      if (this.switchingKernels) return;\n    }\n    for (let i = 0; i < kernelArguments.length; i++) {\n      kernelArguments[i].updateValue(arguments[i]);\n      if (this.switchingKernels) return;\n    }\n\n    if (this.plugins) {\n      for (let i = 0; i < this.plugins.length; i++) {\n        const plugin = this.plugins[i];\n        if (plugin.onBeforeRun) {\n          plugin.onBeforeRun(this);\n        }\n      }\n    }\n\n    if (this.graphical) {\n      if (this.pipeline) {\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n        if (this.immutable) {\n          this._replaceOutputTexture();\n        }\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n        return this.immutable ? this.texture.clone() : this.texture;\n      }\n      gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n      return;\n    }\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    if (this.immutable) {\n      this._replaceOutputTexture();\n    }\n\n    if (this.subKernels !== null) {\n      if (this.immutable) {\n        this._replaceSubOutputTextures();\n      }\n      this.drawBuffers();\n    }\n\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  }\n\n  drawBuffers() {\n    this.extensions.WEBGL_draw_buffers.drawBuffersWEBGL(this.drawBuffersMap);\n  }\n\n  getInternalFormat() {\n    return this.context.RGBA;\n  }\n  getTextureFormat() {\n    const { context: gl } = this;\n    switch (this.getInternalFormat()) {\n      case gl.RGBA:\n        return gl.RGBA;\n      default:\n        throw new Error('Unknown internal format');\n    }\n  }\n\n  _replaceOutputTexture() {\n    if (this.texture.beforeMutate() || this._textureSwitched) {\n      const gl = this.context;\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture.texture, 0);\n      this._textureSwitched = false;\n    }\n  }\n\n  _setupOutputTexture() {\n    const gl = this.context;\n    const texSize = this.texSize;\n    if (this.texture) {\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture.texture, 0);\n      return;\n    }\n    const texture = this.createTexture();\n    gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    const format = this.getInternalFormat();\n    if (this.precision === 'single') {\n      gl.texImage2D(gl.TEXTURE_2D, 0, format, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n    } else {\n      gl.texImage2D(gl.TEXTURE_2D, 0, format, texSize[0], texSize[1], 0, format, gl.UNSIGNED_BYTE, null);\n    }\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    this.texture = new this.TextureConstructor({\n      texture,\n      size: texSize,\n      dimensions: this.threadDim,\n      output: this.output,\n      context: this.context,\n      internalFormat: this.getInternalFormat(),\n      textureFormat: this.getTextureFormat(),\n      kernel: this,\n    });\n  }\n\n  _replaceSubOutputTextures() {\n    const gl = this.context;\n    for (let i = 0; i < this.mappedTextures.length; i++) {\n      const mappedTexture = this.mappedTextures[i];\n      if (mappedTexture.beforeMutate() || this._mappedTextureSwitched[i]) {\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, mappedTexture.texture, 0);\n        this._mappedTextureSwitched[i] = false;\n      }\n    }\n  }\n\n  _setupSubOutputTextures() {\n    const gl = this.context;\n    if (this.mappedTextures) {\n      for (let i = 0; i < this.subKernels.length; i++) {\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, this.mappedTextures[i].texture, 0);\n      }\n      return;\n    }\n    const texSize = this.texSize;\n    this.drawBuffersMap = [gl.COLOR_ATTACHMENT0];\n    this.mappedTextures = [];\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const texture = this.createTexture();\n      this.drawBuffersMap.push(gl.COLOR_ATTACHMENT0 + i + 1);\n      gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount + i);\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      if (this.precision === 'single') {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n      } else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      }\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, texture, 0);\n\n      this.mappedTextures.push(new this.TextureConstructor({\n        texture,\n        size: texSize,\n        dimensions: this.threadDim,\n        output: this.output,\n        context: this.context,\n        internalFormat: this.getInternalFormat(),\n        textureFormat: this.getTextureFormat(),\n        kernel: this,\n      }));\n    }\n  }\n\n  setUniform1f(name, value) {\n    if (this.uniform1fCache.hasOwnProperty(name)) {\n      const cache = this.uniform1fCache[name];\n      if (value === cache) {\n        return;\n      }\n    }\n    this.uniform1fCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform1f(loc, value);\n  }\n\n  setUniform1i(name, value) {\n    if (this.uniform1iCache.hasOwnProperty(name)) {\n      const cache = this.uniform1iCache[name];\n      if (value === cache) {\n        return;\n      }\n    }\n    this.uniform1iCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform1i(loc, value);\n  }\n\n  setUniform2f(name, value1, value2) {\n    if (this.uniform2fCache.hasOwnProperty(name)) {\n      const cache = this.uniform2fCache[name];\n      if (\n        value1 === cache[0] &&\n        value2 === cache[1]\n      ) {\n        return;\n      }\n    }\n    this.uniform2fCache[name] = [value1, value2];\n    const loc = this.getUniformLocation(name);\n    this.context.uniform2f(loc, value1, value2);\n  }\n\n  setUniform2fv(name, value) {\n    if (this.uniform2fvCache.hasOwnProperty(name)) {\n      const cache = this.uniform2fvCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1]\n      ) {\n        return;\n      }\n    }\n    this.uniform2fvCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform2fv(loc, value);\n  }\n\n  setUniform2iv(name, value) {\n    if (this.uniform2ivCache.hasOwnProperty(name)) {\n      const cache = this.uniform2ivCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1]\n      ) {\n        return;\n      }\n    }\n    this.uniform2ivCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform2iv(loc, value);\n  }\n\n  setUniform3fv(name, value) {\n    if (this.uniform3fvCache.hasOwnProperty(name)) {\n      const cache = this.uniform3fvCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2]\n      ) {\n        return;\n      }\n    }\n    this.uniform3fvCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform3fv(loc, value);\n  }\n\n  setUniform3iv(name, value) {\n    if (this.uniform3ivCache.hasOwnProperty(name)) {\n      const cache = this.uniform3ivCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2]\n      ) {\n        return;\n      }\n    }\n    this.uniform3ivCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform3iv(loc, value);\n  }\n\n  setUniform4fv(name, value) {\n    if (this.uniform4fvCache.hasOwnProperty(name)) {\n      const cache = this.uniform4fvCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2] &&\n        value[3] === cache[3]\n      ) {\n        return;\n      }\n    }\n    this.uniform4fvCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform4fv(loc, value);\n  }\n\n  setUniform4iv(name, value) {\n    if (this.uniform4ivCache.hasOwnProperty(name)) {\n      const cache = this.uniform4ivCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2] &&\n        value[3] === cache[3]\n      ) {\n        return;\n      }\n    }\n    this.uniform4ivCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform4iv(loc, value);\n  }\n\n  getUniformLocation(name) {\n    if (this.programUniformLocationCache.hasOwnProperty(name)) {\n      return this.programUniformLocationCache[name];\n    }\n    return this.programUniformLocationCache[name] = this.context.getUniformLocation(this.program, name);\n  }\n\n  _getFragShaderArtifactMap(args) {\n    return {\n      HEADER: this._getHeaderString(),\n      LOOP_MAX: this._getLoopMaxString(),\n      PLUGINS: this._getPluginsString(),\n      CONSTANTS: this._getConstantsString(),\n      DECODE32_ENDIANNESS: this._getDecode32EndiannessString(),\n      ENCODE32_ENDIANNESS: this._getEncode32EndiannessString(),\n      DIVIDE_WITH_INTEGER_CHECK: this._getDivideWithIntegerCheckString(),\n      INJECTED_NATIVE: this._getInjectedNative(),\n      MAIN_CONSTANTS: this._getMainConstantsString(),\n      MAIN_ARGUMENTS: this._getMainArgumentsString(args),\n      KERNEL: this.getKernelString(),\n      MAIN_RESULT: this.getMainResultString(),\n      FLOAT_TACTIC_DECLARATION: this.getFloatTacticDeclaration(),\n      INT_TACTIC_DECLARATION: this.getIntTacticDeclaration(),\n      SAMPLER_2D_TACTIC_DECLARATION: this.getSampler2DTacticDeclaration(),\n      SAMPLER_2D_ARRAY_TACTIC_DECLARATION: this.getSampler2DArrayTacticDeclaration(),\n    };\n  }\n\n  _getVertShaderArtifactMap(args) {\n    return {\n      FLOAT_TACTIC_DECLARATION: this.getFloatTacticDeclaration(),\n      INT_TACTIC_DECLARATION: this.getIntTacticDeclaration(),\n      SAMPLER_2D_TACTIC_DECLARATION: this.getSampler2DTacticDeclaration(),\n      SAMPLER_2D_ARRAY_TACTIC_DECLARATION: this.getSampler2DArrayTacticDeclaration(),\n    };\n  }\n\n  _getHeaderString() {\n    return (\n      this.subKernels !== null ?\n      '#extension GL_EXT_draw_buffers : require\\n' :\n      ''\n    );\n  }\n\n  _getLoopMaxString() {\n    return (\n      this.loopMaxIterations ?\n      ` ${parseInt(this.loopMaxIterations)};\\n` :\n      ' 1000;\\n'\n    );\n  }\n\n  _getPluginsString() {\n    if (!this.plugins) return '\\n';\n    return this.plugins.map(plugin => plugin.source && this.source.match(plugin.functionMatch) ? plugin.source : '').join('\\n');\n  }\n\n  _getConstantsString() {\n    const result = [];\n    const { threadDim, texSize } = this;\n    if (this.dynamicOutput) {\n      result.push(\n        'uniform ivec3 uOutputDim',\n        'uniform ivec2 uTexSize'\n      );\n    } else {\n      result.push(\n        `ivec3 uOutputDim = ivec3(${threadDim[0]}, ${threadDim[1]}, ${threadDim[2]})`,\n        `ivec2 uTexSize = ivec2(${texSize[0]}, ${texSize[1]})`\n      );\n    }\n    return utils.linesToString(result);\n  }\n\n  _getTextureCoordinate() {\n    const subKernels = this.subKernels;\n    if (subKernels === null || subKernels.length < 1) {\n      return 'varying vec2 vTexCoord;\\n';\n    } else {\n      return 'out vec2 vTexCoord;\\n';\n    }\n  }\n\n  _getDecode32EndiannessString() {\n    return (\n      this.endianness === 'LE' ?\n      '' :\n      '  texel.rgba = texel.abgr;\\n'\n    );\n  }\n\n  _getEncode32EndiannessString() {\n    return (\n      this.endianness === 'LE' ?\n      '' :\n      '  texel.rgba = texel.abgr;\\n'\n    );\n  }\n\n  _getDivideWithIntegerCheckString() {\n    return this.fixIntegerDivisionAccuracy ?\n      `float divWithIntCheck(float x, float y) {\n  if (floor(x) == x && floor(y) == y && integerMod(x, y) == 0.0) {\n    return float(int(x) / int(y));\n  }\n  return x / y;\n}\n\nfloat integerCorrectionModulo(float number, float divisor) {\n  if (number < 0.0) {\n    number = abs(number);\n    if (divisor < 0.0) {\n      divisor = abs(divisor);\n    }\n    return -(number - (divisor * floor(divWithIntCheck(number, divisor))));\n  }\n  if (divisor < 0.0) {\n    divisor = abs(divisor);\n  }\n  return number - (divisor * floor(divWithIntCheck(number, divisor)));\n}` :\n      '';\n  }\n\n  _getMainArgumentsString(args) {\n    const results = [];\n    const { argumentNames } = this;\n    for (let i = 0; i < argumentNames.length; i++) {\n      results.push(this.kernelArguments[i].getSource(args[i]));\n    }\n    return results.join('');\n  }\n\n  _getInjectedNative() {\n    return this.injectedNative || '';\n  }\n\n  _getMainConstantsString() {\n    const result = [];\n    const { constants } = this;\n    if (constants) {\n      let i = 0;\n      for (const name in constants) {\n        if (!this.constants.hasOwnProperty(name)) continue;\n        result.push(this.kernelConstants[i++].getSource(this.constants[name]));\n      }\n    }\n    return result.join('');\n  }\n\n  getRawValueFramebuffer(width, height) {\n    if (!this.rawValueFramebuffers[width]) {\n      this.rawValueFramebuffers[width] = {};\n    }\n    if (!this.rawValueFramebuffers[width][height]) {\n      const framebuffer = this.context.createFramebuffer();\n      framebuffer.width = width;\n      framebuffer.height = height;\n      this.rawValueFramebuffers[width][height] = framebuffer;\n    }\n    return this.rawValueFramebuffers[width][height];\n  }\n\n  getKernelResultDeclaration() {\n    switch (this.returnType) {\n      case 'Array(2)':\n        return 'vec2 kernelResult';\n      case 'Array(3)':\n        return 'vec3 kernelResult';\n      case 'Array(4)':\n        return 'vec4 kernelResult';\n      case 'LiteralInteger':\n      case 'Float':\n      case 'Number':\n      case 'Integer':\n        return 'float kernelResult';\n      default:\n        if (this.graphical) {\n          return 'float kernelResult';\n        } else {\n          throw new Error(`unrecognized output type \"${ this.returnType }\"`);\n        }\n    }\n  }\n  getKernelString() {\n    const result = [this.getKernelResultDeclaration()];\n    const { subKernels } = this;\n    if (subKernels !== null) {\n      switch (this.returnType) {\n        case 'Number':\n        case 'Float':\n        case 'Integer':\n          for (let i = 0; i < subKernels.length; i++) {\n            const subKernel = subKernels[i];\n            result.push(\n              subKernel.returnType === 'Integer' ?\n              `int subKernelResult_${ subKernel.name } = 0` :\n              `float subKernelResult_${ subKernel.name } = 0.0`\n            );\n          }\n          break;\n        case 'Array(2)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec2 subKernelResult_${ subKernels[i].name }`\n            );\n          }\n          break;\n        case 'Array(3)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec3 subKernelResult_${ subKernels[i].name }`\n            );\n          }\n          break;\n        case 'Array(4)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec4 subKernelResult_${ subKernels[i].name }`\n            );\n          }\n          break;\n      }\n    }\n\n    return utils.linesToString(result) + this.translatedSource;\n  }\n\n  getMainResultGraphical() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragColor = actualColor',\n    ]);\n  }\n\n  getMainResultPackedPixels() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        return this.getMainResultKernelPackedPixels() +\n          this.getMainResultSubKernelPackedPixels();\n      default:\n        throw new Error(`packed output only usable with Numbers, \"${this.returnType}\" specified`);\n    }\n  }\n\n  getMainResultKernelPackedPixels() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  gl_FragData[0] = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(kernelResult)`\n    ]);\n  }\n\n  getMainResultSubKernelPackedPixels() {\n    const result = [];\n    if (!this.subKernels) return '';\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  gl_FragData[${i + 1}] = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(float(subKernelResult_${this.subKernels[i].name}))`\n        );\n      } else {\n        result.push(\n          `  gl_FragData[${i + 1}] = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(subKernelResult_${this.subKernels[i].name})`\n        );\n      }\n    }\n    return utils.linesToString(result);\n  }\n\n  getMainResultMemoryOptimizedFloats() {\n    const result = [\n      '  index *= 4',\n    ];\n\n    switch (this.returnType) {\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        const channels = ['r', 'g', 'b', 'a'];\n        for (let i = 0; i < channels.length; i++) {\n          const channel = channels[i];\n          this.getMainResultKernelMemoryOptimizedFloats(result, channel);\n          this.getMainResultSubKernelMemoryOptimizedFloats(result, channel);\n          if (i + 1 < channels.length) {\n            result.push('  index += 1');\n          }\n        }\n        break;\n      default:\n        throw new Error(`optimized output only usable with Numbers, ${this.returnType} specified`);\n    }\n\n    return utils.linesToString(result);\n  }\n\n  getMainResultKernelMemoryOptimizedFloats(result, channel) {\n    result.push(\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  gl_FragData[0].${channel} = kernelResult`\n    );\n  }\n\n  getMainResultSubKernelMemoryOptimizedFloats(result, channel) {\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  gl_FragData[${i + 1}].${channel} = float(subKernelResult_${this.subKernels[i].name})`\n        );\n      } else {\n        result.push(\n          `  gl_FragData[${i + 1}].${channel} = subKernelResult_${this.subKernels[i].name}`\n        );\n      }\n    }\n  }\n\n  getMainResultKernelNumberTexture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0][0] = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelNumberTexture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  gl_FragData[${i + 1}][0] = float(subKernelResult_${subKernel.name})`\n        );\n      } else {\n        result.push(\n          `  gl_FragData[${i + 1}][0] = subKernelResult_${subKernel.name}`\n        );\n      }\n    }\n    return result;\n  }\n\n  getMainResultKernelArray2Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0][0] = kernelResult[0]',\n      '  gl_FragData[0][1] = kernelResult[1]',\n    ];\n  }\n\n  getMainResultSubKernelArray2Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      result.push(\n        `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n        `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray3Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0][0] = kernelResult[0]',\n      '  gl_FragData[0][1] = kernelResult[1]',\n      '  gl_FragData[0][2] = kernelResult[2]',\n    ];\n  }\n\n  getMainResultSubKernelArray3Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      result.push(\n        `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n        `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\n        `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}[2]`\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray4Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0] = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelArray4Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    switch (this.returnType) {\n      case 'Number':\n      case 'Float':\n      case 'Integer':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          const subKernel = this.subKernels[i];\n          if (subKernel.returnType === 'Integer') {\n            result.push(\n              `  gl_FragData[${i + 1}] = float(subKernelResult_${this.subKernels[i].name})`\n            );\n          } else {\n            result.push(\n              `  gl_FragData[${i + 1}] = subKernelResult_${this.subKernels[i].name}`\n            );\n          }\n        }\n        break;\n      case 'Array(2)':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          result.push(\n            `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n            `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`\n          );\n        }\n        break;\n      case 'Array(3)':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          result.push(\n            `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n            `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\n            `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}[2]`\n          );\n        }\n        break;\n      case 'Array(4)':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          result.push(\n            `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n            `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\n            `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}[2]`,\n            `  gl_FragData[${i + 1}][3] = subKernelResult_${this.subKernels[i].name}[3]`\n          );\n        }\n        break;\n    }\n\n    return result;\n  }\n\n  replaceArtifacts(src, map) {\n    return src.replace(/[ ]*__([A-Z]+[0-9]*([_]?[A-Z]*[0-9]?)*)__;\\n/g, (match, artifact) => {\n      if (map.hasOwnProperty(artifact)) {\n        return map[artifact];\n      }\n      throw `unhandled artifact ${artifact}`;\n    });\n  }\n\n  getFragmentShader(args) {\n    if (this.compiledFragmentShader !== null) {\n      return this.compiledFragmentShader;\n    }\n    return this.compiledFragmentShader = this.replaceArtifacts(this.constructor.fragmentShader, this._getFragShaderArtifactMap(args));\n  }\n\n  getVertexShader(args) {\n    if (this.compiledVertexShader !== null) {\n      return this.compiledVertexShader;\n    }\n    return this.compiledVertexShader = this.replaceArtifacts(this.constructor.vertexShader, this._getVertShaderArtifactMap(args));\n  }\n\n  toString() {\n    const setupContextString = utils.linesToString([\n      `const gl = context`,\n    ]);\n    return glKernelString(this.constructor, arguments, this, setupContextString);\n  }\n\n  destroy(removeCanvasReferences) {\n    if (!this.context) return;\n    if (this.buffer) {\n      this.context.deleteBuffer(this.buffer);\n    }\n    if (this.framebuffer) {\n      this.context.deleteFramebuffer(this.framebuffer);\n    }\n    for (const width in this.rawValueFramebuffers) {\n      for (const height in this.rawValueFramebuffers[width]) {\n        this.context.deleteFramebuffer(this.rawValueFramebuffers[width][height]);\n        delete this.rawValueFramebuffers[width][height];\n      }\n      delete this.rawValueFramebuffers[width];\n    }\n    if (this.vertShader) {\n      this.context.deleteShader(this.vertShader);\n    }\n    if (this.fragShader) {\n      this.context.deleteShader(this.fragShader);\n    }\n    if (this.program) {\n      this.context.deleteProgram(this.program);\n    }\n    if (this.texture) {\n      this.texture.delete();\n      const textureCacheIndex = this.textureCache.indexOf(this.texture.texture);\n      if (textureCacheIndex > -1) {\n        this.textureCache.splice(textureCacheIndex, 1);\n      }\n      this.texture = null;\n    }\n    if (this.mappedTextures && this.mappedTextures.length) {\n      for (let i = 0; i < this.mappedTextures.length; i++) {\n        const mappedTexture = this.mappedTextures[i];\n        mappedTexture.delete();\n        const textureCacheIndex = this.textureCache.indexOf(mappedTexture.texture);\n        if (textureCacheIndex > -1) {\n          this.textureCache.splice(textureCacheIndex, 1);\n        }\n      }\n      this.mappedTextures = null;\n    }\n    if (this.kernelArguments) {\n      for (let i = 0; i < this.kernelArguments.length; i++) {\n        this.kernelArguments[i].destroy();\n      }\n    }\n    if (this.kernelConstants) {\n      for (let i = 0; i < this.kernelConstants.length; i++) {\n        this.kernelConstants[i].destroy();\n      }\n    }\n    while (this.textureCache.length > 0) {\n      const texture = this.textureCache.pop();\n      this.context.deleteTexture(texture);\n    }\n    if (removeCanvasReferences) {\n      const idx = canvases.indexOf(this.canvas);\n      if (idx >= 0) {\n        canvases[idx] = null;\n        maxTexSizes[idx] = null;\n      }\n    }\n    this.destroyExtensions();\n    delete this.context;\n    delete this.canvas;\n    if (!this.gpu) return;\n    const i = this.gpu.kernels.indexOf(this);\n    if (i === -1) return;\n    this.gpu.kernels.splice(i, 1);\n  }\n\n  destroyExtensions() {\n    this.extensions.OES_texture_float = null;\n    this.extensions.OES_texture_float_linear = null;\n    this.extensions.OES_element_index_uint = null;\n    this.extensions.WEBGL_draw_buffers = null;\n  }\n\n  static destroyContext(context) {\n    const extension = context.getExtension('WEBGL_lose_context');\n    if (extension) {\n      extension.loseContext();\n    }\n  }\n\n  toJSON() {\n    const json = super.toJSON();\n    json.functionNodes = FunctionBuilder.fromKernel(this, WebGLFunctionNode).toJSON();\n    json.settings.threadDim = this.threadDim;\n    return json;\n  }\n}\n\nmodule.exports = {\n  WebGLKernel\n};\n},{\"../../plugins/math-random-uniformly-distributed\":112,\"../../utils\":114,\"../function-builder\":9,\"../gl/kernel\":13,\"../gl/kernel-string\":12,\"./fragment-shader\":37,\"./function-node\":38,\"./kernel-value-maps\":39,\"./vertex-shader\":71}],71:[function(require,module,exports){\nconst vertexShader = `__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n\nattribute vec2 aPos;\nattribute vec2 aTexCoord;\n\nvarying vec2 vTexCoord;\nuniform vec2 ratio;\n\nvoid main(void) {\n  gl_Position = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\n  vTexCoord = aTexCoord;\n}`;\n\nmodule.exports = {\n  vertexShader\n};\n},{}],72:[function(require,module,exports){\nconst fragmentShader = `#version 300 es\n__HEADER__;\n__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n__SAMPLER_2D_ARRAY_TACTIC_DECLARATION__;\n\nconst int LOOP_MAX = __LOOP_MAX__;\n\n__PLUGINS__;\n__CONSTANTS__;\n\nin vec2 vTexCoord;\n\nfloat atan2(float v1, float v2) {\n  if (v1 == 0.0 || v2 == 0.0) return 0.0;\n  return atan(v1 / v2);\n}\n\nfloat cbrt(float x) {\n  if (x >= 0.0) {\n    return pow(x, 1.0 / 3.0);\n  } else {\n    return -pow(x, 1.0 / 3.0);\n  }\n}\n\nfloat expm1(float x) {\n  return pow(${Math.E}, x) - 1.0; \n}\n\nfloat fround(highp float x) {\n  return x;\n}\n\nfloat imul(float v1, float v2) {\n  return float(int(v1) * int(v2));\n}\n\nfloat log10(float x) {\n  return log2(x) * (1.0 / log2(10.0));\n}\n\nfloat log1p(float x) {\n  return log(1.0 + x);\n}\n\nfloat _pow(float v1, float v2) {\n  if (v2 == 0.0) return 1.0;\n  return pow(v1, v2);\n}\n\nfloat _round(float x) {\n  return floor(x + 0.5);\n}\n\n\nconst int BIT_COUNT = 32;\nint modi(int x, int y) {\n  return x - y * (x / y);\n}\n\nint bitwiseOr(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) || (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseXOR(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) != (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseAnd(int a, int b) {\n  int result = 0;\n  int n = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) && (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 && b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseNot(int a) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (modi(a, 2) == 0) {\n      result += n;    \n    }\n    a = a / 2;\n    n = n * 2;\n  }\n  return result;\n}\nint bitwiseZeroFillLeftShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n *= 2;\n  }\n\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nint bitwiseSignedRightShift(int num, int shifts) {\n  return int(floor(float(num) / pow(2.0, float(shifts))));\n}\n\nint bitwiseZeroFillRightShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n /= 2;\n  }\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nvec2 integerMod(vec2 x, float y) {\n  vec2 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec3 integerMod(vec3 x, float y) {\n  vec3 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec4 integerMod(vec4 x, vec4 y) {\n  vec4 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nfloat integerMod(float x, float y) {\n  float res = floor(mod(x, y));\n  return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);\n}\n\nint integerMod(int x, int y) {\n  return x - (y * int(x/y));\n}\n\n__DIVIDE_WITH_INTEGER_CHECK__;\n\n// Here be dragons!\n// DO NOT OPTIMIZE THIS CODE\n// YOU WILL BREAK SOMETHING ON SOMEBODY\\'S MACHINE\n// LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\nconst vec2 MAGIC_VEC = vec2(1.0, -256.0);\nconst vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);\nconst vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); // 1, 1/256, 1/65536\nfloat decode32(vec4 texel) {\n  __DECODE32_ENDIANNESS__;\n  texel *= 255.0;\n  vec2 gte128;\n  gte128.x = texel.b >= 128.0 ? 1.0 : 0.0;\n  gte128.y = texel.a >= 128.0 ? 1.0 : 0.0;\n  float exponent = 2.0 * texel.a - 127.0 + dot(gte128, MAGIC_VEC);\n  float res = exp2(round(exponent));\n  texel.b = texel.b - 128.0 * gte128.x;\n  res = dot(texel, SCALE_FACTOR) * exp2(round(exponent-23.0)) + res;\n  res *= gte128.y * -2.0 + 1.0;\n  return res;\n}\n\nfloat decode16(vec4 texel, int index) {\n  int channel = integerMod(index, 2);\n  return texel[channel*2] * 255.0 + texel[channel*2 + 1] * 65280.0;\n}\n\nfloat decode8(vec4 texel, int index) {\n  int channel = integerMod(index, 4);\n  return texel[channel] * 255.0;\n}\n\nvec4 legacyEncode32(float f) {\n  float F = abs(f);\n  float sign = f < 0.0 ? 1.0 : 0.0;\n  float exponent = floor(log2(F));\n  float mantissa = (exp2(-exponent) * F);\n  // exponent += floor(log2(mantissa));\n  vec4 texel = vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;\n  texel.rg = integerMod(texel.rg, 256.0);\n  texel.b = integerMod(texel.b, 128.0);\n  texel.a = exponent*0.5 + 63.5;\n  texel.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;\n  texel = floor(texel);\n  texel *= 0.003921569; // 1/255\n  __ENCODE32_ENDIANNESS__;\n  return texel;\n}\n\n// https://github.com/gpujs/gpu.js/wiki/Encoder-details\nvec4 encode32(float value) {\n  if (value == 0.0) return vec4(0, 0, 0, 0);\n\n  float exponent;\n  float mantissa;\n  vec4  result;\n  float sgn;\n\n  sgn = step(0.0, -value);\n  value = abs(value);\n\n  exponent = floor(log2(value));\n\n  mantissa = value*pow(2.0, -exponent)-1.0;\n  exponent = exponent+127.0;\n  result   = vec4(0,0,0,0);\n\n  result.a = floor(exponent/2.0);\n  exponent = exponent - result.a*2.0;\n  result.a = result.a + 128.0*sgn;\n\n  result.b = floor(mantissa * 128.0);\n  mantissa = mantissa - result.b / 128.0;\n  result.b = result.b + exponent*128.0;\n\n  result.g = floor(mantissa*32768.0);\n  mantissa = mantissa - result.g/32768.0;\n\n  result.r = floor(mantissa*8388608.0);\n  return result/255.0;\n}\n// Dragons end here\n\nint index;\nivec3 threadId;\n\nivec3 indexTo3D(int idx, ivec3 texDim) {\n  int z = int(idx / (texDim.x * texDim.y));\n  idx -= z * int(texDim.x * texDim.y);\n  int y = int(idx / texDim.x);\n  int x = int(integerMod(idx, texDim.x));\n  return ivec3(x, y, z);\n}\n\nfloat get32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  return decode32(texel);\n}\n\nfloat get16(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int w = texSize.x * 2;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize.x * 2, texSize.y));\n  return decode16(texel, index);\n}\n\nfloat get8(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int w = texSize.x * 4;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize.x * 4, texSize.y));\n  return decode8(texel, index);\n}\n\nfloat getMemoryOptimized32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int channel = integerMod(index, 4);\n  index = index / 4;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  index = index / 4;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  return texel[channel];\n}\n\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  return texture(tex, st / vec2(texSize));\n}\n\nvec4 getImage3D(sampler2DArray tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  return texture(tex, vec3(st / vec2(texSize), z));\n}\n\nfloat getFloatFromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return result[0];\n}\n\nvec2 getVec2FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec2(result[0], result[1]);\n}\n\nvec2 getMemoryOptimizedVec2(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 2);\n  index = index / 2;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  if (channel == 0) return vec2(texel.r, texel.g);\n  if (channel == 1) return vec2(texel.b, texel.a);\n  return vec2(0.0, 0.0);\n}\n\nvec3 getVec3FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec3(result[0], result[1], result[2]);\n}\n\nvec3 getMemoryOptimizedVec3(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int fieldIndex = 3 * (x + texDim.x * (y + texDim.y * z));\n  int vectorIndex = fieldIndex / 4;\n  int vectorOffset = fieldIndex - vectorIndex * 4;\n  int readY = vectorIndex / texSize.x;\n  int readX = vectorIndex - readY * texSize.x;\n  vec4 tex1 = texture(tex, (vec2(readX, readY) + 0.5) / vec2(texSize));\n\n  if (vectorOffset == 0) {\n    return tex1.xyz;\n  } else if (vectorOffset == 1) {\n    return tex1.yzw;\n  } else {\n    readX++;\n    if (readX >= texSize.x) {\n      readX = 0;\n      readY++;\n    }\n    vec4 tex2 = texture(tex, vec2(readX, readY) / vec2(texSize));\n    if (vectorOffset == 2) {\n      return vec3(tex1.z, tex1.w, tex2.x);\n    } else {\n      return vec3(tex1.w, tex2.x, tex2.y);\n    }\n  }\n}\n\nvec4 getVec4FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  return getImage2D(tex, texSize, texDim, z, y, x);\n}\n\nvec4 getMemoryOptimizedVec4(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 2);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  return vec4(texel.r, texel.g, texel.b, texel.a);\n}\n\nvec4 actualColor;\nvoid color(float r, float g, float b, float a) {\n  actualColor = vec4(r,g,b,a);\n}\n\nvoid color(float r, float g, float b) {\n  color(r,g,b,1.0);\n}\n\nfloat modulo(float number, float divisor) {\n  if (number < 0.0) {\n    number = abs(number);\n    if (divisor < 0.0) {\n      divisor = abs(divisor);\n    }\n    return -mod(number, divisor);\n  }\n  if (divisor < 0.0) {\n    divisor = abs(divisor);\n  }\n  return mod(number, divisor);\n}\n\n__INJECTED_NATIVE__;\n__MAIN_CONSTANTS__;\n__MAIN_ARGUMENTS__;\n__KERNEL__;\n\nvoid main(void) {\n  index = int(vTexCoord.s * float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\n  __MAIN_RESULT__;\n}`;\n\nmodule.exports = {\n  fragmentShader\n};\n},{}],73:[function(require,module,exports){\nconst { utils } = require('../../utils');\nconst { WebGLFunctionNode } = require('../web-gl/function-node');\n\nclass WebGL2FunctionNode extends WebGLFunctionNode {\n\n  astIdentifierExpression(idtNode, retArr) {\n    if (idtNode.type !== 'Identifier') {\n      throw this.astErrorOutput(\n        'IdentifierExpression - not an Identifier',\n        idtNode\n      );\n    }\n\n    const type = this.getType(idtNode);\n\n    const name = utils.sanitizeName(idtNode.name);\n    if (idtNode.name === 'Infinity') {\n      retArr.push('intBitsToFloat(2139095039)');\n    } else if (type === 'Boolean') {\n      if (this.argumentNames.indexOf(name) > -1) {\n        retArr.push(`bool(user_${name})`);\n      } else {\n        retArr.push(`user_${name}`);\n      }\n    } else {\n      retArr.push(`user_${name}`);\n    }\n\n    return retArr;\n  }\n}\n\nmodule.exports = {\n  WebGL2FunctionNode\n};\n},{\"../../utils\":114,\"../web-gl/function-node\":38}],74:[function(require,module,exports){\nconst { WebGL2KernelValueBoolean } = require('./kernel-value/boolean');\nconst { WebGL2KernelValueFloat } = require('./kernel-value/float');\nconst { WebGL2KernelValueInteger } = require('./kernel-value/integer');\n\nconst { WebGL2KernelValueHTMLImage } = require('./kernel-value/html-image');\nconst { WebGL2KernelValueDynamicHTMLImage } = require('./kernel-value/dynamic-html-image');\n\nconst { WebGL2KernelValueHTMLImageArray } = require('./kernel-value/html-image-array');\nconst { WebGL2KernelValueDynamicHTMLImageArray } = require('./kernel-value/dynamic-html-image-array');\n\nconst { WebGL2KernelValueHTMLVideo } = require('./kernel-value/html-video');\nconst { WebGL2KernelValueDynamicHTMLVideo } = require('./kernel-value/dynamic-html-video');\n\nconst { WebGL2KernelValueSingleInput } = require('./kernel-value/single-input');\nconst { WebGL2KernelValueDynamicSingleInput } = require('./kernel-value/dynamic-single-input');\n\nconst { WebGL2KernelValueUnsignedInput } = require('./kernel-value/unsigned-input');\nconst { WebGL2KernelValueDynamicUnsignedInput } = require('./kernel-value/dynamic-unsigned-input');\n\nconst { WebGL2KernelValueMemoryOptimizedNumberTexture } = require('./kernel-value/memory-optimized-number-texture');\nconst { WebGL2KernelValueDynamicMemoryOptimizedNumberTexture } = require('./kernel-value/dynamic-memory-optimized-number-texture');\n\nconst { WebGL2KernelValueNumberTexture } = require('./kernel-value/number-texture');\nconst { WebGL2KernelValueDynamicNumberTexture } = require('./kernel-value/dynamic-number-texture');\n\nconst { WebGL2KernelValueSingleArray } = require('./kernel-value/single-array');\nconst { WebGL2KernelValueDynamicSingleArray } = require('./kernel-value/dynamic-single-array');\n\nconst { WebGL2KernelValueSingleArray1DI } = require('./kernel-value/single-array1d-i');\nconst { WebGL2KernelValueDynamicSingleArray1DI } = require('./kernel-value/dynamic-single-array1d-i');\n\nconst { WebGL2KernelValueSingleArray2DI } = require('./kernel-value/single-array2d-i');\nconst { WebGL2KernelValueDynamicSingleArray2DI } = require('./kernel-value/dynamic-single-array2d-i');\n\nconst { WebGL2KernelValueSingleArray3DI } = require('./kernel-value/single-array3d-i');\nconst { WebGL2KernelValueDynamicSingleArray3DI } = require('./kernel-value/dynamic-single-array3d-i');\n\nconst { WebGL2KernelValueArray2 } = require('./kernel-value/array2');\nconst { WebGL2KernelValueArray3 } = require('./kernel-value/array3');\nconst { WebGL2KernelValueArray4 } = require('./kernel-value/array4');\n\nconst { WebGL2KernelValueUnsignedArray } = require('./kernel-value/unsigned-array');\nconst { WebGL2KernelValueDynamicUnsignedArray } = require('./kernel-value/dynamic-unsigned-array');\n\nconst kernelValueMaps = {\n  unsigned: {\n    dynamic: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Integer': WebGL2KernelValueInteger,\n      'Float': WebGL2KernelValueFloat,\n      'Array': WebGL2KernelValueDynamicUnsignedArray,\n      'Array(2)': WebGL2KernelValueArray2,\n      'Array(3)': WebGL2KernelValueArray3,\n      'Array(4)': WebGL2KernelValueArray4,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGL2KernelValueDynamicUnsignedInput,\n      'NumberTexture': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGL2KernelValueDynamicHTMLImage,\n      'OffscreenCanvas': WebGL2KernelValueDynamicHTMLImage,\n      'HTMLImage': WebGL2KernelValueDynamicHTMLImage,\n      'ImageBitmap': WebGL2KernelValueDynamicHTMLImage,\n      'ImageData': WebGL2KernelValueDynamicHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueDynamicHTMLImageArray,\n      'HTMLVideo': WebGL2KernelValueDynamicHTMLVideo,\n    },\n    static: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Float': WebGL2KernelValueFloat,\n      'Integer': WebGL2KernelValueInteger,\n      'Array': WebGL2KernelValueUnsignedArray,\n      'Array(2)': WebGL2KernelValueArray2,\n      'Array(3)': WebGL2KernelValueArray3,\n      'Array(4)': WebGL2KernelValueArray4,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGL2KernelValueUnsignedInput,\n      'NumberTexture': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGL2KernelValueHTMLImage,\n      'OffscreenCanvas': WebGL2KernelValueHTMLImage,\n      'HTMLImage': WebGL2KernelValueHTMLImage,\n      'ImageBitmap': WebGL2KernelValueHTMLImage,\n      'ImageData': WebGL2KernelValueHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueHTMLImageArray,\n      'HTMLVideo': WebGL2KernelValueHTMLVideo,\n    }\n  },\n  single: {\n    dynamic: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Integer': WebGL2KernelValueInteger,\n      'Float': WebGL2KernelValueFloat,\n      'Array': WebGL2KernelValueDynamicSingleArray,\n      'Array(2)': WebGL2KernelValueArray2,\n      'Array(3)': WebGL2KernelValueArray3,\n      'Array(4)': WebGL2KernelValueArray4,\n      'Array1D(2)': WebGL2KernelValueDynamicSingleArray1DI,\n      'Array1D(3)': WebGL2KernelValueDynamicSingleArray1DI,\n      'Array1D(4)': WebGL2KernelValueDynamicSingleArray1DI,\n      'Array2D(2)': WebGL2KernelValueDynamicSingleArray2DI,\n      'Array2D(3)': WebGL2KernelValueDynamicSingleArray2DI,\n      'Array2D(4)': WebGL2KernelValueDynamicSingleArray2DI,\n      'Array3D(2)': WebGL2KernelValueDynamicSingleArray3DI,\n      'Array3D(3)': WebGL2KernelValueDynamicSingleArray3DI,\n      'Array3D(4)': WebGL2KernelValueDynamicSingleArray3DI,\n      'Input': WebGL2KernelValueDynamicSingleInput,\n      'NumberTexture': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGL2KernelValueDynamicHTMLImage,\n      'OffscreenCanvas': WebGL2KernelValueDynamicHTMLImage,\n      'HTMLImage': WebGL2KernelValueDynamicHTMLImage,\n      'ImageBitmap': WebGL2KernelValueDynamicHTMLImage,\n      'ImageData': WebGL2KernelValueDynamicHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueDynamicHTMLImageArray,\n      'HTMLVideo': WebGL2KernelValueDynamicHTMLVideo,\n    },\n    static: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Float': WebGL2KernelValueFloat,\n      'Integer': WebGL2KernelValueInteger,\n      'Array': WebGL2KernelValueSingleArray,\n      'Array(2)': WebGL2KernelValueArray2,\n      'Array(3)': WebGL2KernelValueArray3,\n      'Array(4)': WebGL2KernelValueArray4,\n      'Array1D(2)': WebGL2KernelValueSingleArray1DI,\n      'Array1D(3)': WebGL2KernelValueSingleArray1DI,\n      'Array1D(4)': WebGL2KernelValueSingleArray1DI,\n      'Array2D(2)': WebGL2KernelValueSingleArray2DI,\n      'Array2D(3)': WebGL2KernelValueSingleArray2DI,\n      'Array2D(4)': WebGL2KernelValueSingleArray2DI,\n      'Array3D(2)': WebGL2KernelValueSingleArray3DI,\n      'Array3D(3)': WebGL2KernelValueSingleArray3DI,\n      'Array3D(4)': WebGL2KernelValueSingleArray3DI,\n      'Input': WebGL2KernelValueSingleInput,\n      'NumberTexture': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGL2KernelValueHTMLImage,\n      'OffscreenCanvas': WebGL2KernelValueHTMLImage,\n      'HTMLImage': WebGL2KernelValueHTMLImage,\n      'ImageBitmap': WebGL2KernelValueHTMLImage,\n      'ImageData': WebGL2KernelValueHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueHTMLImageArray,\n      'HTMLVideo': WebGL2KernelValueHTMLVideo,\n    }\n  },\n};\n\nfunction lookupKernelValueType(type, dynamic, precision, value) {\n  if (!type) {\n    throw new Error('type missing');\n  }\n  if (!dynamic) {\n    throw new Error('dynamic missing');\n  }\n  if (!precision) {\n    throw new Error('precision missing');\n  }\n  if (value.type) {\n    type = value.type;\n  }\n  const types = kernelValueMaps[precision][dynamic];\n  if (types[type] === false) {\n    return null;\n  } else if (types[type] === undefined) {\n    throw new Error(`Could not find a KernelValue for ${ type }`);\n  }\n  return types[type];\n}\n\nmodule.exports = {\n  kernelValueMaps,\n  lookupKernelValueType\n};\n},{\"./kernel-value/array2\":75,\"./kernel-value/array3\":76,\"./kernel-value/array4\":77,\"./kernel-value/boolean\":78,\"./kernel-value/dynamic-html-image\":80,\"./kernel-value/dynamic-html-image-array\":79,\"./kernel-value/dynamic-html-video\":81,\"./kernel-value/dynamic-memory-optimized-number-texture\":82,\"./kernel-value/dynamic-number-texture\":83,\"./kernel-value/dynamic-single-array\":84,\"./kernel-value/dynamic-single-array1d-i\":85,\"./kernel-value/dynamic-single-array2d-i\":86,\"./kernel-value/dynamic-single-array3d-i\":87,\"./kernel-value/dynamic-single-input\":88,\"./kernel-value/dynamic-unsigned-array\":89,\"./kernel-value/dynamic-unsigned-input\":90,\"./kernel-value/float\":91,\"./kernel-value/html-image\":93,\"./kernel-value/html-image-array\":92,\"./kernel-value/html-video\":94,\"./kernel-value/integer\":95,\"./kernel-value/memory-optimized-number-texture\":96,\"./kernel-value/number-texture\":97,\"./kernel-value/single-array\":98,\"./kernel-value/single-array1d-i\":99,\"./kernel-value/single-array2d-i\":100,\"./kernel-value/single-array3d-i\":101,\"./kernel-value/single-input\":102,\"./kernel-value/unsigned-array\":103,\"./kernel-value/unsigned-input\":104}],75:[function(require,module,exports){\nconst { WebGLKernelValueArray2 } = require('../../web-gl/kernel-value/array2');\n\nclass WebGL2KernelValueArray2 extends WebGLKernelValueArray2 {}\n\nmodule.exports = {\n  WebGL2KernelValueArray2\n};\n},{\"../../web-gl/kernel-value/array2\":41}],76:[function(require,module,exports){\nconst { WebGLKernelValueArray3 } = require('../../web-gl/kernel-value/array3');\n\nclass WebGL2KernelValueArray3 extends WebGLKernelValueArray3 {}\n\nmodule.exports = {\n  WebGL2KernelValueArray3\n};\n},{\"../../web-gl/kernel-value/array3\":42}],77:[function(require,module,exports){\nconst { WebGLKernelValueArray4 } = require('../../web-gl/kernel-value/array4');\n\nclass WebGL2KernelValueArray4 extends WebGLKernelValueArray4 {}\n\nmodule.exports = {\n  WebGL2KernelValueArray4\n};\n},{\"../../web-gl/kernel-value/array4\":43}],78:[function(require,module,exports){\nconst { WebGLKernelValueBoolean } = require('../../web-gl/kernel-value/boolean');\n\nclass WebGL2KernelValueBoolean extends WebGLKernelValueBoolean {}\n\nmodule.exports = {\n  WebGL2KernelValueBoolean\n};\n},{\"../../web-gl/kernel-value/boolean\":44}],79:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueHTMLImageArray } = require('./html-image-array');\n\nclass WebGL2KernelValueDynamicHTMLImageArray extends WebGL2KernelValueHTMLImageArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2DArray ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(images) {\n    const { width, height } = images[0];\n    this.checkSize(width, height);\n    this.dimensions = [width, height, images.length];\n    this.textureSize = [width, height];\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(images);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicHTMLImageArray\n};\n},{\"../../../utils\":114,\"./html-image-array\":92}],80:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicHTMLImage } = require('../../web-gl/kernel-value/dynamic-html-image');\n\nclass WebGL2KernelValueDynamicHTMLImage extends WebGLKernelValueDynamicHTMLImage {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicHTMLImage\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/dynamic-html-image\":45}],81:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueDynamicHTMLImage } = require('./dynamic-html-image');\n\nclass WebGL2KernelValueDynamicHTMLVideo extends WebGL2KernelValueDynamicHTMLImage {}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicHTMLVideo\n};\n},{\"../../../utils\":114,\"./dynamic-html-image\":80}],82:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicMemoryOptimizedNumberTexture } = require('../../web-gl/kernel-value/dynamic-memory-optimized-number-texture');\n\nclass WebGL2KernelValueDynamicMemoryOptimizedNumberTexture extends WebGLKernelValueDynamicMemoryOptimizedNumberTexture {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicMemoryOptimizedNumberTexture\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/dynamic-memory-optimized-number-texture\":47}],83:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicNumberTexture } = require('../../web-gl/kernel-value/dynamic-number-texture');\n\nclass WebGL2KernelValueDynamicNumberTexture extends WebGLKernelValueDynamicNumberTexture {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicNumberTexture\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/dynamic-number-texture\":48}],84:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray } = require('../../web-gl2/kernel-value/single-array');\n\nclass WebGL2KernelValueDynamicSingleArray extends WebGL2KernelValueSingleArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray\n};\n},{\"../../../utils\":114,\"../../web-gl2/kernel-value/single-array\":98}],85:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray1DI } = require('../../web-gl2/kernel-value/single-array1d-i');\n\nclass WebGL2KernelValueDynamicSingleArray1DI extends WebGL2KernelValueSingleArray1DI {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray1DI\n};\n},{\"../../../utils\":114,\"../../web-gl2/kernel-value/single-array1d-i\":99}],86:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray2DI } = require('../../web-gl2/kernel-value/single-array2d-i');\n\nclass WebGL2KernelValueDynamicSingleArray2DI extends WebGL2KernelValueSingleArray2DI {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray2DI\n};\n},{\"../../../utils\":114,\"../../web-gl2/kernel-value/single-array2d-i\":100}],87:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray3DI } = require('../../web-gl2/kernel-value/single-array3d-i');\n\nclass WebGL2KernelValueDynamicSingleArray3DI extends WebGL2KernelValueSingleArray3DI {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray3DI\n};\n},{\"../../../utils\":114,\"../../web-gl2/kernel-value/single-array3d-i\":101}],88:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleInput } = require('../../web-gl2/kernel-value/single-input');\n\nclass WebGL2KernelValueDynamicSingleInput extends WebGL2KernelValueSingleInput {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleInput\n};\n},{\"../../../utils\":114,\"../../web-gl2/kernel-value/single-input\":102}],89:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicUnsignedArray } = require('../../web-gl/kernel-value/dynamic-unsigned-array');\n\nclass WebGL2KernelValueDynamicUnsignedArray extends WebGLKernelValueDynamicUnsignedArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicUnsignedArray\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/dynamic-unsigned-array\":54}],90:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicUnsignedInput } = require('../../web-gl/kernel-value/dynamic-unsigned-input');\n\nclass WebGL2KernelValueDynamicUnsignedInput extends WebGLKernelValueDynamicUnsignedInput {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicUnsignedInput\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/dynamic-unsigned-input\":55}],91:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueFloat } = require('../../web-gl/kernel-value/float');\n\nclass WebGL2KernelValueFloat extends WebGLKernelValueFloat {}\n\nmodule.exports = {\n  WebGL2KernelValueFloat\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/float\":56}],92:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('../../web-gl/kernel-value/array');\n\nclass WebGL2KernelValueHTMLImageArray extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.checkSize(value[0].width, value[0].height);\n    this.dimensions = [value[0].width, value[0].height, value.length];\n    this.textureSize = [value[0].width, value[0].height];\n  }\n  defineTexture() {\n    const { context: gl } = this;\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D_ARRAY, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2DArray ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(images) {\n    const { context: gl } = this;\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D_ARRAY, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n    gl.texImage3D(\n      gl.TEXTURE_2D_ARRAY,\n      0,\n      gl.RGBA,\n      images[0].width,\n      images[0].height,\n      images.length,\n      0,\n      gl.RGBA,\n      gl.UNSIGNED_BYTE,\n      null\n    );\n    for (let i = 0; i < images.length; i++) {\n      const xOffset = 0;\n      const yOffset = 0;\n      const imageDepth = 1;\n      gl.texSubImage3D(\n        gl.TEXTURE_2D_ARRAY,\n        0,\n        xOffset,\n        yOffset,\n        i,\n        images[i].width,\n        images[i].height,\n        imageDepth,\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.uploadValue = images[i]\n      );\n    }\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueHTMLImageArray\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/array\":40}],93:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueHTMLImage } = require('../../web-gl/kernel-value/html-image');\n\nclass WebGL2KernelValueHTMLImage extends WebGLKernelValueHTMLImage {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueHTMLImage\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/html-image\":57}],94:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueHTMLImage } = require('./html-image');\n\nclass WebGL2KernelValueHTMLVideo extends WebGL2KernelValueHTMLImage {}\n\nmodule.exports = {\n  WebGL2KernelValueHTMLVideo\n};\n},{\"../../../utils\":114,\"./html-image\":93}],95:[function(require,module,exports){\nconst { WebGLKernelValueInteger } = require('../../web-gl/kernel-value/integer');\n\nclass WebGL2KernelValueInteger extends WebGLKernelValueInteger {\n  getSource(value) {\n    const variablePrecision = this.getVariablePrecisionString();\n    if (this.origin === 'constants') {\n      return `const ${ variablePrecision } int ${this.id} = ${ parseInt(value) };\\n`;\n    }\n    return `uniform ${ variablePrecision } int ${this.id};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1i(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueInteger\n};\n},{\"../../web-gl/kernel-value/integer\":60}],96:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueMemoryOptimizedNumberTexture } = require('../../web-gl/kernel-value/memory-optimized-number-texture');\n\nclass WebGL2KernelValueMemoryOptimizedNumberTexture extends WebGLKernelValueMemoryOptimizedNumberTexture {\n  getSource() {\n    const { id, sizeId, textureSize, dimensionsId, dimensions } = this;\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform sampler2D ${id}`,\n      `${ variablePrecision } ivec2 ${sizeId} = ivec2(${textureSize[0]}, ${textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${dimensionsId} = ivec3(${dimensions[0]}, ${dimensions[1]}, ${dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueMemoryOptimizedNumberTexture\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/memory-optimized-number-texture\":61}],97:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueNumberTexture } = require('../../web-gl/kernel-value/number-texture');\n\nclass WebGL2KernelValueNumberTexture extends WebGLKernelValueNumberTexture {\n  getSource() {\n    const { id, sizeId, textureSize, dimensionsId, dimensions } = this;\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${id}`,\n      `${ variablePrecision } ivec2 ${sizeId} = ivec2(${textureSize[0]}, ${textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${dimensionsId} = ivec3(${dimensions[0]}, ${dimensions[1]}, ${dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueNumberTexture\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/number-texture\":62}],98:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray } = require('../../web-gl/kernel-value/single-array');\n\nclass WebGL2KernelValueSingleArray extends WebGLKernelValueSingleArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/single-array\":63}],99:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray1DI } = require('../../web-gl/kernel-value/single-array1d-i');\n\nclass WebGL2KernelValueSingleArray1DI extends WebGLKernelValueSingleArray1DI {\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray1DI\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/single-array1d-i\":64}],100:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray2DI } = require('../../web-gl/kernel-value/single-array2d-i');\n\nclass WebGL2KernelValueSingleArray2DI extends WebGLKernelValueSingleArray2DI {\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray2DI\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/single-array2d-i\":65}],101:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray3DI } = require('../../web-gl/kernel-value/single-array3d-i');\n\nclass WebGL2KernelValueSingleArray3DI extends WebGLKernelValueSingleArray3DI {\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray3DI\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/single-array3d-i\":66}],102:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleInput } = require('../../web-gl/kernel-value/single-input');\n\nclass WebGL2KernelValueSingleInput extends WebGLKernelValueSingleInput {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(input) {\n    const { context: gl } = this;\n    utils.flattenTo(input.value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleInput\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/single-input\":67}],103:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedArray } = require('../../web-gl/kernel-value/unsigned-array');\n\nclass WebGL2KernelValueUnsignedArray extends WebGLKernelValueUnsignedArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueUnsignedArray\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/unsigned-array\":68}],104:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedInput } = require('../../web-gl/kernel-value/unsigned-input');\n\nclass WebGL2KernelValueUnsignedInput extends WebGLKernelValueUnsignedInput {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueUnsignedInput\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/unsigned-input\":69}],105:[function(require,module,exports){\nconst { WebGLKernel } = require('../web-gl/kernel');\nconst { WebGL2FunctionNode } = require('./function-node');\nconst { FunctionBuilder } = require('../function-builder');\nconst { utils } = require('../../utils');\nconst { fragmentShader } = require('./fragment-shader');\nconst { vertexShader } = require('./vertex-shader');\nconst { lookupKernelValueType } = require('./kernel-value-maps');\n\nlet isSupported = null;\nlet testCanvas = null;\nlet testContext = null;\nlet testExtensions = null;\n\nlet features = null;\n\nclass WebGL2Kernel extends WebGLKernel {\n  static get isSupported() {\n    if (isSupported !== null) {\n      return isSupported;\n    }\n    this.setupFeatureChecks();\n    isSupported = this.isContextMatch(testContext);\n    return isSupported;\n  }\n\n  static setupFeatureChecks() {\n    if (typeof document !== 'undefined') {\n      testCanvas = document.createElement('canvas');\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      testCanvas = new OffscreenCanvas(0, 0);\n    }\n    if (!testCanvas) return;\n    testContext = testCanvas.getContext('webgl2');\n    if (!testContext || !testContext.getExtension) return;\n    testExtensions = {\n      EXT_color_buffer_float: testContext.getExtension('EXT_color_buffer_float'),\n      OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear'),\n    };\n    features = this.getFeatures();\n  }\n\n  static isContextMatch(context) {\n    if (typeof WebGL2RenderingContext !== 'undefined') {\n      return context instanceof WebGL2RenderingContext;\n    }\n    return false;\n  }\n\n  static getFeatures() {\n    const gl = this.testContext;\n    return Object.freeze({\n      isFloatRead: this.getIsFloatRead(),\n      isIntegerDivisionAccurate: this.getIsIntegerDivisionAccurate(),\n      isSpeedTacticSupported: this.getIsSpeedTacticSupported(),\n      kernelMap: true,\n      isTextureFloat: true,\n      isDrawBuffers: true,\n      channelCount: this.getChannelCount(),\n      maxTextureSize: this.getMaxTextureSize(),\n      lowIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT),\n      lowFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT),\n      mediumIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT),\n      mediumFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT),\n      highIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT),\n      highFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT),\n    });\n  }\n\n  static getIsTextureFloat() {\n    return true;\n  }\n\n  static getChannelCount() {\n    return testContext.getParameter(testContext.MAX_DRAW_BUFFERS);\n  }\n\n  static getMaxTextureSize() {\n    return testContext.getParameter(testContext.MAX_TEXTURE_SIZE);\n  }\n\n  static lookupKernelValueType(type, dynamic, precision, value) {\n    return lookupKernelValueType(type, dynamic, precision, value);\n  }\n\n  static get testCanvas() {\n    return testCanvas;\n  }\n\n  static get testContext() {\n    return testContext;\n  }\n\n  static get features() {\n    return features;\n  }\n\n  static get fragmentShader() {\n    return fragmentShader;\n  }\n  static get vertexShader() {\n    return vertexShader;\n  }\n\n  initContext() {\n    const settings = {\n      alpha: false,\n      depth: false,\n      antialias: false\n    };\n    return this.canvas.getContext('webgl2', settings);\n  }\n\n  initExtensions() {\n    this.extensions = {\n      EXT_color_buffer_float: this.context.getExtension('EXT_color_buffer_float'),\n      OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear'),\n    };\n  }\n\n  validateSettings(args) {\n    if (!this.validate) {\n      this.texSize = utils.getKernelTextureSize({\n        optimizeFloatMemory: this.optimizeFloatMemory,\n        precision: this.precision,\n      }, this.output);\n      return;\n    }\n\n    const { features } = this.constructor;\n    if (this.precision === 'single' && !features.isFloatRead) {\n      throw new Error('Float texture outputs are not supported');\n    } else if (!this.graphical && this.precision === null) {\n      this.precision = features.isFloatRead ? 'single' : 'unsigned';\n    }\n\n    if (this.fixIntegerDivisionAccuracy === null) {\n      this.fixIntegerDivisionAccuracy = !features.isIntegerDivisionAccurate;\n    } else if (this.fixIntegerDivisionAccuracy && features.isIntegerDivisionAccurate) {\n      this.fixIntegerDivisionAccuracy = false;\n    }\n\n    this.checkOutput();\n\n    if (!this.output || this.output.length === 0) {\n      if (args.length !== 1) {\n        throw new Error('Auto output only supported for kernels with only one input');\n      }\n\n      const argType = utils.getVariableType(args[0], this.strictIntegers);\n      switch (argType) {\n        case 'Array':\n          this.output = utils.getDimensions(argType);\n          break;\n        case 'NumberTexture':\n        case 'MemoryOptimizedNumberTexture':\n        case 'ArrayTexture(1)':\n        case 'ArrayTexture(2)':\n        case 'ArrayTexture(3)':\n        case 'ArrayTexture(4)':\n          this.output = args[0].output;\n          break;\n        default:\n          throw new Error('Auto output not supported for input type: ' + argType);\n      }\n    }\n\n    if (this.graphical) {\n      if (this.output.length !== 2) {\n        throw new Error('Output must have 2 dimensions on graphical mode');\n      }\n\n      if (this.precision === 'single') {\n        console.warn('Cannot use graphical mode and single precision at the same time');\n        this.precision = 'unsigned';\n      }\n\n      this.texSize = utils.clone(this.output);\n      return;\n    } else if (!this.graphical && this.precision === null && features.isTextureFloat) {\n      this.precision = 'single';\n    }\n\n    this.texSize = utils.getKernelTextureSize({\n      optimizeFloatMemory: this.optimizeFloatMemory,\n      precision: this.precision,\n    }, this.output);\n\n    this.checkTextureSize();\n  }\n\n  translateSource() {\n    const functionBuilder = FunctionBuilder.fromKernel(this, WebGL2FunctionNode, {\n      fixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy\n    });\n    this.translatedSource = functionBuilder.getPrototypeString('kernel');\n    this.setupReturnTypes(functionBuilder);\n  }\n\n  drawBuffers() {\n    this.context.drawBuffers(this.drawBuffersMap);\n  }\n\n  getTextureFormat() {\n    const { context: gl } = this;\n    switch (this.getInternalFormat()) {\n      case gl.R32F:\n        return gl.RED;\n      case gl.RG32F:\n        return gl.RG;\n      case gl.RGBA32F:\n        return gl.RGBA;\n      case gl.RGBA:\n        return gl.RGBA;\n      default:\n        throw new Error('Unknown internal format');\n    }\n  }\n  getInternalFormat() {\n    const { context: gl } = this;\n\n    if (this.precision === 'single') {\n      if (this.pipeline) {\n        switch (this.returnType) {\n          case 'Number':\n          case 'Float':\n          case 'Integer':\n            if (this.optimizeFloatMemory) {\n              return gl.RGBA32F;\n            } else {\n              return gl.R32F;\n            }\n            case 'Array(2)':\n              return gl.RG32F;\n            case 'Array(3)': \n            case 'Array(4)':\n              return gl.RGBA32F;\n            default:\n              throw new Error('Unhandled return type');\n        }\n      }\n      return gl.RGBA32F;\n    }\n    return gl.RGBA;\n  }\n\n  _setupOutputTexture() {\n    const gl = this.context;\n    if (this.texture) {\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture.texture, 0);\n      return;\n    }\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    const texture = gl.createTexture();\n    const texSize = this.texSize;\n    gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    const format = this.getInternalFormat();\n    if (this.precision === 'single') {\n      gl.texStorage2D(gl.TEXTURE_2D, 1, format, texSize[0], texSize[1]);\n    } else {\n      gl.texImage2D(gl.TEXTURE_2D, 0, format, texSize[0], texSize[1], 0, format, gl.UNSIGNED_BYTE, null);\n    }\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    this.texture = new this.TextureConstructor({\n      texture,\n      size: texSize,\n      dimensions: this.threadDim,\n      output: this.output,\n      context: this.context,\n      internalFormat: this.getInternalFormat(),\n      textureFormat: this.getTextureFormat(),\n      kernel: this,\n    });\n  }\n\n  _setupSubOutputTextures() {\n    const gl = this.context;\n    if (this.mappedTextures) {\n      for (let i = 0; i < this.subKernels.length; i++) {\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, this.mappedTextures[i].texture, 0);\n      }\n      return;\n    }\n    const texSize = this.texSize;\n    this.drawBuffersMap = [gl.COLOR_ATTACHMENT0];\n    this.mappedTextures = [];\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const texture = this.createTexture();\n      this.drawBuffersMap.push(gl.COLOR_ATTACHMENT0 + i + 1);\n      gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount + i);\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      const format = this.getInternalFormat();\n      if (this.precision === 'single') {\n        gl.texStorage2D(gl.TEXTURE_2D, 1, format, texSize[0], texSize[1]);\n      } else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      }\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, texture, 0);\n\n      this.mappedTextures.push(new this.TextureConstructor({\n        texture,\n        size: texSize,\n        dimensions: this.threadDim,\n        output: this.output,\n        context: this.context,\n        internalFormat: this.getInternalFormat(),\n        textureFormat: this.getTextureFormat(),\n        kernel: this,\n      }));\n    }\n  }\n\n  _getHeaderString() {\n    return '';\n  }\n\n  _getTextureCoordinate() {\n    const subKernels = this.subKernels;\n    const variablePrecision = this.getVariablePrecisionString(this.texSize, this.tactic);\n    if (subKernels === null || subKernels.length < 1) {\n      return `in ${ variablePrecision } vec2 vTexCoord;\\n`;\n    } else {\n      return `out ${ variablePrecision } vec2 vTexCoord;\\n`;\n    }\n  }\n\n  _getMainArgumentsString(args) {\n    const result = [];\n    const argumentNames = this.argumentNames;\n    for (let i = 0; i < argumentNames.length; i++) {\n      result.push(this.kernelArguments[i].getSource(args[i]));\n    }\n    return result.join('');\n  }\n\n  getKernelString() {\n    const result = [this.getKernelResultDeclaration()];\n    const subKernels = this.subKernels;\n    if (subKernels !== null) {\n      result.push(\n        'layout(location = 0) out vec4 data0'\n      );\n      switch (this.returnType) {\n        case 'Number':\n        case 'Float':\n        case 'Integer':\n          for (let i = 0; i < subKernels.length; i++) {\n            const subKernel = subKernels[i];\n            result.push(\n              subKernel.returnType === 'Integer' ?\n              `int subKernelResult_${ subKernel.name } = 0` :\n              `float subKernelResult_${ subKernel.name } = 0.0`,\n              `layout(location = ${ i + 1 }) out vec4 data${ i + 1 }`\n            );\n          }\n          break;\n        case 'Array(2)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec2 subKernelResult_${ subKernels[i].name }`,\n              `layout(location = ${ i + 1 }) out vec4 data${ i + 1 }`\n            );\n          }\n          break;\n        case 'Array(3)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec3 subKernelResult_${ subKernels[i].name }`,\n              `layout(location = ${ i + 1 }) out vec4 data${ i + 1 }`\n            );\n          }\n          break;\n        case 'Array(4)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec4 subKernelResult_${ subKernels[i].name }`,\n              `layout(location = ${ i + 1 }) out vec4 data${ i + 1 }`\n            );\n          }\n          break;\n      }\n    } else {\n      result.push(\n        'out vec4 data0'\n      );\n    }\n\n    return utils.linesToString(result) + this.translatedSource;\n  }\n\n  getMainResultGraphical() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0 = actualColor',\n    ]);\n  }\n\n  getMainResultPackedPixels() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        return this.getMainResultKernelPackedPixels() +\n          this.getMainResultSubKernelPackedPixels();\n      default:\n        throw new Error(`packed output only usable with Numbers, \"${this.returnType}\" specified`);\n    }\n  }\n\n  getMainResultKernelPackedPixels() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  data0 = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(kernelResult)`\n    ]);\n  }\n\n  getMainResultSubKernelPackedPixels() {\n    const result = [];\n    if (!this.subKernels) return '';\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  data${i + 1} = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(float(subKernelResult_${this.subKernels[i].name}))`\n        );\n      } else {\n        result.push(\n          `  data${i + 1} = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(subKernelResult_${this.subKernels[i].name})`\n        );\n      }\n    }\n    return utils.linesToString(result);\n  }\n\n  getMainResultKernelMemoryOptimizedFloats(result, channel) {\n    result.push(\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  data0.${channel} = kernelResult`\n    );\n  }\n\n  getMainResultSubKernelMemoryOptimizedFloats(result, channel) {\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  data${i + 1}.${channel} = float(subKernelResult_${subKernel.name})`\n        );\n      } else {\n        result.push(\n          `  data${i + 1}.${channel} = subKernelResult_${subKernel.name}`\n        );\n      }\n    }\n  }\n\n  getMainResultKernelNumberTexture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0[0] = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelNumberTexture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  data${i + 1}[0] = float(subKernelResult_${subKernel.name})`\n        );\n      } else {\n        result.push(\n          `  data${i + 1}[0] = subKernelResult_${subKernel.name}`\n        );\n      }\n    }\n    return result;\n  }\n\n  getMainResultKernelArray2Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0[0] = kernelResult[0]',\n      '  data0[1] = kernelResult[1]',\n    ];\n  }\n\n  getMainResultSubKernelArray2Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      result.push(\n        `  data${i + 1}[0] = subKernelResult_${subKernel.name}[0]`,\n        `  data${i + 1}[1] = subKernelResult_${subKernel.name}[1]`\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray3Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0[0] = kernelResult[0]',\n      '  data0[1] = kernelResult[1]',\n      '  data0[2] = kernelResult[2]',\n    ];\n  }\n\n  getMainResultSubKernelArray3Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      result.push(\n        `  data${i + 1}[0] = subKernelResult_${subKernel.name}[0]`,\n        `  data${i + 1}[1] = subKernelResult_${subKernel.name}[1]`,\n        `  data${i + 1}[2] = subKernelResult_${subKernel.name}[2]`\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray4Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0 = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelArray4Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      result.push(\n        `  data${i + 1} = subKernelResult_${this.subKernels[i].name}`\n      );\n    }\n    return result;\n  }\n\n  destroyExtensions() {\n    this.extensions.EXT_color_buffer_float = null;\n    this.extensions.OES_texture_float_linear = null;\n  }\n\n  toJSON() {\n    const json = super.toJSON();\n    json.functionNodes = FunctionBuilder.fromKernel(this, WebGL2FunctionNode).toJSON();\n    json.settings.threadDim = this.threadDim;\n    return json;\n  }\n}\n\nmodule.exports = {\n  WebGL2Kernel\n};\n},{\"../../utils\":114,\"../function-builder\":9,\"../web-gl/kernel\":70,\"./fragment-shader\":72,\"./function-node\":73,\"./kernel-value-maps\":74,\"./vertex-shader\":106}],106:[function(require,module,exports){\nconst vertexShader = `#version 300 es\n__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n\nin vec2 aPos;\nin vec2 aTexCoord;\n\nout vec2 vTexCoord;\nuniform vec2 ratio;\n\nvoid main(void) {\n  gl_Position = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\n  vTexCoord = aTexCoord;\n}`;\n\nmodule.exports = {\n  vertexShader\n};\n},{}],107:[function(require,module,exports){\nconst lib = require('./index');\nconst GPU = lib.GPU;\nfor (const p in lib) {\n  if (!lib.hasOwnProperty(p)) continue;\n  if (p === 'GPU') continue; \n  GPU[p] = lib[p];\n}\n\nif (typeof window !== 'undefined') {\n  bindTo(window);\n}\nif (typeof self !== 'undefined') {\n  bindTo(self);\n}\n\nfunction bindTo(target) {\n  if (target.GPU) return;\n  Object.defineProperty(target, 'GPU', {\n    get() {\n      return GPU;\n    }\n  });\n}\n\nmodule.exports = lib;\n},{\"./index\":109}],108:[function(require,module,exports){\nconst { gpuMock } = require('gpu-mock.js');\nconst { utils } = require('./utils');\nconst { Kernel } = require('./backend/kernel');\nconst { CPUKernel } = require('./backend/cpu/kernel');\nconst { HeadlessGLKernel } = require('./backend/headless-gl/kernel');\nconst { WebGL2Kernel } = require('./backend/web-gl2/kernel');\nconst { WebGLKernel } = require('./backend/web-gl/kernel');\nconst { kernelRunShortcut } = require('./kernel-run-shortcut');\n\n\nconst kernelOrder = [HeadlessGLKernel, WebGL2Kernel, WebGLKernel];\n\nconst kernelTypes = ['gpu', 'cpu'];\n\nconst internalKernels = {\n  'headlessgl': HeadlessGLKernel,\n  'webgl2': WebGL2Kernel,\n  'webgl': WebGLKernel,\n};\n\nlet validate = true;\n\nclass GPU {\n  static disableValidation() {\n    validate = false;\n  }\n\n  static enableValidation() {\n    validate = true;\n  }\n\n  static get isGPUSupported() {\n    return kernelOrder.some(Kernel => Kernel.isSupported);\n  }\n\n  static get isKernelMapSupported() {\n    return kernelOrder.some(Kernel => Kernel.isSupported && Kernel.features.kernelMap);\n  }\n\n  static get isOffscreenCanvasSupported() {\n    return (typeof Worker !== 'undefined' && typeof OffscreenCanvas !== 'undefined') || typeof importScripts !== 'undefined';\n  }\n\n  static get isWebGLSupported() {\n    return WebGLKernel.isSupported;\n  }\n\n  static get isWebGL2Supported() {\n    return WebGL2Kernel.isSupported;\n  }\n\n  static get isHeadlessGLSupported() {\n    return HeadlessGLKernel.isSupported;\n  }\n\n  static get isCanvasSupported() {\n    return typeof HTMLCanvasElement !== 'undefined';\n  }\n\n  static get isGPUHTMLImageArraySupported() {\n    return WebGL2Kernel.isSupported;\n  }\n\n  static get isSinglePrecisionSupported() {\n    return kernelOrder.some(Kernel => Kernel.isSupported && Kernel.features.isFloatRead && Kernel.features.isTextureFloat);\n  }\n\n  constructor(settings) {\n    settings = settings || {};\n    this.canvas = settings.canvas || null;\n    this.context = settings.context || null;\n    this.mode = settings.mode;\n    this.Kernel = null;\n    this.kernels = [];\n    this.functions = [];\n    this.nativeFunctions = [];\n    this.injectedNative = null;\n    if (this.mode === 'dev') return;\n    this.chooseKernel();\n    if (settings.functions) {\n      for (let i = 0; i < settings.functions.length; i++) {\n        this.addFunction(settings.functions[i]);\n      }\n    }\n\n    if (settings.nativeFunctions) {\n      for (const p in settings.nativeFunctions) {\n        if (!settings.nativeFunctions.hasOwnProperty(p)) continue;\n        const s = settings.nativeFunctions[p];\n        const { name, source } = s;\n        this.addNativeFunction(name, source, s);\n      }\n    }\n  }\n\n  chooseKernel() {\n    if (this.Kernel) return;\n\n    let Kernel = null;\n\n    if (this.context) {\n      for (let i = 0; i < kernelOrder.length; i++) {\n        const ExternalKernel = kernelOrder[i];\n        if (ExternalKernel.isContextMatch(this.context)) {\n          if (!ExternalKernel.isSupported) {\n            throw new Error(`Kernel type ${ExternalKernel.name} not supported`);\n          }\n          Kernel = ExternalKernel;\n          break;\n        }\n      }\n      if (Kernel === null) {\n        throw new Error('unknown Context');\n      }\n    } else if (this.mode) {\n      if (this.mode in internalKernels) {\n        if (!validate || internalKernels[this.mode].isSupported) {\n          Kernel = internalKernels[this.mode];\n        }\n      } else if (this.mode === 'gpu') {\n        for (let i = 0; i < kernelOrder.length; i++) {\n          if (kernelOrder[i].isSupported) {\n            Kernel = kernelOrder[i];\n            break;\n          }\n        }\n      } else if (this.mode === 'cpu') {\n        Kernel = CPUKernel;\n      }\n      if (!Kernel) {\n        throw new Error(`A requested mode of \"${this.mode}\" and is not supported`);\n      }\n    } else {\n      for (let i = 0; i < kernelOrder.length; i++) {\n        if (kernelOrder[i].isSupported) {\n          Kernel = kernelOrder[i];\n          break;\n        }\n      }\n      if (!Kernel) {\n        Kernel = CPUKernel;\n      }\n    }\n\n    if (!this.mode) {\n      this.mode = Kernel.mode;\n    }\n    this.Kernel = Kernel;\n  }\n\n  createKernel(source, settings) {\n    if (typeof source === 'undefined') {\n      throw new Error('Missing source parameter');\n    }\n    if (typeof source !== 'object' && !utils.isFunction(source) && typeof source !== 'string') {\n      throw new Error('source parameter not a function');\n    }\n\n    const kernels = this.kernels;\n    if (this.mode === 'dev') {\n      const devKernel = gpuMock(source, upgradeDeprecatedCreateKernelSettings(settings));\n      kernels.push(devKernel);\n      return devKernel;\n    }\n\n    source = typeof source === 'function' ? source.toString() : source;\n    const switchableKernels = {};\n    const settingsCopy = upgradeDeprecatedCreateKernelSettings(settings) || {};\n    if (settings && typeof settings.argumentTypes === 'object') {\n      settingsCopy.argumentTypes = Object.keys(settings.argumentTypes).map(argumentName => settings.argumentTypes[argumentName]);\n    }\n\n    function onRequestFallback(args) {\n      console.warn('Falling back to CPU');\n      const fallbackKernel = new CPUKernel(source, {\n        argumentTypes: kernelRun.argumentTypes,\n        constantTypes: kernelRun.constantTypes,\n        graphical: kernelRun.graphical,\n        loopMaxIterations: kernelRun.loopMaxIterations,\n        constants: kernelRun.constants,\n        dynamicOutput: kernelRun.dynamicOutput,\n        dynamicArgument: kernelRun.dynamicArguments,\n        output: kernelRun.output,\n        precision: kernelRun.precision,\n        pipeline: kernelRun.pipeline,\n        immutable: kernelRun.immutable,\n        optimizeFloatMemory: kernelRun.optimizeFloatMemory,\n        fixIntegerDivisionAccuracy: kernelRun.fixIntegerDivisionAccuracy,\n        functions: kernelRun.functions,\n        nativeFunctions: kernelRun.nativeFunctions,\n        injectedNative: kernelRun.injectedNative,\n        subKernels: kernelRun.subKernels,\n        strictIntegers: kernelRun.strictIntegers,\n        debug: kernelRun.debug,\n      });\n      fallbackKernel.build.apply(fallbackKernel, args);\n      const result = fallbackKernel.run.apply(fallbackKernel, args);\n      kernelRun.replaceKernel(fallbackKernel);\n      return result;\n    }\n\n    function onRequestSwitchKernel(reasons, args, _kernel) {\n      if (_kernel.debug) {\n        console.warn('Switching kernels');\n      }\n      let newOutput = null;\n      if (_kernel.signature && !switchableKernels[_kernel.signature]) {\n        switchableKernels[_kernel.signature] = _kernel;\n      }\n      if (_kernel.dynamicOutput) {\n        for (let i = reasons.length - 1; i >= 0; i--) {\n          const reason = reasons[i];\n          if (reason.type === 'outputPrecisionMismatch') {\n            newOutput = reason.needed;\n          }\n        }\n      }\n\n      const Constructor = _kernel.constructor;\n      const argumentTypes = Constructor.getArgumentTypes(_kernel, args);\n      const signature = Constructor.getSignature(_kernel, argumentTypes);\n      const existingKernel = switchableKernels[signature];\n      if (existingKernel) {\n        existingKernel.onActivate(_kernel);\n        return existingKernel;\n      }\n\n      const newKernel = switchableKernels[signature] = new Constructor(source, {\n        argumentTypes,\n        constantTypes: _kernel.constantTypes,\n        graphical: _kernel.graphical,\n        loopMaxIterations: _kernel.loopMaxIterations,\n        constants: _kernel.constants,\n        dynamicOutput: _kernel.dynamicOutput,\n        dynamicArgument: _kernel.dynamicArguments,\n        context: _kernel.context,\n        canvas: _kernel.canvas,\n        output: newOutput || _kernel.output,\n        precision: _kernel.precision,\n        pipeline: _kernel.pipeline,\n        immutable: _kernel.immutable,\n        optimizeFloatMemory: _kernel.optimizeFloatMemory,\n        fixIntegerDivisionAccuracy: _kernel.fixIntegerDivisionAccuracy,\n        functions: _kernel.functions,\n        nativeFunctions: _kernel.nativeFunctions,\n        injectedNative: _kernel.injectedNative,\n        subKernels: _kernel.subKernels,\n        strictIntegers: _kernel.strictIntegers,\n        debug: _kernel.debug,\n        gpu: _kernel.gpu,\n        validate,\n        returnType: _kernel.returnType,\n        tactic: _kernel.tactic,\n        onRequestFallback,\n        onRequestSwitchKernel,\n        texture: _kernel.texture,\n        mappedTextures: _kernel.mappedTextures,\n        drawBuffersMap: _kernel.drawBuffersMap,\n      });\n      newKernel.build.apply(newKernel, args);\n      kernelRun.replaceKernel(newKernel);\n      kernels.push(newKernel);\n      return newKernel;\n    }\n    const mergedSettings = Object.assign({\n      context: this.context,\n      canvas: this.canvas,\n      functions: this.functions,\n      nativeFunctions: this.nativeFunctions,\n      injectedNative: this.injectedNative,\n      gpu: this,\n      validate,\n      onRequestFallback,\n      onRequestSwitchKernel\n    }, settingsCopy);\n\n    const kernel = new this.Kernel(source, mergedSettings);\n    const kernelRun = kernelRunShortcut(kernel);\n\n    if (!this.canvas) {\n      this.canvas = kernel.canvas;\n    }\n\n    if (!this.context) {\n      this.context = kernel.context;\n    }\n\n    kernels.push(kernel);\n\n    return kernelRun;\n  }\n\n  createKernelMap() {\n    let fn;\n    let settings;\n    const argument2Type = typeof arguments[arguments.length - 2];\n    if (argument2Type === 'function' || argument2Type === 'string') {\n      fn = arguments[arguments.length - 2];\n      settings = arguments[arguments.length - 1];\n    } else {\n      fn = arguments[arguments.length - 1];\n    }\n\n    if (this.mode !== 'dev') {\n      if (!this.Kernel.isSupported || !this.Kernel.features.kernelMap) {\n        if (this.mode && kernelTypes.indexOf(this.mode) < 0) {\n          throw new Error(`kernelMap not supported on ${this.Kernel.name}`);\n        }\n      }\n    }\n\n    const settingsCopy = upgradeDeprecatedCreateKernelSettings(settings);\n    if (settings && typeof settings.argumentTypes === 'object') {\n      settingsCopy.argumentTypes = Object.keys(settings.argumentTypes).map(argumentName => settings.argumentTypes[argumentName]);\n    }\n\n    if (Array.isArray(arguments[0])) {\n      settingsCopy.subKernels = [];\n      const functions = arguments[0];\n      for (let i = 0; i < functions.length; i++) {\n        const source = functions[i].toString();\n        const name = utils.getFunctionNameFromString(source);\n        settingsCopy.subKernels.push({\n          name,\n          source,\n          property: i,\n        });\n      }\n    } else {\n      settingsCopy.subKernels = [];\n      const functions = arguments[0];\n      for (let p in functions) {\n        if (!functions.hasOwnProperty(p)) continue;\n        const source = functions[p].toString();\n        const name = utils.getFunctionNameFromString(source);\n        settingsCopy.subKernels.push({\n          name: name || p,\n          source,\n          property: p,\n        });\n      }\n    }\n    return this.createKernel(fn, settingsCopy);\n  }\n\n  combineKernels() {\n    const firstKernel = arguments[0];\n    const combinedKernel = arguments[arguments.length - 1];\n    if (firstKernel.kernel.constructor.mode === 'cpu') return combinedKernel;\n    const canvas = arguments[0].canvas;\n    const context = arguments[0].context;\n    const max = arguments.length - 1;\n    for (let i = 0; i < max; i++) {\n      arguments[i]\n        .setCanvas(canvas)\n        .setContext(context)\n        .setPipeline(true);\n    }\n\n    return function() {\n      const texture = combinedKernel.apply(this, arguments);\n      if (texture.toArray) {\n        return texture.toArray();\n      }\n      return texture;\n    };\n  }\n\n  setFunctions(functions) {\n    this.functions = functions;\n    return this;\n  }\n\n  setNativeFunctions(nativeFunctions) {\n    this.nativeFunctions = nativeFunctions;\n    return this;\n  }\n\n  addFunction(source, settings) {\n    this.functions.push({ source, settings });\n    return this;\n  }\n\n  addNativeFunction(name, source, settings) {\n    if (this.kernels.length > 0) {\n      throw new Error('Cannot call \"addNativeFunction\" after \"createKernels\" has been called.');\n    }\n    this.nativeFunctions.push(Object.assign({ name, source }, settings));\n    return this;\n  }\n\n  injectNative(source) {\n    this.injectedNative = source;\n    return this;\n  }\n\n  destroy() {\n    return new Promise((resolve, reject) => {\n      if (!this.kernels) {\n        resolve();\n      }\n      setTimeout(() => {\n        try {\n          for (let i = 0; i < this.kernels.length; i++) {\n            this.kernels[i].destroy(true); \n          }\n          let firstKernel = this.kernels[0];\n          if (firstKernel) {\n            if (firstKernel.kernel) {\n              firstKernel = firstKernel.kernel;\n            }\n            if (firstKernel.constructor.destroyContext) {\n              firstKernel.constructor.destroyContext(this.context);\n            }\n          }\n        } catch (e) {\n          reject(e);\n        }\n        resolve();\n      }, 0);\n    });\n  }\n}\n\n\nfunction upgradeDeprecatedCreateKernelSettings(settings) {\n  if (!settings) {\n    return {};\n  }\n  const upgradedSettings = Object.assign({}, settings);\n\n  if (settings.hasOwnProperty('floatOutput')) {\n    utils.warnDeprecated('setting', 'floatOutput', 'precision');\n    upgradedSettings.precision = settings.floatOutput ? 'single' : 'unsigned';\n  }\n  if (settings.hasOwnProperty('outputToTexture')) {\n    utils.warnDeprecated('setting', 'outputToTexture', 'pipeline');\n    upgradedSettings.pipeline = Boolean(settings.outputToTexture);\n  }\n  if (settings.hasOwnProperty('outputImmutable')) {\n    utils.warnDeprecated('setting', 'outputImmutable', 'immutable');\n    upgradedSettings.immutable = Boolean(settings.outputImmutable);\n  }\n  if (settings.hasOwnProperty('floatTextures')) {\n    utils.warnDeprecated('setting', 'floatTextures', 'optimizeFloatMemory');\n    upgradedSettings.optimizeFloatMemory = Boolean(settings.floatTextures);\n  }\n  return upgradedSettings;\n}\n\nmodule.exports = {\n  GPU,\n  kernelOrder,\n  kernelTypes\n};\n},{\"./backend/cpu/kernel\":8,\"./backend/headless-gl/kernel\":34,\"./backend/kernel\":36,\"./backend/web-gl/kernel\":70,\"./backend/web-gl2/kernel\":105,\"./kernel-run-shortcut\":111,\"./utils\":114,\"gpu-mock.js\":4}],109:[function(require,module,exports){\nconst { GPU } = require('./gpu');\nconst { alias } = require('./alias');\nconst { utils } = require('./utils');\nconst { Input, input } = require('./input');\nconst { Texture } = require('./texture');\nconst { FunctionBuilder } = require('./backend/function-builder');\nconst { FunctionNode } = require('./backend/function-node');\nconst { CPUFunctionNode } = require('./backend/cpu/function-node');\nconst { CPUKernel } = require('./backend/cpu/kernel');\n\nconst { HeadlessGLKernel } = require('./backend/headless-gl/kernel');\n\nconst { WebGLFunctionNode } = require('./backend/web-gl/function-node');\nconst { WebGLKernel } = require('./backend/web-gl/kernel');\nconst { kernelValueMaps: webGLKernelValueMaps } = require('./backend/web-gl/kernel-value-maps');\n\nconst { WebGL2FunctionNode } = require('./backend/web-gl2/function-node');\nconst { WebGL2Kernel } = require('./backend/web-gl2/kernel');\nconst { kernelValueMaps: webGL2KernelValueMaps } = require('./backend/web-gl2/kernel-value-maps');\n\nconst { GLKernel } = require('./backend/gl/kernel');\n\nconst { Kernel } = require('./backend/kernel');\n\nconst { FunctionTracer } = require('./backend/function-tracer');\n\nconst mathRandom = require('./plugins/math-random-uniformly-distributed');\n\nmodule.exports = {\n  alias,\n  CPUFunctionNode,\n  CPUKernel,\n  GPU,\n  FunctionBuilder,\n  FunctionNode,\n  HeadlessGLKernel,\n  Input,\n  input,\n  Texture,\n  utils,\n\n  WebGL2FunctionNode,\n  WebGL2Kernel,\n  webGL2KernelValueMaps,\n\n  WebGLFunctionNode,\n  WebGLKernel,\n  webGLKernelValueMaps,\n\n  GLKernel,\n  Kernel,\n  FunctionTracer,\n\n  plugins: {\n    mathRandom\n  }\n};\n},{\"./alias\":5,\"./backend/cpu/function-node\":6,\"./backend/cpu/kernel\":8,\"./backend/function-builder\":9,\"./backend/function-node\":10,\"./backend/function-tracer\":11,\"./backend/gl/kernel\":13,\"./backend/headless-gl/kernel\":34,\"./backend/kernel\":36,\"./backend/web-gl/function-node\":38,\"./backend/web-gl/kernel\":70,\"./backend/web-gl/kernel-value-maps\":39,\"./backend/web-gl2/function-node\":73,\"./backend/web-gl2/kernel\":105,\"./backend/web-gl2/kernel-value-maps\":74,\"./gpu\":108,\"./input\":110,\"./plugins/math-random-uniformly-distributed\":112,\"./texture\":113,\"./utils\":114}],110:[function(require,module,exports){\nclass Input {\n  constructor(value, size) {\n    this.value = value;\n    if (Array.isArray(size)) {\n      this.size = size;\n    } else {\n      this.size = new Int32Array(3);\n      if (size.z) {\n        this.size = new Int32Array([size.x, size.y, size.z]);\n      } else if (size.y) {\n        this.size = new Int32Array([size.x, size.y]);\n      } else {\n        this.size = new Int32Array([size.x]);\n      }\n    }\n\n    const [w, h, d] = this.size;\n    if (d) {\n      if (this.value.length !== (w * h * d)) {\n        throw new Error(`Input size ${this.value.length} does not match ${w} * ${h} * ${d} = ${(h * w * d)}`);\n      }\n    } else if (h) {\n      if (this.value.length !== (w * h)) {\n        throw new Error(`Input size ${this.value.length} does not match ${w} * ${h} = ${(h * w)}`);\n      }\n    } else {\n      if (this.value.length !== w) {\n        throw new Error(`Input size ${this.value.length} does not match ${w}`);\n      }\n    }\n\n  }\n\n  toArray() {\n    const { utils } = require('./utils');\n    const [w, h, d] = this.size;\n    if (d) {\n      return utils.erectMemoryOptimized3DFloat(this.value.subarray ? this.value : new Float32Array(this.value), w, h, d);\n    } else if (h) {\n      return utils.erectMemoryOptimized2DFloat(this.value.subarray ? this.value : new Float32Array(this.value), w, h);\n    } else {\n      return this.value;\n    }\n  }\n}\n\nfunction input(value, size) {\n  return new Input(value, size);\n}\n\nmodule.exports = {\n  Input,\n  input\n};\n},{\"./utils\":114}],111:[function(require,module,exports){\nconst { utils } = require('./utils');\n\nfunction kernelRunShortcut(kernel) {\n  let run = function() {\n    kernel.build.apply(kernel, arguments);\n    run = function() {\n      let result = kernel.run.apply(kernel, arguments);\n      if (kernel.switchingKernels) {\n        const reasons = kernel.resetSwitchingKernels();\n        const newKernel = kernel.onRequestSwitchKernel(reasons, arguments, kernel);\n        shortcut.kernel = kernel = newKernel;\n        result = newKernel.run.apply(newKernel, arguments);\n      }\n      if (kernel.renderKernels) {\n        return kernel.renderKernels();\n      } else if (kernel.renderOutput) {\n        return kernel.renderOutput();\n      } else {\n        return result;\n      }\n    };\n    return run.apply(kernel, arguments);\n  };\n  const shortcut = function() {\n    return run.apply(kernel, arguments);\n  };\n  shortcut.exec = function() {\n    return new Promise((accept, reject) => {\n      try {\n        accept(run.apply(this, arguments));\n      } catch (e) {\n        reject(e);\n      }\n    });\n  };\n  shortcut.replaceKernel = function(replacementKernel) {\n    kernel = replacementKernel;\n    bindKernelToShortcut(kernel, shortcut);\n  };\n\n  bindKernelToShortcut(kernel, shortcut);\n  return shortcut;\n}\n\nfunction bindKernelToShortcut(kernel, shortcut) {\n  if (shortcut.kernel) {\n    shortcut.kernel = kernel;\n    return;\n  }\n  const properties = utils.allPropertiesOf(kernel);\n  for (let i = 0; i < properties.length; i++) {\n    const property = properties[i];\n    if (property[0] === '_' && property[1] === '_') continue;\n    if (typeof kernel[property] === 'function') {\n      if (property.substring(0, 3) === 'add' || property.substring(0, 3) === 'set') {\n        shortcut[property] = function() {\n          shortcut.kernel[property].apply(shortcut.kernel, arguments);\n          return shortcut;\n        };\n      } else {\n        shortcut[property] = function() {\n          return shortcut.kernel[property].apply(shortcut.kernel, arguments);\n        };\n      }\n    } else {\n      shortcut.__defineGetter__(property, () => shortcut.kernel[property]);\n      shortcut.__defineSetter__(property, (value) => {\n        shortcut.kernel[property] = value;\n      });\n    }\n  }\n  shortcut.kernel = kernel;\n}\nmodule.exports = {\n  kernelRunShortcut\n};\n},{\"./utils\":114}],112:[function(require,module,exports){\nconst source = `// https://www.shadertoy.com/view/4t2SDh\n//note: uniformly distributed, normalized rand, [0,1]\nhighp float randomSeedShift = 1.0;\nhighp float slide = 1.0;\nuniform highp float randomSeed1;\nuniform highp float randomSeed2;\n\nhighp float nrand(highp vec2 n) {\n  highp float result = fract(sin(dot((n.xy + 1.0) * vec2(randomSeed1 * slide, randomSeed2 * randomSeedShift), vec2(12.9898, 78.233))) * 43758.5453);\n  randomSeedShift = result;\n  if (randomSeedShift > 0.5) {\n    slide += 0.00009; \n  } else {\n    slide += 0.0009;\n  }\n  return result;\n}`;\n\nconst name = 'math-random-uniformly-distributed';\n\nconst functionMatch = `Math.random()`;\n\nconst functionReplace = `nrand(vTexCoord)`;\n\nconst functionReturnType = 'Number';\nconst onBeforeRun = (kernel) => {\n  kernel.setUniform1f('randomSeed1', Math.random());\n  kernel.setUniform1f('randomSeed2', Math.random());\n};\n\nconst plugin = {\n  name,\n  onBeforeRun,\n  functionMatch,\n  functionReplace,\n  functionReturnType,\n  source\n};\n\nmodule.exports = plugin;\n},{}],113:[function(require,module,exports){\nclass Texture {\n  constructor(settings) {\n    const {\n      texture,\n      size,\n      dimensions,\n      output,\n      context,\n      type = 'NumberTexture',\n      kernel,\n      internalFormat,\n      textureFormat\n    } = settings;\n    if (!output) throw new Error('settings property \"output\" required.');\n    if (!context) throw new Error('settings property \"context\" required.');\n    if (!texture) throw new Error('settings property \"texture\" required.');\n    if (!kernel) throw new Error('settings property \"kernel\" required.');\n    this.texture = texture;\n    if (texture._refs) {\n      texture._refs++;\n    } else {\n      texture._refs = 1;\n    }\n    this.size = size;\n    this.dimensions = dimensions;\n    this.output = output;\n    this.context = context;\n    this.kernel = kernel;\n    this.type = type;\n    this._deleted = false;\n    this.internalFormat = internalFormat;\n    this.textureFormat = textureFormat;\n  }\n\n  toArray() {\n    throw new Error(`Not implemented on ${this.constructor.name}`);\n  }\n\n  clone() {\n    throw new Error(`Not implemented on ${this.constructor.name}`);\n  }\n\n  delete() {\n    throw new Error(`Not implemented on ${this.constructor.name}`);\n  }\n\n  clear() {\n    throw new Error(`Not implemented on ${this.constructor.name}`);\n  }\n}\n\nmodule.exports = {\n  Texture\n};\n},{}],114:[function(require,module,exports){\nconst acorn = require('acorn');\nconst { Input } = require('./input');\nconst { Texture } = require('./texture');\n\nconst FUNCTION_NAME = /function ([^(]*)/;\nconst STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\nconst ARGUMENT_NAMES = /([^\\s,]+)/g;\n\nconst utils = {\n  systemEndianness() {\n    return _systemEndianness;\n  },\n  getSystemEndianness() {\n    const b = new ArrayBuffer(4);\n    const a = new Uint32Array(b);\n    const c = new Uint8Array(b);\n    a[0] = 0xdeadbeef;\n    if (c[0] === 0xef) return 'LE';\n    if (c[0] === 0xde) return 'BE';\n    throw new Error('unknown endianness');\n  },\n\n  isFunction(funcObj) {\n    return typeof(funcObj) === 'function';\n  },\n\n  isFunctionString(fn) {\n    if (typeof fn === 'string') {\n      return (fn\n        .slice(0, 'function'.length)\n        .toLowerCase() === 'function');\n    }\n    return false;\n  },\n\n  getFunctionNameFromString(funcStr) {\n    const result = FUNCTION_NAME.exec(funcStr);\n    if (!result || result.length === 0) return null;\n    return result[1].trim();\n  },\n\n  getFunctionBodyFromString(funcStr) {\n    return funcStr.substring(funcStr.indexOf('{') + 1, funcStr.lastIndexOf('}'));\n  },\n\n  getArgumentNamesFromString(fn) {\n    const fnStr = fn.replace(STRIP_COMMENTS, '');\n    let result = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).match(ARGUMENT_NAMES);\n    if (result === null) {\n      result = [];\n    }\n    return result;\n  },\n\n  clone(obj) {\n    if (obj === null || typeof obj !== 'object' || obj.hasOwnProperty('isActiveClone')) return obj;\n\n    const temp = obj.constructor(); \n\n    for (let key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        obj.isActiveClone = null;\n        temp[key] = utils.clone(obj[key]);\n        delete obj.isActiveClone;\n      }\n    }\n\n    return temp;\n  },\n\n  isArray(array) {\n    return !isNaN(array.length);\n  },\n\n  getVariableType(value, strictIntegers) {\n    if (utils.isArray(value)) {\n      if (value.length > 0 && value[0].nodeName === 'IMG') {\n        return 'HTMLImageArray';\n      }\n      return 'Array';\n    }\n\n    switch (value.constructor) {\n      case Boolean:\n        return 'Boolean';\n      case Number:\n        if (strictIntegers && Number.isInteger(value)) {\n          return 'Integer';\n        }\n        return 'Float';\n      case Texture:\n        return value.type;\n      case Input:\n        return 'Input';\n    }\n    if ('nodeName' in value) {\n      switch (value.nodeName) {\n        case 'IMG':\n          return 'HTMLImage';\n        case 'CANVAS':\n          return 'HTMLImage';\n        case 'VIDEO':\n          return 'HTMLVideo';\n      }\n    } else if (value.hasOwnProperty('type')) {\n      return value.type;\n    } else if (typeof OffscreenCanvas !== 'undefined' && value instanceof OffscreenCanvas) {\n      return 'OffscreenCanvas';\n    } else if (typeof ImageBitmap !== 'undefined' && value instanceof ImageBitmap) {\n      return 'ImageBitmap';\n    } else if (typeof ImageData !== 'undefined' && value instanceof ImageData) {\n      return 'ImageData';\n    }\n    return 'Unknown';\n  },\n\n  getKernelTextureSize(settings, dimensions) {\n    let [w, h, d] = dimensions;\n    let texelCount = (w || 1) * (h || 1) * (d || 1);\n\n    if (settings.optimizeFloatMemory && settings.precision === 'single') {\n      w = texelCount = Math.ceil(texelCount / 4);\n    }\n    if (h > 1 && w * h === texelCount) {\n      return new Int32Array([w, h]);\n    }\n    return utils.closestSquareDimensions(texelCount);\n  },\n\n  closestSquareDimensions(length) {\n    const sqrt = Math.sqrt(length);\n    let high = Math.ceil(sqrt);\n    let low = Math.floor(sqrt);\n    while (high * low < length) {\n      high--;\n      low = Math.ceil(length / high);\n    }\n    return new Int32Array([low, Math.ceil(length / low)]);\n  },\n\n  getMemoryOptimizedFloatTextureSize(dimensions, bitRatio) {\n    const totalArea = utils.roundTo((dimensions[0] || 1) * (dimensions[1] || 1) * (dimensions[2] || 1) * (dimensions[3] || 1), 4);\n    const texelCount = totalArea / bitRatio;\n    return utils.closestSquareDimensions(texelCount);\n  },\n\n  getMemoryOptimizedPackedTextureSize(dimensions, bitRatio) {\n    const [w, h, d] = dimensions;\n    const totalArea = utils.roundTo((w || 1) * (h || 1) * (d || 1), 4);\n    const texelCount = totalArea / (4 / bitRatio);\n    return utils.closestSquareDimensions(texelCount);\n  },\n\n  roundTo(n, d) {\n    return Math.floor((n + d - 1) / d) * d;\n  },\n  getDimensions(x, pad) {\n    let ret;\n    if (utils.isArray(x)) {\n      const dim = [];\n      let temp = x;\n      while (utils.isArray(temp)) {\n        dim.push(temp.length);\n        temp = temp[0];\n      }\n      ret = dim.reverse();\n    } else if (x instanceof Texture) {\n      ret = x.output;\n    } else if (x instanceof Input) {\n      ret = x.size;\n    } else {\n      throw new Error(`Unknown dimensions of ${x}`);\n    }\n\n    if (pad) {\n      ret = Array.from(ret);\n      while (ret.length < 3) {\n        ret.push(1);\n      }\n    }\n\n    return new Int32Array(ret);\n  },\n\n  flatten2dArrayTo(array, target) {\n    let offset = 0;\n    for (let y = 0; y < array.length; y++) {\n      target.set(array[y], offset);\n      offset += array[y].length;\n    }\n  },\n\n  flatten3dArrayTo(array, target) {\n    let offset = 0;\n    for (let z = 0; z < array.length; z++) {\n      for (let y = 0; y < array[z].length; y++) {\n        target.set(array[z][y], offset);\n        offset += array[z][y].length;\n      }\n    }\n  },\n\n  flatten4dArrayTo(array, target) {\n    let offset = 0;\n    for (let l = 0; l < array.length; l++) {\n      for (let z = 0; z < array[l].length; z++) {\n        for (let y = 0; y < array[l][z].length; y++) {\n          target.set(array[l][z][y], offset);\n          offset += array[l][z][y].length;\n        }\n      }\n    }\n  },\n\n  flattenTo(array, target) {\n    if (utils.isArray(array[0])) {\n      if (utils.isArray(array[0][0])) {\n        if (utils.isArray(array[0][0][0])) {\n          utils.flatten4dArrayTo(array, target);\n        } else {\n          utils.flatten3dArrayTo(array, target);\n        }\n      } else {\n        utils.flatten2dArrayTo(array, target);\n      }\n    } else {\n      target.set(array);\n    }\n  },\n\n  splitArray(array, part) {\n    const result = [];\n    for (let i = 0; i < array.length; i += part) {\n      result.push(new array.constructor(array.buffer, i * 4 + array.byteOffset, part));\n    }\n    return result;\n  },\n\n  getAstString(source, ast) {\n    const lines = Array.isArray(source) ? source : source.split(/\\r?\\n/g);\n    const start = ast.loc.start;\n    const end = ast.loc.end;\n    const result = [];\n    if (start.line === end.line) {\n      result.push(lines[start.line - 1].substring(start.column, end.column));\n    } else {\n      result.push(lines[start.line - 1].slice(start.column));\n      for (let i = start.line; i < end.line; i++) {\n        result.push(lines[i]);\n      }\n      result.push(lines[end.line - 1].slice(0, end.column));\n    }\n    return result.join('\\n');\n  },\n\n  allPropertiesOf(obj) {\n    const props = [];\n\n    do {\n      props.push.apply(props, Object.getOwnPropertyNames(obj));\n    } while (obj = Object.getPrototypeOf(obj));\n\n    return props;\n  },\n\n  linesToString(lines) {\n    if (lines.length > 0) {\n      return lines.join(';\\n') + ';\\n';\n    } else {\n      return '\\n';\n    }\n  },\n  warnDeprecated(type, oldName, newName) {\n    if (newName) {\n      console.warn(`You are using a deprecated ${ type } \"${ oldName }\". It has been replaced with \"${ newName }\". Fixing, but please upgrade as it will soon be removed.`);\n    } else {\n      console.warn(`You are using a deprecated ${ type } \"${ oldName }\". It has been removed. Fixing, but please upgrade as it will soon be removed.`);\n    }\n  },\n  flipPixels: (pixels, width, height) => {\n    const halfHeight = height / 2 | 0; \n    const bytesPerRow = width * 4;\n    const temp = new Uint8ClampedArray(width * 4);\n    const result = pixels.slice(0);\n    for (let y = 0; y < halfHeight; ++y) {\n      const topOffset = y * bytesPerRow;\n      const bottomOffset = (height - y - 1) * bytesPerRow;\n\n      temp.set(result.subarray(topOffset, topOffset + bytesPerRow));\n\n      result.copyWithin(topOffset, bottomOffset, bottomOffset + bytesPerRow);\n\n      result.set(temp, bottomOffset);\n    }\n    return result;\n  },\n  erectPackedFloat: (array, width) => {\n    return array.subarray(0, width);\n  },\n  erect2DPackedFloat: (array, width, height) => {\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const xStart = y * width;\n      const xEnd = xStart + width;\n      yResults[y] = array.subarray(xStart, xEnd);\n    }\n    return yResults;\n  },\n  erect3DPackedFloat: (array, width, height, depth) => {\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xStart = (z * height * width) + y * width;\n        const xEnd = xStart + width;\n        yResults[y] = array.subarray(xStart, xEnd);\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectMemoryOptimizedFloat: (array, width) => {\n    return array.subarray(0, width);\n  },\n  erectMemoryOptimized2DFloat: (array, width, height) => {\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const offset = y * width;\n      yResults[y] = array.subarray(offset, offset + width);\n    }\n    return yResults;\n  },\n  erectMemoryOptimized3DFloat: (array, width, height, depth) => {\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const offset = (z * height * width) + (y * width);\n        yResults[y] = array.subarray(offset, offset + width);\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectFloat: (array, width) => {\n    const xResults = new Float32Array(width);\n    let i = 0;\n    for (let x = 0; x < width; x++) {\n      xResults[x] = array[i];\n      i += 4;\n    }\n    return xResults;\n  },\n  erect2DFloat: (array, width, height) => {\n    const yResults = new Array(height);\n    let i = 0;\n    for (let y = 0; y < height; y++) {\n      const xResults = new Float32Array(width);\n      for (let x = 0; x < width; x++) {\n        xResults[x] = array[i];\n        i += 4;\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DFloat: (array, width, height, depth) => {\n    const zResults = new Array(depth);\n    let i = 0;\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Float32Array(width);\n        for (let x = 0; x < width; x++) {\n          xResults[x] = array[i];\n          i += 4;\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectArray2: (array, width) => {\n    const xResults = new Array(width);\n    const xResultsMax = width * 4;\n    let i = 0;\n    for (let x = 0; x < xResultsMax; x += 4) {\n      xResults[i++] = array.subarray(x, x + 2);\n    }\n    return xResults;\n  },\n  erect2DArray2: (array, width, height) => {\n    const yResults = new Array(height);\n    const XResultsMax = width * 4;\n    for (let y = 0; y < height; y++) {\n      const xResults = new Array(width);\n      const offset = y * XResultsMax;\n      let i = 0;\n      for (let x = 0; x < XResultsMax; x += 4) {\n        xResults[i++] = array.subarray(x + offset, x + offset + 2);\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DArray2: (array, width, height, depth) => {\n    const xResultsMax = width * 4;\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Array(width);\n        const offset = (z * xResultsMax * height) + (y * xResultsMax);\n        let i = 0;\n        for (let x = 0; x < xResultsMax; x += 4) {\n          xResults[i++] = array.subarray(x + offset, x + offset + 2);\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectArray3: (array, width) => {\n    const xResults = new Array(width);\n    const xResultsMax = width * 4;\n    let i = 0;\n    for (let x = 0; x < xResultsMax; x += 4) {\n      xResults[i++] = array.subarray(x, x + 3);\n    }\n    return xResults;\n  },\n  erect2DArray3: (array, width, height) => {\n    const xResultsMax = width * 4;\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const xResults = new Array(width);\n      const offset = y * xResultsMax;\n      let i = 0;\n      for (let x = 0; x < xResultsMax; x += 4) {\n        xResults[i++] = array.subarray(x + offset, x + offset + 3);\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DArray3: (array, width, height, depth) => {\n    const xResultsMax = width * 4;\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Array(width);\n        const offset = (z * xResultsMax * height) + (y * xResultsMax);\n        let i = 0;\n        for (let x = 0; x < xResultsMax; x += 4) {\n          xResults[i++] = array.subarray(x + offset, x + offset + 3);\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectArray4: (array, width) => {\n    const xResults = new Array(array);\n    const xResultsMax = width * 4;\n    let i = 0;\n    for (let x = 0; x < xResultsMax; x += 4) {\n      xResults[i++] = array.subarray(x, x + 4);\n    }\n    return xResults;\n  },\n  erect2DArray4: (array, width, height) => {\n    const xResultsMax = width * 4;\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const xResults = new Array(width);\n      const offset = y * xResultsMax;\n      let i = 0;\n      for (let x = 0; x < xResultsMax; x += 4) {\n        xResults[i++] = array.subarray(x + offset, x + offset + 4);\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DArray4: (array, width, height, depth) => {\n    const xResultsMax = width * 4;\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Array(width);\n        const offset = (z * xResultsMax * height) + (y * xResultsMax);\n        let i = 0;\n        for (let x = 0; x < xResultsMax; x += 4) {\n          xResults[i++] = array.subarray(x + offset, x + offset + 4);\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n\n  flattenFunctionToString: (source, settings) => {\n    const { findDependency, thisLookup, doNotDefine } = settings;\n    let flattened = settings.flattened;\n    if (!flattened) {\n      flattened = settings.flattened = {};\n    }\n    const ast = acorn.parse(source);\n    const functionDependencies = [];\n    let indent = 0;\n\n    function flatten(ast) {\n      if (Array.isArray(ast)) {\n        const results = [];\n        for (let i = 0; i < ast.length; i++) {\n          results.push(flatten(ast[i]));\n        }\n        return results.join('');\n      }\n      switch (ast.type) {\n        case 'Program':\n          return flatten(ast.body) + (ast.body[0].type === 'VariableDeclaration' ? ';' : '');\n        case 'FunctionDeclaration':\n          return `function ${ast.id.name}(${ast.params.map(flatten).join(', ')}) ${ flatten(ast.body) }`;\n        case 'BlockStatement': {\n          const result = [];\n          indent += 2;\n          for (let i = 0; i < ast.body.length; i++) {\n            const flat = flatten(ast.body[i]);\n            if (flat) {\n              result.push(' '.repeat(indent) + flat, ';\\n');\n            }\n          }\n          indent -= 2;\n          return `{\\n${result.join('')}}`;\n        }\n        case 'VariableDeclaration':\n          const declarations = utils.normalizeDeclarations(ast)\n            .map(flatten)\n            .filter(r => r !== null);\n          if (declarations.length < 1) {\n            return '';\n          } else {\n            return `${ast.kind} ${declarations.join(',')}`;\n          }\n          case 'VariableDeclarator':\n            if (ast.init.object && ast.init.object.type === 'ThisExpression') {\n              const lookup = thisLookup(ast.init.property.name, true);\n              if (lookup) {\n                return `${ast.id.name} = ${flatten(ast.init)}`;\n              } else {\n                return null;\n              }\n            } else {\n              return `${ast.id.name} = ${flatten(ast.init)}`;\n            }\n            case 'CallExpression': {\n              if (ast.callee.property.name === 'subarray') {\n                return `${flatten(ast.callee.object)}.${flatten(ast.callee.property)}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              }\n              if (ast.callee.object.name === 'gl' || ast.callee.object.name === 'context') {\n                return `${flatten(ast.callee.object)}.${flatten(ast.callee.property)}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              }\n              if (ast.callee.object.type === 'ThisExpression') {\n                functionDependencies.push(findDependency('this', ast.callee.property.name));\n                return `${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              } else if (ast.callee.object.name) {\n                const foundSource = findDependency(ast.callee.object.name, ast.callee.property.name);\n                if (foundSource === null) {\n                  return `${ast.callee.object.name}.${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n                } else {\n                  functionDependencies.push(foundSource);\n                  return `${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n                }\n              } else if (ast.callee.object.type === 'MemberExpression') {\n                return `${flatten(ast.callee.object)}.${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              } else {\n                throw new Error('unknown ast.callee');\n              }\n            }\n            case 'ReturnStatement':\n              return `return ${flatten(ast.argument)}`;\n            case 'BinaryExpression':\n              return `(${flatten(ast.left)}${ast.operator}${flatten(ast.right)})`;\n            case 'UnaryExpression':\n              if (ast.prefix) {\n                return `${ast.operator} ${flatten(ast.argument)}`;\n              } else {\n                return `${flatten(ast.argument)} ${ast.operator}`;\n              }\n              case 'ExpressionStatement':\n                return `${flatten(ast.expression)}`;\n              case 'SequenceExpression':\n                return `(${flatten(ast.expressions)})`;\n              case 'ArrowFunctionExpression':\n                return `(${ast.params.map(flatten).join(', ')}) => ${flatten(ast.body)}`;\n              case 'Literal':\n                return ast.raw;\n              case 'Identifier':\n                return ast.name;\n              case 'MemberExpression':\n                if (ast.object.type === 'ThisExpression') {\n                  return thisLookup(ast.property.name);\n                }\n                if (ast.computed) {\n                  return `${flatten(ast.object)}[${flatten(ast.property)}]`;\n                }\n                return flatten(ast.object) + '.' + flatten(ast.property);\n              case 'ThisExpression':\n                return 'this';\n              case 'NewExpression':\n                return `new ${flatten(ast.callee)}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              case 'ForStatement':\n                return `for (${flatten(ast.init)};${flatten(ast.test)};${flatten(ast.update)}) ${flatten(ast.body)}`;\n              case 'AssignmentExpression':\n                return `${flatten(ast.left)}${ast.operator}${flatten(ast.right)}`;\n              case 'UpdateExpression':\n                return `${flatten(ast.argument)}${ast.operator}`;\n              case 'IfStatement':\n                return `if (${flatten(ast.test)}) ${flatten(ast.consequent)}`;\n              case 'ThrowStatement':\n                return `throw ${flatten(ast.argument)}`;\n              case 'ObjectPattern':\n                return ast.properties.map(flatten).join(', ');\n              case 'ArrayPattern':\n                return ast.elements.map(flatten).join(', ');\n              case 'DebuggerStatement':\n                return 'debugger;';\n              case 'ConditionalExpression':\n                return `${flatten(ast.test)}?${flatten(ast.consequent)}:${flatten(ast.alternate)}`;\n              case 'Property':\n                if (ast.kind === 'init') {\n                  return flatten(ast.key);\n                }\n      }\n      throw new Error(`unhandled ast.type of ${ ast.type }`);\n    }\n    const result = flatten(ast);\n    if (functionDependencies.length > 0) {\n      const flattenedFunctionDependencies = [];\n      for (let i = 0; i < functionDependencies.length; i++) {\n        const functionDependency = functionDependencies[i];\n        if (!flattened[functionDependency]) {\n          flattened[functionDependency] = true;\n        }\n        functionDependency ? flattenedFunctionDependencies.push(utils.flattenFunctionToString(functionDependency, settings) + '\\n') : '';\n      }\n      return flattenedFunctionDependencies.join('') + result;\n    }\n    return result;\n  },\n\n  normalizeDeclarations: (ast) => {\n    if (ast.type !== 'VariableDeclaration') throw new Error('Ast is not of type \"VariableDeclaration\"');\n    const normalizedDeclarations = [];\n    for (let declarationIndex = 0; declarationIndex < ast.declarations.length; declarationIndex++) {\n      const declaration = ast.declarations[declarationIndex];\n      if (declaration.id && declaration.id.type === 'ObjectPattern' && declaration.id.properties) {\n        const { properties } = declaration.id;\n        for (let propertyIndex = 0; propertyIndex < properties.length; propertyIndex++) {\n          const property = properties[propertyIndex];\n          if (property.value.type === 'ObjectPattern' && property.value.properties) {\n            for (let subPropertyIndex = 0; subPropertyIndex < property.value.properties.length; subPropertyIndex++) {\n              const subProperty = property.value.properties[subPropertyIndex];\n              if (subProperty.type === 'Property') {\n                normalizedDeclarations.push({\n                  type: 'VariableDeclarator',\n                  id: {\n                    type: 'Identifier',\n                    name: subProperty.key.name\n                  },\n                  init: {\n                    type: 'MemberExpression',\n                    object: {\n                      type: 'MemberExpression',\n                      object: declaration.init,\n                      property: {\n                        type: 'Identifier',\n                        name: property.key.name\n                      },\n                      computed: false\n                    },\n                    property: {\n                      type: 'Identifier',\n                      name: subProperty.key.name\n                    },\n                    computed: false\n                  }\n                });\n              } else {\n                throw new Error('unexpected state');\n              }\n            }\n          } else if (property.value.type === 'Identifier') {\n            normalizedDeclarations.push({\n              type: 'VariableDeclarator',\n              id: {\n                type: 'Identifier',\n                name: property.value && property.value.name ? property.value.name : property.key.name\n              },\n              init: {\n                type: 'MemberExpression',\n                object: declaration.init,\n                property: {\n                  type: 'Identifier',\n                  name: property.key.name\n                },\n                computed: false\n              }\n            });\n          } else {\n            throw new Error('unexpected state');\n          }\n        }\n      } else if (declaration.id && declaration.id.type === 'ArrayPattern' && declaration.id.elements) {\n        const { elements } = declaration.id;\n        for (let elementIndex = 0; elementIndex < elements.length; elementIndex++) {\n          const element = elements[elementIndex];\n          if (element.type === 'Identifier') {\n            normalizedDeclarations.push({\n              type: 'VariableDeclarator',\n              id: {\n                type: 'Identifier',\n                name: element.name\n              },\n              init: {\n                type: 'MemberExpression',\n                object: declaration.init,\n                property: {\n                  type: 'Literal',\n                  value: elementIndex,\n                  raw: elementIndex.toString(),\n                  start: element.start,\n                  end: element.end\n                },\n                computed: true\n              }\n            });\n          } else {\n            throw new Error('unexpected state');\n          }\n        }\n      } else {\n        normalizedDeclarations.push(declaration);\n      }\n    }\n    return normalizedDeclarations;\n  },\n\n  splitHTMLImageToRGB: (gpu, image) => {\n    const rKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.r * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: { a: 'HTMLImage' },\n    });\n    const gKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.g * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: { a: 'HTMLImage' },\n    });\n    const bKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.b * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: { a: 'HTMLImage' },\n    });\n    const aKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.a * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: { a: 'HTMLImage' },\n    });\n    const result = [\n      rKernel(image),\n      gKernel(image),\n      bKernel(image),\n      aKernel(image),\n    ];\n    result.rKernel = rKernel;\n    result.gKernel = gKernel;\n    result.bKernel = bKernel;\n    result.aKernel = aKernel;\n    result.gpu = gpu;\n    return result;\n  },\n\n  splitRGBAToCanvases: (gpu, rgba, width, height) => {\n    const visualKernelR = gpu.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(pixel.r / 255, 0, 0, 255);\n    }, {\n      output: [width, height],\n      graphical: true,\n      argumentTypes: { v: 'Array2D(4)' }\n    });\n    visualKernelR(rgba);\n\n    const visualKernelG = gpu.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(0, pixel.g / 255, 0, 255);\n    }, {\n      output: [width, height],\n      graphical: true,\n      argumentTypes: { v: 'Array2D(4)' }\n    });\n    visualKernelG(rgba);\n\n    const visualKernelB = gpu.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(0, 0, pixel.b / 255, 255);\n    }, {\n      output: [width, height],\n      graphical: true,\n      argumentTypes: { v: 'Array2D(4)' }\n    });\n    visualKernelB(rgba);\n\n    const visualKernelA = gpu.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(255, 255, 255, pixel.a / 255);\n    }, {\n      output: [width, height],\n      graphical: true,\n      argumentTypes: { v: 'Array2D(4)' }\n    });\n    visualKernelA(rgba);\n    return [\n      visualKernelR.canvas,\n      visualKernelG.canvas,\n      visualKernelB.canvas,\n      visualKernelA.canvas,\n    ];\n  },\n\n  getMinifySafeName: (fn) => {\n    try {\n      const ast = acorn.parse(`const value = ${fn.toString()}`);\n      const { init } = ast.body[0].declarations[0];\n      return init.body.name || init.body.body[0].argument.name;\n    } catch (e) {\n      throw new Error('Unrecognized function type.  Please use `() => yourFunctionVariableHere` or function() { return yourFunctionVariableHere; }');\n    }\n  },\n  sanitizeName: function(name) {\n    if (dollarSign.test(name)) {\n      name = name.replace(dollarSign, 'S_S');\n    }\n    if (doubleUnderscore.test(name)) {\n      name = name.replace(doubleUnderscore, 'U_U');\n    } else if (singleUnderscore.test(name)) {\n      name = name.replace(singleUnderscore, 'u_u');\n    }\n    return name;\n  }\n};\n\nconst dollarSign = /\\$/;\nconst doubleUnderscore = /__/;\nconst singleUnderscore = /_/;\n\nconst _systemEndianness = utils.getSystemEndianness();\n\nmodule.exports = {\n  utils\n};\n},{\"./input\":110,\"./texture\":113,\"acorn\":1}]},{},[107])(107)\n});\n"],"names":[],"version":3,"file":"index.329c6ca4.js.map"}